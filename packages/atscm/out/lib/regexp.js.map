{"version":3,"sources":["../../src/lib/regexp.ts"],"names":["specialChars","specialCharsRegExp","RegExp","map","c","join","escapeForRegExp","source","replace"],"mappings":";;;;;;;;AAAA;AACO,MAAMA,YAAY,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,CAArB;AAEP;;;AACO,MAAMC,kBAAkB,GAAG,IAAIC,MAAJ,CAC/B,IAAGF,YAAY,CAACG,GAAb,CAAkBC,CAAD,IAAQ,KAAIA,CAAE,EAA/B,EAAkCC,IAAlC,CAAuC,GAAvC,CAA4C,GADhB,EAEhC,GAFgC,CAA3B;AAKP;;;;;;;AAIO,SAASC,eAAT,CAAyBC,MAAzB,EAAyC;AAC9C,SAAOA,MAAM,CAACC,OAAP,CAAeP,kBAAf,EAAmC,MAAnC,CAAP;AACD","sourcesContent":["/** Special characters in regular expressions. */\nexport const specialChars = ['[', '\\\\', '^', '$', '.', '|', '?', '*', '+', '(', ')', ']'];\n\n/** A regular expression that matches all special characters in regular expressions. */\nexport const specialCharsRegExp = new RegExp(\n  `(${specialChars.map((c) => `\\\\${c}`).join('|')})`,\n  'g'\n);\n\n/**\n * Returns a string with all special regular expression characters escaped.\n * @param source The string to escape.\n */\nexport function escapeForRegExp(source: string) {\n  return source.replace(specialCharsRegExp, '\\\\$1');\n}\n"],"file":"regexp.js"}