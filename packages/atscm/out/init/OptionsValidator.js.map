{"version":3,"sources":["../../src/init/OptionsValidator.js"],"names":["InitOptionsValidator","name","value","result","errors","match","validForNewPackages","warnings"],"mappings":";;;;;;;AAAA;;;;AAEA;;;AAGe,MAAMA,oBAAN,CAA2B;AACxC;;;;;;AAMA,SAAOC,IAAP,CAAYC,KAAZ,EAAmB;AACjB,UAAMC,MAAM,GAAG,qCAAoBD,KAApB,CAAf;;AAEA,QAAIC,MAAM,CAACC,MAAX,EAAmB;AACjB,aAAOD,MAAM,CAACC,MAAP,CAAc,CAAd,CAAP;AACD,KALgB,CAOjB;;;AACA,QAAIF,KAAK,CAACG,KAAN,CAAY,YAAZ,MAA8B,IAAlC,EAAwC;AACtC,aAAO,+BAAP;AACD;;AAED,QAAIH,KAAK,KAAK,OAAd,EAAuB;AACrB,aAAO,wBAAP;AACD;;AAED,WAAOC,MAAM,CAACG,mBAAP,GAA6B,IAA7B,GAAoCH,MAAM,CAACI,QAAP,CAAgB,CAAhB,CAA3C;AACD;;AAxBuC","sourcesContent":["import validatePackageName from 'validate-npm-package-name';\n\n/**\n * A static class containing validators for the options used when running \"atscm init\".\n */\nexport default class InitOptionsValidator {\n  /**\n   * Validates a project name to be a valid npm package name.\n   * @param {string} value The name to validate.\n   * @return {boolean|string} Returns true if `value` is a valid npm package name, or an error\n   * message otherwise.\n   */\n  static name(value) {\n    const result = validatePackageName(value);\n\n    if (result.errors) {\n      return result.errors[0];\n    }\n\n    // First letter must be a letter\n    if (value.match(/^@?[a-z]+/i) === null) {\n      return 'name must start with a letter';\n    }\n\n    if (value === 'atscm') {\n      return \"'atscm' is not allowed\";\n    }\n\n    return result.validForNewPackages ? true : result.warnings[0];\n  }\n}\n"],"file":"OptionsValidator.js"}