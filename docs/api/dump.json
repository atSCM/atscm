[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Gulpfile.js",
    "content": "// Register tasks\nexport { default as pull } from './tasks/pull';\nexport { default as push } from './tasks/push';\n",
    "static": true,
    "longname": "src/Gulpfile.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "file",
    "name": "src/config/ProjectConfig.js",
    "content": "/**\n * The path to the project's configuration file.\n */\nexport const path = process.env.ATSCM_CONFIG_PATH;\n\n/**\n * The current project's configuration.\n * @type {Atviseproject}\n */\nconst config = require(path).default;\n\nexport default config;\n",
    "static": true,
    "longname": "src/config/ProjectConfig.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "path",
    "memberof": "src/config/ProjectConfig.js",
    "static": true,
    "longname": "src/config/ProjectConfig.js~path",
    "access": null,
    "export": true,
    "importPath": "atscm/src/config/ProjectConfig.js",
    "importStyle": "{path}",
    "description": "The path to the project's configuration file.",
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "config",
    "memberof": "src/config/ProjectConfig.js",
    "static": true,
    "longname": "src/config/ProjectConfig.js~config",
    "access": null,
    "export": true,
    "importPath": "atscm/src/config/ProjectConfig.js",
    "importStyle": "config",
    "description": "The current project's configuration.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Atviseproject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "file",
    "name": "src/index.js",
    "content": "export { default as Atviseproject } from './lib/config/Atviseproject';\nexport { default as NodeId } from './lib/server/NodeId';\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 5,
    "kind": "file",
    "name": "src/init/InitTask.js",
    "content": "import { join } from 'path';\nimport { src, dest } from 'gulp';\nimport handlebars from 'gulp-compile-handlebars';\nimport helpers from 'handlebars-helpers';\nimport streamToPromise from 'stream-to-promise';\nimport deps from '../../res/init/templates/dependencies.json';\n\n/**\n * The action run when running \"atscm init\".\n */\nexport default class InitTask {\n\n  /**\n   * Returns the globs of the processed files for the given config lanugage.\n   * @param {String} langId The configuration language used.\n   * @return {String[]} Globs of the files to handle.\n   */\n  static filesToHandle(langId) {\n    return [\n      './general/**/*',\n      './general/**/.*',\n      `./lang/${langId}/**/*.*`,\n      `./lang/${langId}/**/.*`,\n    ].map(p => join(__dirname, '../../res/init/templates', p));\n  }\n\n  /**\n   * Runs the task with the given options.\n   * @param {Object} options The options to use.\n   * @return {Promise<{ install: String[] }, Error>} Resolved with information on further actions\n   * to run or rejected if the task failed.\n   */\n  static run(options) {\n    const langId = options.configLang;\n\n    const install = deps.lang[langId];\n\n    const stream = src(this.filesToHandle(langId))\n      .pipe(handlebars(options, {\n        helpers: helpers(),\n      }))\n      .pipe(dest('./'));\n\n    return streamToPromise(stream)\n      .then(() => ({ install }));\n  }\n\n}\n",
    "static": true,
    "longname": "src/init/InitTask.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 6,
    "kind": "class",
    "name": "InitTask",
    "memberof": "src/init/InitTask.js",
    "static": true,
    "longname": "src/init/InitTask.js~InitTask",
    "access": null,
    "export": true,
    "importPath": "atscm/src/init/InitTask.js",
    "importStyle": "InitTask",
    "description": "The action run when running \"atscm init\".",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "filesToHandle",
    "memberof": "src/init/InitTask.js~InitTask",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/init/InitTask.js~InitTask.filesToHandle",
    "access": null,
    "description": "Returns the globs of the processed files for the given config lanugage.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "langId",
        "description": "The configuration language used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": "Globs of the files to handle."
    }
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "run",
    "memberof": "src/init/InitTask.js~InitTask",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/init/InitTask.js~InitTask.run",
    "access": null,
    "description": "Runs the task with the given options.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{ install: String[] }, Error>"
      ],
      "spread": false,
      "description": "Resolved with information on further actions\nto run or rejected if the task failed."
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/init/Options.js",
    "content": "import { basename } from 'path';\nimport InitOption from '../lib/init/Option';\nimport Atviseproject from '../lib/config/Atviseproject';\nimport Validator from './OptionsValidator';\n\n/**\n * A map providing dirnames for config langs\n * @type {Map<String, String>}\n */\nexport const ConfigLangs = {\n  'ES2015 JavaScript': 'es2015',\n  'Regular JavaScript': 'es5',\n  TypeScript: 'ts',\n  'CoffeeScript (alpha)': 'coffee',\n};\n\n/**\n * Options available for the \"atscm init\" command.\n * @type {Object}\n * @property {InitOption<input>} name The new project's name.\n * @property {InitOption<input>} description The new project's description.\n * @property {InitOption<input>} author The new project's author.\n * @property {InitOption<input>} atviseHost The new project's atvise server host.\n * @property {InitOption<input>} atvisePortOpc The new project's atvise server OPC port.\n * @property {InitOption<input>} atvisePortHttp The new project's atvise server HTTP port.\n * @property {InitOption<confirm>} useLogin If the new porject's atvise server requires login.\n * @property {InitOption<input>} atviseUsername The new project's atvise server login name.\n * @property {InitOption<input>} atvisePassword The new project's atvise server login password.\n * @property {InitOption<list>} configLang The language to use for the new project's configuration.\n */\nexport const InitOptions = {\n  name: new InitOption({\n    message: 'Project name',\n    default: basename(process.cwd()),\n    validate: Validator.name,\n  }),\n  description: new InitOption('Project description'),\n  author: new InitOption('Project author'),\n  atviseHost: new InitOption('Atvise server host', Atviseproject.host),\n  atvisePortOpc: new InitOption('Atvise OPC port', Atviseproject.port.opc),\n  atvisePortHttp: new InitOption('Atvise HTTP port', Atviseproject.port.http),\n  useLogin: new InitOption({\n    message: 'Does your atvise server require login',\n    type: 'confirm',\n    default: false,\n  }),\n  atviseUser: new InitOption({\n    message: ' - Username',\n    when: answers => answers.useLogin,\n  }),\n  atvisePassword: new InitOption({\n    message: ' - Password',\n    when: answers => answers.useLogin,\n  }),\n  configLang: new InitOption({\n    type: 'list',\n    message: 'Configuration language to use',\n    choices: Object.keys(ConfigLangs).map(name => ({ name, value: ConfigLangs[name] })),\n  }),\n};\n\n/**\n * {@link InitOptions}, exported as an array. Required to run {@link Inquirer}.\n * @type {InitOption[]}\n */\nconst InitOptionsAsArray = Object.keys(InitOptions)\n  .map(name => Object.assign({ name }, InitOptions[name]));\n\nexport default InitOptionsAsArray;\n",
    "static": true,
    "longname": "src/init/Options.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "ConfigLangs",
    "memberof": "src/init/Options.js",
    "static": true,
    "longname": "src/init/Options.js~ConfigLangs",
    "access": null,
    "export": true,
    "importPath": "atscm/src/init/Options.js",
    "importStyle": "{ConfigLangs}",
    "description": "A map providing dirnames for config langs",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Map<String, String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "InitOptions",
    "memberof": "src/init/Options.js",
    "static": true,
    "longname": "src/init/Options.js~InitOptions",
    "access": null,
    "export": true,
    "importPath": "atscm/src/init/Options.js",
    "importStyle": "{InitOptions}",
    "description": "Options available for the \"atscm init\" command.",
    "lineNumber": 31,
    "properties": [
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The new project's name."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The new project's description."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "author",
        "description": "The new project's author."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "atviseHost",
        "description": "The new project's atvise server host."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "atvisePortOpc",
        "description": "The new project's atvise server OPC port."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "atvisePortHttp",
        "description": "The new project's atvise server HTTP port."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<confirm>"
        ],
        "spread": false,
        "optional": false,
        "name": "useLogin",
        "description": "If the new porject's atvise server requires login."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "atviseUsername",
        "description": "The new project's atvise server login name."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<input>"
        ],
        "spread": false,
        "optional": false,
        "name": "atvisePassword",
        "description": "The new project's atvise server login password."
      },
      {
        "nullable": null,
        "types": [
          "InitOption<list>"
        ],
        "spread": false,
        "optional": false,
        "name": "configLang",
        "description": "The language to use for the new project's configuration."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "InitOptionsAsArray",
    "memberof": "src/init/Options.js",
    "static": true,
    "longname": "src/init/Options.js~InitOptionsAsArray",
    "access": null,
    "export": true,
    "importPath": "atscm/src/init/Options.js",
    "importStyle": "InitOptionsAsArray",
    "description": "{@link InitOptions}, exported as an array. Required to run {@link Inquirer}.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "InitOption[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "src/init/OptionsValidator.js",
    "content": "import validatePackageName from 'validate-npm-package-name';\n\n/**\n * A static class containing validators for the options used when running \"atscm init\".\n */\nexport default class InitOptionsValidator {\n\n  /**\n   * Validates a project name to be a valid npm package name.\n   * @param {String} value The name to validate.\n   * @return {Boolean|String} Returns true if `value` is a valid npm package name, or an error\n   * message otherwise.\n   */\n  static name(value) {\n    const result = validatePackageName(value);\n\n    if (result.validForNewPackages) { return true; }\n\n    if (result.errors) { return result.errors[0]; }\n\n    return result.warnings[0];\n  }\n\n}\n",
    "static": true,
    "longname": "src/init/OptionsValidator.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "class",
    "name": "InitOptionsValidator",
    "memberof": "src/init/OptionsValidator.js",
    "static": true,
    "longname": "src/init/OptionsValidator.js~InitOptionsValidator",
    "access": null,
    "export": true,
    "importPath": "atscm/src/init/OptionsValidator.js",
    "importStyle": "InitOptionsValidator",
    "description": "A static class containing validators for the options used when running \"atscm init\".",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "name",
    "memberof": "src/init/OptionsValidator.js~InitOptionsValidator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/init/OptionsValidator.js~InitOptionsValidator.name",
    "access": null,
    "description": "Validates a project name to be a valid npm package name.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The name to validate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "String"
      ],
      "spread": false,
      "description": "Returns true if `value` is a valid npm package name, or an error\nmessage otherwise."
    }
  },
  {
    "__docId__": 16,
    "kind": "file",
    "name": "src/init/init.js",
    "content": "import InitTask from './InitTask';\n\nexport default InitTask.run.bind(InitTask);\n",
    "static": true,
    "longname": "src/init/init.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 17,
    "kind": "file",
    "name": "src/lib/config/Atviseproject.js",
    "content": "/* eslint-disable no-useless-escape */\n\nimport NodeId from '../server/NodeId';\n\nclass DisplayTransformer {}\nclass ScriptTransformer {}\n\n/**\n * An *atvise-scm* project's configuration.\n * @abstract\n */\nexport default class Atviseproject {\n\n  /**\n   * The atvise-server's host. Defaults to *localhost*.\n   * @type {String}\n   */\n  static get host() {\n    return 'localhost';\n  }\n\n  /**\n   * The atvise-server ports to use.\n   * @type {Object}\n   * @property {Number} [opc=4840] The OPC-UA port the atvise-server runs on.\n   * @property {Number} [http=80] The HTTP port the atvise-server can be reached at.\n   */\n  static get port() {\n    return {\n      opc: 4840,\n      http: 80,\n    };\n  }\n\n  /**\n   * The login to use. Return `false` if no login is required (default).\n   * @type {Boolean|Object}\n   * @property {String} username The username to log in with.\n   * @property {String} password The password to log in with.\n   */\n  static get login() {\n    return false;\n  }\n\n  /**\n   * The transformers to use in this project. Defaults to a single {@link DisplayTransformer}\n   * @type {Transformer[]}\n   */\n  static get useTransformers() {\n    return [\n      new DisplayTransformer(),\n      new ScriptTransformer(),\n    ];\n  }\n\n  /**\n   * The atvise-server nodes that atvise-scm should sync. Defaults to\n   * `['ns=1;s=AGENT', 'ns=1;s=SYSTEM', 'ns=1;s=ObjectTypes.PROJECT']`\n   * @type {String[]|NodeId[]}\n   */\n  static get nodes() {\n    return [\n      new NodeId('AGENT'),\n      new NodeId('SYSTEM'),\n      // new NodeId('ObjectTypes.PROJECT'),\n    ];\n  }\n\n  /**\n   * The atvise-server nodes to watch in the corresponding tasks. Defaults to all nodes containing\n   * displays.\n   * @type {String[]|NodeId[]}\n   */\n  static get nodesToWatch() {\n    return [\n      new NodeId('AGENT.DISPLAYS'),\n      new NodeId('SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS'),\n    ];\n  }\n\n  /**\n   * An array of editor related node ids. They should be ignored in a atvise-scm project.\n   * @type {NodeId[]}\n   */\n  static get EditorRelatedNodes() {\n    return [\n      new NodeId('SYSTEM\\.JOURNALS\\.ProjectHistory'),\n    ];\n  }\n\n  /**\n   * An array of server related node ids. They should be ignored in a atvise-scm project\n   * as they are read-only.\n   * @type {NodeId[]}\n   */\n  static get ServerRelatedNodes() {\n    return [\n      // eslint-disable-next-line max-len\n      new NodeId('AGENT\\.HISTORY\\..*\\.(Stepped|PercentData(Good|Bad)|TreatUncertainAsBad|UseSlopedExtrapolation)'),\n      new NodeId('AGENT\\.OPCUA\\.server_url'),\n      new NodeId('AGENT\\.WEBACCESS\\.https?[0-9]+\\.(state|port)'),\n      new NodeId('SYSTEM\\.INFORMATION\\.LOGS\\.'),\n    ];\n  }\n\n  /**\n   * These nodes (and their subnodes, if any) will be ignored by atvise-scm. Defaults to\n   * {@link Atviseproject.EditorRelatedNodes} combined with\n   * {@link Atviseproject.ServerRelatedNodes}.\n   * @type {NodeId[]}\n   */\n  static get ignoreNodes() {\n    return this.EditorRelatedNodes.concat(this.ServerRelatedNodes);\n  }\n\n  /**\n   * Returns an object containing the properties to inspect.\n   * @see https://nodejs.org/api/util.html#util_util_inspect_object_options\n   * @return {Object} The object to inspect.\n   */\n  static inspect() {\n    return {\n      host: this.host,\n      port: this.port,\n      useTransformers: this.useTransformers,\n      nodes: this.nodes,\n      nodesToWatch: this.nodesToWatch,\n      ignoreNodes: this.ignoreNodes,\n    };\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/config/Atviseproject.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 18,
    "kind": "class",
    "name": "DisplayTransformer",
    "memberof": "src/lib/config/Atviseproject.js",
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~DisplayTransformer",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/config/Atviseproject.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 19,
    "kind": "class",
    "name": "ScriptTransformer",
    "memberof": "src/lib/config/Atviseproject.js",
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~ScriptTransformer",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/config/Atviseproject.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "Atviseproject",
    "memberof": "src/lib/config/Atviseproject.js",
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/config/Atviseproject.js",
    "importStyle": "Atviseproject",
    "description": "An *atvise-scm* project's configuration.",
    "lineNumber": 12,
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 21,
    "kind": "get",
    "name": "host",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.host",
    "access": null,
    "description": "The atvise-server's host. Defaults to *localhost*.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 22,
    "kind": "get",
    "name": "port",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.port",
    "access": null,
    "description": "The atvise-server ports to use.",
    "lineNumber": 28,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "4840",
        "defaultRaw": 4840,
        "name": "opc",
        "description": "The OPC-UA port the atvise-server runs on."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "80",
        "defaultRaw": 80,
        "name": "http",
        "description": "The HTTP port the atvise-server can be reached at."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 23,
    "kind": "get",
    "name": "login",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.login",
    "access": null,
    "description": "The login to use. Return `false` if no login is required (default).",
    "lineNumber": 41,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "The username to log in with."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password to log in with."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean",
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "get",
    "name": "useTransformers",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.useTransformers",
    "access": null,
    "description": "The transformers to use in this project. Defaults to a single {@link DisplayTransformer}",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Transformer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 25,
    "kind": "get",
    "name": "nodes",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.nodes",
    "access": null,
    "description": "The atvise-server nodes that atvise-scm should sync. Defaults to\n`['ns=1;s=AGENT', 'ns=1;s=SYSTEM', 'ns=1;s=ObjectTypes.PROJECT']`",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "String[]",
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 26,
    "kind": "get",
    "name": "nodesToWatch",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.nodesToWatch",
    "access": null,
    "description": "The atvise-server nodes to watch in the corresponding tasks. Defaults to all nodes containing\ndisplays.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "String[]",
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "get",
    "name": "EditorRelatedNodes",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.EditorRelatedNodes",
    "access": null,
    "description": "An array of editor related node ids. They should be ignored in a atvise-scm project.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "get",
    "name": "ServerRelatedNodes",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.ServerRelatedNodes",
    "access": null,
    "description": "An array of server related node ids. They should be ignored in a atvise-scm project\nas they are read-only.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 29,
    "kind": "get",
    "name": "ignoreNodes",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.ignoreNodes",
    "access": null,
    "description": "These nodes (and their subnodes, if any) will be ignored by atvise-scm. Defaults to\n{@link Atviseproject.EditorRelatedNodes} combined with\n{@link Atviseproject.ServerRelatedNodes}.",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "inspect",
    "memberof": "src/lib/config/Atviseproject.js~Atviseproject",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/config/Atviseproject.js~Atviseproject.inspect",
    "access": null,
    "description": "Returns an object containing the properties to inspect.",
    "see": [
      "https://nodejs.org/api/util.html#util_util_inspect_object_options"
    ],
    "lineNumber": 121,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The object to inspect."
    }
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "src/lib/init/Option.js",
    "content": "/**\n * An option the \"atscm init\" command handles.\n * TODO: Support function values for name, message, default, choices...\n */\nexport default class InitOption {\n\n  /**\n   * Creates a new option based either on a message and (optionally) a default value or some\n   * options.\n   * @param {String|Object} messageOrOptions The message or options to use.\n   * @param {inquirer~PromptType} [messageOrOptions.type] The option's type.\n   * @param {String} messageOrOptions.message The option's message. Required if `messageOrOptions`\n   * is an object.\n   * @param {String|Number} [messageOrOptions.default] The options's default value.\n   * @param {inquirer~Validator} [messageOrOptions.validate] A function that validates user input.\n   * @param {String[]|Number[]} [messageOrOptions.choices] The options's choices. Applies to to list\n   * types only.\n   * @param {Boolean|function(answers: Object): Boolean} [messageOrOptions.when] Weather or not to\n   * prompt this option.\n   * @param {String|Number} [defaultOrUndefined] The default value to use.\n   */\n  constructor(messageOrOptions, defaultOrUndefined) {\n    if (messageOrOptions === undefined) {\n      throw new Error('message or options required');\n    }\n\n    if (typeof messageOrOptions === 'string') {\n      if (messageOrOptions.length === 0) {\n        throw new Error('message is required');\n      }\n\n      /**\n       * The option's {@link inquirer~PromptType}. Defaults to 'input'.\n       * @type {inquirer~PromptType}\n       */\n      this.type = InitOption.DefaultType;\n\n      /**\n       * The option's message. A '?' sign is added automatically.\n       * @type {String}\n       */\n      this.message = `${messageOrOptions}?`;\n\n      /**\n       * The default value to use.\n       * @type {String|Number|undefined}\n       */\n      this.default = defaultOrUndefined;\n    } else {\n      if (!messageOrOptions.message || messageOrOptions.length === 0) {\n        throw new Error('message is required');\n      }\n\n      this.type = messageOrOptions.type || InitOption.DefaultType;\n      this.message = `${messageOrOptions.message}?`;\n      this.default = messageOrOptions.default;\n\n      /**\n       * The choices available. Applies to list types only.\n       * @type {String[]|Number[]|undefined}\n       */\n      this.choices = messageOrOptions.choices;\n\n      /**\n       * Validates the user input for this option.\n       * @type {inquirer~Validator}\n       */\n      this.validate = messageOrOptions.validate;\n\n      /**\n       * A function or boolean that indicates weather or not to prompt this option.\n       * @type {Boolean|function(answers: Object): Boolean|undefined}\n       */\n      this.when = messageOrOptions.when;\n    }\n  }\n\n  /**\n   * The default {@link inquirer~PromptType} to use. Equals 'input'.\n   * @return {inquirer~PromptType}\n   */\n  static get DefaultType() {\n    return 'input';\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/init/Option.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "class",
    "name": "InitOption",
    "memberof": "src/lib/init/Option.js",
    "static": true,
    "longname": "src/lib/init/Option.js~InitOption",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/init/Option.js",
    "importStyle": "InitOption",
    "description": "An option the \"atscm init\" command handles.\nTODO: Support function values for name, message, default, choices...",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 33,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/init/Option.js~InitOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#constructor",
    "access": null,
    "description": "Creates a new option based either on a message and (optionally) a default value or some\noptions.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "messageOrOptions",
        "description": "The message or options to use."
      },
      {
        "nullable": null,
        "types": [
          "inquirer~PromptType"
        ],
        "spread": false,
        "optional": true,
        "name": "messageOrOptions.type",
        "description": "The option's type."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "messageOrOptions.message",
        "description": "The option's message. Required if `messageOrOptions`\nis an object."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "messageOrOptions.default",
        "description": "The options's default value."
      },
      {
        "nullable": null,
        "types": [
          "inquirer~Validator"
        ],
        "spread": false,
        "optional": true,
        "name": "messageOrOptions.validate",
        "description": "A function that validates user input."
      },
      {
        "nullable": null,
        "types": [
          "String[]",
          "Number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "messageOrOptions.choices",
        "description": "The options's choices. Applies to to list\ntypes only."
      },
      {
        "nullable": null,
        "types": [
          "Boolean",
          "function(answers: Object): Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "messageOrOptions.when",
        "description": "Weather or not to\nprompt this option."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "defaultOrUndefined",
        "description": "The default value to use."
      }
    ]
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "type",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#type",
    "access": null,
    "description": "The option's {@link inquirer~PromptType}. Defaults to 'input'.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "inquirer~PromptType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "message",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#message",
    "access": null,
    "description": "The option's message. A '?' sign is added automatically.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "name": "default",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#default",
    "access": null,
    "description": "The default value to use.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "String",
        "Number",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "type",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#type",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "member",
    "name": "message",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#message",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "name": "default",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#default",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "name": "choices",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#choices",
    "access": null,
    "description": "The choices available. Applies to list types only.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "String[]",
        "Number[]",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "validate",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#validate",
    "access": null,
    "description": "Validates the user input for this option.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "inquirer~Validator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "when",
    "memberof": "src/lib/init/Option.js~InitOption",
    "static": false,
    "longname": "src/lib/init/Option.js~InitOption#when",
    "access": null,
    "description": "A function or boolean that indicates weather or not to prompt this option.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "Boolean",
        "function(answers: Object): Boolean",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 43,
    "kind": "get",
    "name": "DefaultType",
    "memberof": "src/lib/init/Option.js~InitOption",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/init/Option.js~InitOption.DefaultType",
    "access": null,
    "description": "The default {@link inquirer~PromptType} to use. Equals 'input'.",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "inquirer~PromptType"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "file",
    "name": "src/lib/server/AtviseFile.js",
    "content": "import File from 'vinyl';\nimport { DataType, VariantArrayType, resolveNodeId } from 'node-opcua';\nimport Logger from 'gulplog';\nimport AtviseTypes from './Types';\nimport NodeId from './NodeId';\n\n// Path related cache\nconst AtviseTypesByValue = AtviseTypes\n  .reduce((result, type) => Object.assign(result, {\n    [type.typeDefinition.value]: type,\n  }), {});\n\nconst AtviseTypesByIdentifier = AtviseTypes\n  .reduce((result, type) => Object.assign(result, {\n    [type.identifier]: type,\n  }), {});\n\n/**\n * A map providing shorter extensions for data types\n * @type {Map<node-opcua~DataType, String>}\n */\nexport const ExtensionForDataType = {\n  [DataType.Boolean]: 'bool',\n  [DataType.XmlElement]: 'xml',\n};\n\nfunction reverseObject(obj) {\n  return Object.keys(obj)\n    .reduce((result, key) => Object.assign(result, {\n      [obj[key]]: key,\n    }), {});\n}\n\n/**\n * A map providing data types for shorter extensions (Reverse of {@link DataTypeForExtension}).\n * * @type {Map<String, node-opcua~DataType>}\n */\nexport const DataTypeForExtension = reverseObject(ExtensionForDataType);\n\n// Cache DataType\nconst types = Object.keys(DataType);\nconst typeExtensions = types.map(t => t.toLowerCase());\n\n// Cache TypeDefinitions\nconst VariableTypeDefinition = new NodeId(NodeId.NodeIdType.NUMERIC, 62, 0);\nconst PropertyTypeDefinition = new NodeId(NodeId.NodeIdType.NUMERIC, 68, 0);\n\n// Cache Regular expressions\nconst ExtensionRegExp = /\\.([^/\\\\]*)$/;\n\n// Value encoding related cache\nconst Decoder = {\n  [DataType.Boolean]: stringValue => stringValue === 'true',\n  [DataType.String]: stringValue => stringValue,\n  [DataType.NodeId]: stringValue => resolveNodeId(stringValue),\n  [DataType.DateTime]: stringValue => new Date(Number.parseInt(stringValue, 10)),\n};\n\nconst Encoder = {\n  [DataType.DateTime]: date => date.getTime().toString(),\n};\n\n/**\n * Returns the extension for a specific {@link node-opcua~DataType}.\n * Algorithm:\n *   - if the type has a shortened extension defined in {@link ExtensionForDataType}, return it.\n *   - else return the DataType's name, in lowercase letters.\n * @param {node-opcua~DataType} dataType The datatype to get the extension for.\n * @return {String} The resulting extension.\n */\nfunction extensionForDataType(dataType) {\n  return ExtensionForDataType[dataType] || dataType.toString().toLowerCase();\n}\n\n/**\n * An extension to {@link vinyl~File} providing some additional, atvise-related properties.\n * @property {node-opcua~DataType} AtviseFile#dataType The {@link node-opcua~DataType} the node is\n * stored against on atvise server.\n * @property {NodeId} typeDefinition The file's type definition on atvise server.\n * FIXME: Additional properties not showing in API docs.\n */\nexport default class AtviseFile extends File {\n\n  /**\n   * Returns a storage path for a {@link ReadStream.ReadResult}.\n   * @param {ReadStream.ReadResult} readResult The read result to get a path for.\n   */\n  static pathForReadResult(readResult) {\n    let path = readResult.nodeId.filePath;\n\n    const dataType = readResult.value.$dataType;\n    const arrayType = readResult.value.$arrayType;\n    const typeDefinition = readResult.referenceDescription.typeDefinition;\n\n    if (typeDefinition.value === VariableTypeDefinition.value) {\n      // Variable nodes are stored with their lowercase datatype as an extension\n      path += `.${extensionForDataType(dataType)}`;\n    } else if (typeDefinition.value === PropertyTypeDefinition.value) {\n      // Property nodes are stored with \".prop\" and their lowercase datatype as an extension\n      path += `.prop.${extensionForDataType(dataType)}`;\n    } else {\n      // Handle object types\n      let identifier = 'obj';\n      let fileExtension = false;\n      let keepExtension = false;\n\n      const atType = AtviseTypesByValue[typeDefinition.value];\n      if (atType) {\n        identifier = atType.identifier;\n        fileExtension = atType.fileExtension;\n        keepExtension = atType.keepExtension;\n      } else {\n        process.stdout.clearLine();\n        Logger.warn('\\rMissing', typeDefinition.namespace, typeDefinition.value,\n          `(${readResult.nodeId.value})`);\n      }\n\n      if (!keepExtension) {\n        path += `.${identifier}.${fileExtension || extensionForDataType(dataType)}`;\n      }\n    }\n\n    // Add \"array\" or \"matrix\" extensions for corresponding array types\n    if (arrayType !== VariantArrayType.Scalar) {\n      path += `.${arrayType === VariantArrayType.Array ? 'array' : 'matrix'}`;\n    }\n\n    return path;\n  }\n\n  /**\n   * Encodes a node's value to file contents.\n   * @param {*} value The value to encode.\n   * @param {node-opcua~DataType} dataType The {@link node-opcua~DataType} to encode the value for.\n   * @return {?Buffer} The encoded file contents or null.\n   */\n  static encodeValue(value, dataType) {\n    if (value === null) {\n      return null;\n    }\n\n    const encoder = Encoder[dataType];\n    return Buffer.from(encoder ? encoder(value.value) : value.value.toString());\n  }\n\n  /**\n   * Decodes a file's contents to a node's value\n   * @param {Buffer} buffer The file contents to decode.\n   * @param {node-opcua~DataType} dataType The {@link node-opcua~DataType} to decode the contents\n   * for.\n   * @return {?*} The decoded node value or null.\n   */\n  static decodeValue(buffer, dataType) {\n    if (buffer === null) {\n      return null;\n    }\n\n    const decoder = Decoder[dataType];\n\n    if (decoder) {\n      return decoder(buffer.toString());\n    }\n\n    return buffer;\n  }\n\n  /**\n   * Creates a new {@link AtviseFile} for the given {@link ReadStream.ReadResult}.\n   * @param {ReadStream.ReadResult} readResult The read result to create the file for.\n   * @return {AtviseFile} The resulting file.\n   */\n  static fromReadResult(readResult) {\n    if (!readResult.value) {\n      throw new Error('no value');\n    }\n\n    return new AtviseFile({\n      path: AtviseFile.pathForReadResult(readResult),\n      contents: AtviseFile.encodeValue(readResult.value, readResult.value.$dataType),\n      _dataType: readResult.value.$dataType,\n      _arrayType: readResult.value.$arrayType,\n      _typeDefinition: readResult.referenceDescription.typeDefinition,\n    });\n  }\n\n  /**\n   * Recalculates {@link AtviseFile#dataType}, {@link AtviseFile#arrayType} and\n   * {@link AtviseFile#typeDefinition}. **Never call this method directly.**\n   */\n  _getMetadata() {\n    // Set default metadata\n    /**\n     * The node's stored {@link node-opcua~VariantArrayType}.\n     * @type {?node-opcua~VariantArrayType}\n     */\n    this._arrayType = VariantArrayType.Scalar;\n\n    let extensions = [];\n    extensions = this.relative.match(ExtensionRegExp)[1].split('.');\n\n    function ifLastExtensionMatches(matches, fn) {\n      if (matches(extensions[extensions.length - 1])) {\n        fn(extensions.pop());\n      }\n    }\n\n    const complete = () => this._dataType !== undefined && this._typeDefinition !== undefined;\n\n    // Handle array types\n    ifLastExtensionMatches(ext => ext === 'array', () => {\n      this._arrayType = VariantArrayType.Array;\n    });\n\n    ifLastExtensionMatches(ext => ext === 'matrix', () => {\n      this._arrayType = VariantArrayType.Matrix;\n    });\n\n    ifLastExtensionMatches(ext => typeExtensions.includes(ext), ext => {\n      /**\n       * The node's stored {@link node-opcua~DataType}.\n       * @type {?node-opcua~DataType}\n       */\n      this._dataType = DataType[types[typeExtensions.indexOf(ext)]];\n    });\n\n    // Handle wrapped data types (e.g. \"bool\" for DataType.Boolean)\n    ifLastExtensionMatches(ext => DataTypeForExtension[ext], ext => {\n      this._dataType = DataType[DataTypeForExtension[ext]];\n    });\n\n    if (extensions.length === 0) { // Got variable\n      /**\n       * The node's stored type definition.\n       * @type {?node-opcua~NodeId}\n       */\n      this._typeDefinition = new NodeId(NodeId.NodeIdType.NUMERIC, 62, 0);\n    }\n\n    ifLastExtensionMatches(ext => ext === 'prop', () => {\n      this._typeDefinition = new NodeId(NodeId.NodeIdType.NUMERIC, 68, 0);\n    });\n\n    let gotCustomType = false;\n    ifLastExtensionMatches(ext => ext === 'obj', () => {\n      gotCustomType = true;\n\n      Logger.warn('NEED SPECIAL HANDLING');\n    });\n\n    if (!gotCustomType && !complete()) {\n      // Handle atvise types\n      let foundAtType = false;\n\n      Object.keys(AtviseTypesByIdentifier).forEach(identifier => {\n        if (!foundAtType && extensions.includes(identifier)) {\n          foundAtType = true;\n          const type = AtviseTypesByIdentifier[identifier];\n\n          this._typeDefinition = type.typeDefinition;\n          this._dataType = type.dataType;\n        }\n      });\n    }\n\n    if (!gotCustomType && !complete()) {\n      Logger.warn('FALLING BACK TO OCTET STREAM');\n      this._typeDefinition = new NodeId('VariableTypes.ATVISE.Resource.OctetStream');\n      this._dataType = DataType.ByteString;\n    }\n\n    if (!complete()) {\n      Logger.warn('Unable to map', this.relative);\n    }\n  }\n\n  /**\n   * The file's {@link node-opcua~DataType}.\n   * @type {node-opcua~DataType}\n   */\n  get dataType() {\n    if (!this._dataType) {\n      this._getMetadata();\n    }\n\n    return this._dataType;\n  }\n\n  /**\n   * The file's {@link node-opcua~VariantArrayType}.\n   * @type {node-opcua~VariantArrayType}\n   */\n  get arrayType() {\n    if (!this._arrayType) {\n      this._getMetadata();\n    }\n\n    return this._arrayType;\n  }\n\n  /**\n   * The file's type definition.\n   * @type {node-opcua~NodeId}\n   */\n  get typeDefinition() {\n    if (!this._typeDefinition) {\n      this._getMetadata();\n    }\n\n    return this._typeDefinition;\n  }\n\n  /**\n   * `true` for files containing atvise displays.\n   * @type {Boolean}\n   */\n  get isDisplay() {\n    return this.typeDefinition.value === 'VariableTypes.ATVISE.Display';\n  }\n\n  /**\n   * Sets the node value for the file.\n   * @param {?*} newValue The value to set.\n   */\n  set value(newValue) {\n    /**\n     * The file's contents.\n     * @type {?Buffer}\n     */\n    this.contents = AtviseFile.encodeValue(newValue, this.dataType);\n  }\n\n  /**\n   * Returns the decoded node value for the file.\n   * @return {?*} The file's decoded value.\n   */\n  get value() {\n    return AtviseFile.decodeValue(this.contents, this.dataType);\n  }\n\n  /**\n   * Returns the node id associated with the file.\n   * @return {NodeId} The file's node id.\n   */\n  get nodeId() {\n    const atType = AtviseTypesByValue[this.typeDefinition.value];\n    let idPath = this.relative;\n\n    if (!atType || !atType.keepExtension) {\n      const exts = idPath.match(ExtensionRegExp)[1];\n      idPath = idPath.split(`.${exts}`)[0];\n    }\n\n    return NodeId.fromFilePath(idPath);\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 45,
    "kind": "variable",
    "name": "AtviseTypesByValue",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseTypesByValue",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "name": "AtviseTypesByIdentifier",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseTypesByIdentifier",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "name": "ExtensionForDataType",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~ExtensionForDataType",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": "{ExtensionForDataType}",
    "description": "A map providing shorter extensions for data types",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Map<node-opcua~DataType, String>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "reverseObject",
    "memberof": "src/lib/server/AtviseFile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~reverseObject",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "DataTypeForExtension",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~DataTypeForExtension",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": "{DataTypeForExtension}",
    "description": "A map providing data types for shorter extensions (Reverse of {@link DataTypeForExtension}).\n* @type {Map<String, node-opcua~DataType>}",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "types",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~types",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "typeExtensions",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~typeExtensions",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "VariableTypeDefinition",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~VariableTypeDefinition",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "src/lib/server/NodeId.js~NodeId"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "PropertyTypeDefinition",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~PropertyTypeDefinition",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "src/lib/server/NodeId.js~NodeId"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "ExtensionRegExp",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~ExtensionRegExp",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "Decoder",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~Decoder",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "Encoder",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~Encoder",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"undefined\": *}"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "extensionForDataType",
    "memberof": "src/lib/server/AtviseFile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~extensionForDataType",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": null,
    "description": "Returns the extension for a specific {@link node-opcua~DataType}.\nAlgorithm:\n  - if the type has a shortened extension defined in {@link ExtensionForDataType}, return it.\n  - else return the DataType's name, in lowercase letters.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "node-opcua~DataType"
        ],
        "spread": false,
        "optional": false,
        "name": "dataType",
        "description": "The datatype to get the extension for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "The resulting extension."
    }
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "AtviseFile",
    "memberof": "src/lib/server/AtviseFile.js",
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/AtviseFile.js",
    "importStyle": "AtviseFile",
    "description": "An extension to {@link vinyl~File} providing some additional, atvise-related properties.",
    "lineNumber": 82,
    "properties": [
      {
        "nullable": null,
        "types": [
          "node-opcua~DataType"
        ],
        "spread": false,
        "optional": false,
        "name": "AtviseFile#dataType",
        "description": "The {@link node-opcua~DataType} the node is\nstored against on atvise server."
      },
      {
        "nullable": null,
        "types": [
          "NodeId"
        ],
        "spread": false,
        "optional": false,
        "name": "typeDefinition",
        "description": "The file's type definition on atvise server.\nFIXME: Additional properties not showing in API docs."
      }
    ],
    "interface": false,
    "extends": [
      "vinyl~File"
    ]
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "pathForReadResult",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile.pathForReadResult",
    "access": null,
    "description": "Returns a storage path for a {@link ReadStream.ReadResult}.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReadStream.ReadResult"
        ],
        "spread": false,
        "optional": false,
        "name": "readResult",
        "description": "The read result to get a path for."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "encodeValue",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile.encodeValue",
    "access": null,
    "description": "Encodes a node's value to file contents.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to encode."
      },
      {
        "nullable": null,
        "types": [
          "node-opcua~DataType"
        ],
        "spread": false,
        "optional": false,
        "name": "dataType",
        "description": "The {@link node-opcua~DataType} to encode the value for."
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "The encoded file contents or null."
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "decodeValue",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile.decodeValue",
    "access": null,
    "description": "Decodes a file's contents to a node's value",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "The file contents to decode."
      },
      {
        "nullable": null,
        "types": [
          "node-opcua~DataType"
        ],
        "spread": false,
        "optional": false,
        "name": "dataType",
        "description": "The {@link node-opcua~DataType} to decode the contents\nfor."
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The decoded node value or null."
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "fromReadResult",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile.fromReadResult",
    "access": null,
    "description": "Creates a new {@link AtviseFile} for the given {@link ReadStream.ReadResult}.",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReadStream.ReadResult"
        ],
        "spread": false,
        "optional": false,
        "name": "readResult",
        "description": "The read result to create the file for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtviseFile"
      ],
      "spread": false,
      "description": "The resulting file."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "_getMetadata",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_getMetadata",
    "access": null,
    "description": "Recalculates {@link AtviseFile#dataType}, {@link AtviseFile#arrayType} and\n{@link AtviseFile#typeDefinition}. **Never call this method directly.**",
    "lineNumber": 190,
    "params": []
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "_arrayType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_arrayType",
    "access": null,
    "description": "The node's stored {@link node-opcua~VariantArrayType}.",
    "lineNumber": 196,
    "type": {
      "nullable": true,
      "types": [
        "node-opcua~VariantArrayType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "_arrayType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_arrayType",
    "access": null,
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "_arrayType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_arrayType",
    "access": null,
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "_dataType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_dataType",
    "access": null,
    "description": "The node's stored {@link node-opcua~DataType}.",
    "lineNumber": 223,
    "type": {
      "nullable": true,
      "types": [
        "node-opcua~DataType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "_dataType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_dataType",
    "access": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "_typeDefinition",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_typeDefinition",
    "access": null,
    "description": "The node's stored type definition.",
    "lineNumber": 236,
    "type": {
      "nullable": true,
      "types": [
        "node-opcua~NodeId"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "_typeDefinition",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_typeDefinition",
    "access": null,
    "description": null,
    "lineNumber": 240,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "_typeDefinition",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_typeDefinition",
    "access": null,
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "_dataType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_dataType",
    "access": null,
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_typeDefinition",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_typeDefinition",
    "access": null,
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_dataType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#_dataType",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "get",
    "name": "dataType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#dataType",
    "access": null,
    "description": "The file's {@link node-opcua~DataType}.",
    "lineNumber": 280,
    "type": {
      "nullable": null,
      "types": [
        "node-opcua~DataType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "arrayType",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#arrayType",
    "access": null,
    "description": "The file's {@link node-opcua~VariantArrayType}.",
    "lineNumber": 292,
    "type": {
      "nullable": null,
      "types": [
        "node-opcua~VariantArrayType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "typeDefinition",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#typeDefinition",
    "access": null,
    "description": "The file's type definition.",
    "lineNumber": 304,
    "type": {
      "nullable": null,
      "types": [
        "node-opcua~NodeId"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "isDisplay",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#isDisplay",
    "access": null,
    "description": "`true` for files containing atvise displays.",
    "lineNumber": 316,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "set",
    "name": "value",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#value",
    "access": null,
    "description": "Sets the node value for the file.",
    "lineNumber": 324,
    "params": [
      {
        "nullable": true,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The value to set."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "contents",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#contents",
    "access": null,
    "description": "The file's contents.",
    "lineNumber": 329,
    "type": {
      "nullable": true,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "get",
    "name": "value",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#value",
    "access": null,
    "description": "Returns the decoded node value for the file.",
    "lineNumber": 336,
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The file's decoded value."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "nodeId",
    "memberof": "src/lib/server/AtviseFile.js~AtviseFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/AtviseFile.js~AtviseFile#nodeId",
    "access": null,
    "description": "Returns the node id associated with the file.",
    "lineNumber": 344,
    "return": {
      "nullable": null,
      "types": [
        "NodeId"
      ],
      "spread": false,
      "description": "The file's node id."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/lib/server/Client.js",
    "content": "import { OPCUAClient } from 'node-opcua';\nimport ProjectConfig from '../../config/ProjectConfig';\n\n/**\n * A wrapper around {@link node-opcua~OPCUAClient} used to connect to atvise server.\n */\nexport default class Client {\n\n  /**\n   * Creates and connects a new instance of {@link node-opcua~OPCUAClient}.\n   * @return {Promise<node-opcua~OPCUAClient, Error>} Fulfilled with an already connected\n   * {@link node-opcua~OPCUAClient} instance, rejected if an error occured.\n   */\n  static create() {\n    const client = new OPCUAClient({\n      requestedSessionTimeout: 600000,\n      keepSessionAlive: true,\n    });\n\n    return new Promise((resolve, reject) => {\n      const endpoint = `opc.tcp://${ProjectConfig.host}:${ProjectConfig.port.opc}`;\n\n      setTimeout(() => reject(\n        new Error(`Unable to connect to ${endpoint}: Connection timed out`)\n      ), 3000);\n\n      client.connect(endpoint, err => {\n        if (err) {\n          reject(`Unable to connect to ${endpoint}: ${err.message}`);\n        } else {\n          resolve(client);\n        }\n      });\n    });\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/Client.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "Client",
    "memberof": "src/lib/server/Client.js",
    "static": true,
    "longname": "src/lib/server/Client.js~Client",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/Client.js",
    "importStyle": "Client",
    "description": "A wrapper around {@link node-opcua~OPCUAClient} used to connect to atvise server.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "create",
    "memberof": "src/lib/server/Client.js~Client",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/Client.js~Client.create",
    "access": null,
    "description": "Creates and connects a new instance of {@link node-opcua~OPCUAClient}.",
    "lineNumber": 14,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<node-opcua~OPCUAClient, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with an already connected\n{@link node-opcua~OPCUAClient} instance, rejected if an error occured."
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/lib/server/NodeId.js",
    "content": "import { sep } from 'path';\nimport { NodeId as OpcNodeId } from 'node-opcua';\n\nconst Type = OpcNodeId.NodeIdType;\n\nconst TypeForIdentifier = {\n  i: Type.NUMERIC,\n  s: Type.STRING,\n  g: Type.GUID,\n  b: Type.BYTESTRING,\n};\n\n/**\n * A wrapper around {@link node-opcua~NodeId}.\n */\nexport default class NodeId extends OpcNodeId {\n\n  /**\n   * Creates a new NodeId. Can be called in multiple ways:\n   *  - with a {@link node-opcua~NodeIdType}, a value and a namespace (defaults to 0),\n   *  - with a value only (type will be taken from it, namespace defaults to 1) or\n   *  - with a {@link NodeId}s string representation (e.g. `ns=1;s=AGENT.DISPLAYS`).\n   * @param {node-opcua~NodeIdType|String|Number} typeOrValue The type or value to use.\n   * @param {(Number|String)} [value] The value to use.\n   * @param {Number} [namespace=1] The namespace to use.\n   */\n  constructor(typeOrValue, value, namespace = 1) {\n    if (!(Type.get(typeOrValue))) {\n      let m = null;\n\n      if (typeof typeOrValue === 'string') {\n        m = typeOrValue.match(/^ns=([0-9]+);(i|s|g|b)=(.*)$/);\n      }\n\n      if (m === null) {\n        super(\n          Number.isNaN(Number.parseInt(typeOrValue, 10)) ? Type.STRING : Type.NUMERIC,\n          typeOrValue,\n          1\n        );\n      } else {\n        const n = Number.parseInt(m[1], 10);\n        const t = TypeForIdentifier[m[2]];\n        const v = t === Type.NUMERIC ? Number.parseInt(m[3], 10) : m[3];\n\n        super(t, v, n);\n      }\n    } else {\n      super(typeOrValue, value, namespace);\n    }\n  }\n\n  /**\n   * Creates a new NodeId based on a file path.\n   * @param {String} path The file path to use.\n   * @return {NodeId} The resulting NodeId.\n   */\n  static fromFilePath(path) {\n    let separator = '.';\n    const value = path.split(sep)\n      .reduce((result, current) => {\n        if (!result) {\n          return current;\n        }\n\n        const next = `${result}${separator}${current}`;\n\n        if (current === 'RESOURCES') {\n          separator = '/';\n        }\n\n        return next;\n      });\n\n    return new NodeId(NodeId.NodeIdType.STRING, value, 1);\n  }\n\n  /**\n   * The node id's value, encoded to a file path.\n   * @type {String}\n   */\n  get filePath() {\n    const parts = this.value.split('RESOURCES');\n    parts[0] = parts[0].split('.').join('/');\n\n    return parts.join('RESOURCES');\n  }\n\n  /**\n   * Returns a string in the format \"namespace value\" that is printed when inspecting the NodeId\n   * using node.js's *util.inspect*.\n   * @see https://nodejs.org/api/util.html#util_util_inspect_object_options\n   * @param {Number} depth The depth to inspect.\n   * @param {Object} options The options to use.\n   * @return {String} A string in the format \"namespace value\".\n   */\n  inspect(depth, options) {\n    return [\n      options.stylize(this.namespace, 'number'),\n      options.stylize(this.value, this.identifierType === Type.NUMERIC ? 'number' : 'string'),\n    ].join(' ');\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/NodeId.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "Type",
    "memberof": "src/lib/server/NodeId.js",
    "static": true,
    "longname": "src/lib/server/NodeId.js~Type",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/NodeId.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "TypeForIdentifier",
    "memberof": "src/lib/server/NodeId.js",
    "static": true,
    "longname": "src/lib/server/NodeId.js~TypeForIdentifier",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/NodeId.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"i\": *, \"s\": *, \"g\": *, \"b\": *}"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "NodeId",
    "memberof": "src/lib/server/NodeId.js",
    "static": true,
    "longname": "src/lib/server/NodeId.js~NodeId",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/NodeId.js",
    "importStyle": "NodeId",
    "description": "A wrapper around {@link node-opcua~NodeId}.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "node-opcua~OpcNodeId"
    ]
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/server/NodeId.js~NodeId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeId.js~NodeId#constructor",
    "access": null,
    "description": "Creates a new NodeId. Can be called in multiple ways:\n - with a {@link node-opcua~NodeIdType}, a value and a namespace (defaults to 0),\n - with a value only (type will be taken from it, namespace defaults to 1) or\n - with a {@link NodeId}s string representation (e.g. `ns=1;s=AGENT.DISPLAYS`).",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "node-opcua~NodeIdType",
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "typeOrValue",
        "description": "The type or value to use."
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "value",
        "description": "The value to use."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "namespace",
        "description": "The namespace to use."
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "fromFilePath",
    "memberof": "src/lib/server/NodeId.js~NodeId",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/NodeId.js~NodeId.fromFilePath",
    "access": null,
    "description": "Creates a new NodeId based on a file path.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The file path to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NodeId"
      ],
      "spread": false,
      "description": "The resulting NodeId."
    }
  },
  {
    "__docId__": 92,
    "kind": "get",
    "name": "filePath",
    "memberof": "src/lib/server/NodeId.js~NodeId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeId.js~NodeId#filePath",
    "access": null,
    "description": "The node id's value, encoded to a file path.",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "inspect",
    "memberof": "src/lib/server/NodeId.js~NodeId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeId.js~NodeId#inspect",
    "access": null,
    "description": "Returns a string in the format \"namespace value\" that is printed when inspecting the NodeId\nusing node.js's *util.inspect*.",
    "see": [
      "https://nodejs.org/api/util.html#util_util_inspect_object_options"
    ],
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The depth to inspect."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "A string in the format \"namespace value\"."
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/lib/server/NodeStream.js",
    "content": "import { browse_service as BrowseService, NodeClass } from 'node-opcua';\nimport Stream from './Stream';\nimport NodeId from './NodeId';\nimport Project from '../../config/ProjectConfig';\n\n/**\n * An object transform stream that browses atvise server and pushes the resulting\n * {@link node-opcua~ReferenceDescription}s.\n */\nexport default class NodeStream extends Stream {\n\n  /**\n   * Creates a new NodesStream based on the nodes to start browsing at and some options.\n   * @param {NodeId[]} nodesToBrowse The nodes to start browsing at.\n   * @param {Object} [options] The options to use.\n   * @param {NodeId[]} [options.ignoreNodes=ProjectConfig.ignoreNodes] An array of {@link NodeId}s\n   * to ignore.\n   * @param {Boolean} [options.recursive=true] If the discovered nodes should be browsed as well.\n   * @param {Boolean} [options.read=false] If the discovered nodes should be read (*Not\n   * implemented yet*).\n   */\n  constructor(nodesToBrowse, options) {\n    if (!nodesToBrowse || !(nodesToBrowse instanceof Array)) {\n      throw new Error('nodes is required');\n    }\n\n    if (options && options.ignoreNodes !== undefined && !(options.ignoreNodes instanceof Array)) {\n      throw new Error('ignoreNodes must be an array of node ids');\n    }\n\n    super();\n\n    this.once('session-open',\n      () => this.browseNodes(nodesToBrowse)\n        .then(() => this.end())\n        .catch(err => this.emit('error', err))\n      );\n\n    // Handle options\n    /**\n     * If the discovered nodes should be browsed as well.\n     * @type {Boolean}\n     */\n    this.recursive = true;\n\n    /**\n     * If the discovered nodes should be read (*Not implemented yet*).\n     * @type {Boolean}\n     * @todo Implement\n     */\n    this.readNodes = false;\n\n    /**\n     * An array of {@link NodeId}s to ignore.\n     * @type {NodeId[]}\n     */\n    this.ignoreNodes = Project.ignoreNodes;\n\n    if (options) {\n      if (options.read !== undefined) {\n        this.readNodes = options.read;\n      }\n\n      if (options.recursive !== undefined) {\n        this.recursive = options.recursive;\n      }\n\n      if (options.ignoreNodes !== undefined) {\n        this.ignoreNodes = options.ignoreNodes;\n      }\n    }\n\n    /**\n     * The result mask to use.\n     * @type {UInt32}\n     */\n    this._resultMask = BrowseService.makeResultMask('ReferenceType | NodeClass | TypeDefinition');\n\n    /**\n     * A regular expression matching all node ids specified in {@link NodeStream#ignoreNodes}\n     * @type {RegExp}\n     */\n    this.ignoredRegExp = new RegExp(`^(${this.ignoreNodes.map(n => n.toString()).join('|')})`);\n  }\n\n  /**\n   * Browses the given node.\n   * @param {NodeId} nodeId The node to browse.\n   * @return {Promise<NodeId[], Error>} Fulfilled with the next nodes to browse or rejected with the\n   * error that occurred while browsing.\n   */\n  browseNode(nodeId) {\n    const promise = new Promise((resolve, reject) => {\n      this.session.browse({\n        nodeId,\n        browseDirection: BrowseService.BrowseDirection.Forward,\n        includeSubtypes: true,\n        resultMask: this._resultMask,\n      }, (err, results) => {\n        if (err) {\n          reject(new Error(`Browsing ${nodeId.toString()} failed: ${err.message}`));\n        } else if (!results || results.length === 0) {\n          reject(new Error(`Browsing ${nodeId.toString()} failed: No results`));\n        } else if (results[0].statusCode > 0) {\n          reject(new Error(`Browsing ${nodeId.toString()} failed: Code ${results[0].statusCode}`));\n        } else {\n          const browseNext = results[0].references\n            // Remove parent nodes\n            .filter(ref => ref.nodeId.value.toString().split(nodeId.value).length > 1)\n            // TODO: Print ignored nodes (debug level)\n            .filter(ref => !(ref.nodeId.toString().match(this.ignoredRegExp)))\n\n            // Remove variable nodes\n            .map(ref => {\n              // Push all variable ids\n              if (ref.nodeClass.value === NodeClass.Variable.value) {\n                // \"Cast\" ref.nodeId to NodeId\n                Object.setPrototypeOf(ref.nodeId, NodeId.prototype);\n\n                // TODO: Use read option to read variable nodes\n                this.push(ref);\n              }\n\n              return ref.nodeId;\n            });\n\n          resolve(browseNext);\n        }\n      });\n    });\n\n    if (this.recursive) {\n      return promise.then(childObjectNodes => this.browseNodes(childObjectNodes));\n    }\n\n    return promise;\n  }\n\n  /**\n   * Browses the given nodes.\n   * @param {NodeId[]} nodes The nodes to browse.\n   * @return {Promise<?NodeId[], Error>} Rejected with the error that occurred, otherwise fulfilled\n   * with the next nodes to browse.\n   * If {@link NodeStream#recursive} is set to `true` this method is called recursively.\n   */\n  browseNodes(nodes) {\n    return Promise.all(\n      nodes.map(node => this.browseNode(node))\n    );\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/NodeStream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "class",
    "name": "NodeStream",
    "memberof": "src/lib/server/NodeStream.js",
    "static": true,
    "longname": "src/lib/server/NodeStream.js~NodeStream",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/NodeStream.js",
    "importStyle": "NodeStream",
    "description": "An object transform stream that browses atvise server and pushes the resulting\n{@link node-opcua~ReferenceDescription}s.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/lib/server/Stream.js~Stream"
    ]
  },
  {
    "__docId__": 96,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#constructor",
    "access": null,
    "description": "Creates a new NodesStream based on the nodes to start browsing at and some options.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeId[]"
        ],
        "spread": false,
        "optional": false,
        "name": "nodesToBrowse",
        "description": "The nodes to start browsing at."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "NodeId[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "ProjectConfig.ignoreNodes",
        "defaultRaw": "ProjectConfig.ignoreNodes",
        "name": "options.ignoreNodes",
        "description": "An array of {@link NodeId}s\nto ignore."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.recursive",
        "description": "If the discovered nodes should be browsed as well."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.read",
        "description": "If the discovered nodes should be read (*Not\nimplemented yet*)."
      }
    ]
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "recursive",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#recursive",
    "access": null,
    "description": "If the discovered nodes should be browsed as well.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "readNodes",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#readNodes",
    "access": null,
    "description": "If the discovered nodes should be read (*Not implemented yet*).",
    "lineNumber": 51,
    "todo": [
      "Implement"
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "ignoreNodes",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#ignoreNodes",
    "access": null,
    "description": "An array of {@link NodeId}s to ignore.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "NodeId[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "readNodes",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#readNodes",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "recursive",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#recursive",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "ignoreNodes",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#ignoreNodes",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "_resultMask",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#_resultMask",
    "access": null,
    "description": "The result mask to use.",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "UInt32"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "ignoredRegExp",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#ignoredRegExp",
    "access": null,
    "description": "A regular expression matching all node ids specified in {@link NodeStream#ignoreNodes}",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "browseNode",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#browseNode",
    "access": null,
    "description": "Browses the given node.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeId"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeId",
        "description": "The node to browse."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<NodeId[], Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the next nodes to browse or rejected with the\nerror that occurred while browsing."
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "browseNodes",
    "memberof": "src/lib/server/NodeStream.js~NodeStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/NodeStream.js~NodeStream#browseNodes",
    "access": null,
    "description": "Browses the given nodes.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeId[]"
        ],
        "spread": false,
        "optional": false,
        "name": "nodes",
        "description": "The nodes to browse."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<?NodeId[], Error>"
      ],
      "spread": false,
      "description": "Rejected with the error that occurred, otherwise fulfilled\nwith the next nodes to browse.\nIf {@link NodeStream#recursive} is set to `true` this method is called recursively."
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/lib/server/ReadStream.js",
    "content": "import { StatusCodes } from 'node-opcua';\nimport Stream from './Stream';\n\n/**\n * An object transform stream that reads the written {@link NodeId}s.\n */\nexport default class ReadStream extends Stream {\n\n  /**\n   * Reads the given node.\n   * @param {node-opcua~ReferenceDescription} referenceDescription The reference description of the\n   * node to read from.\n   * @param {function(err: ?Error, data: ?ReadStream.ReadResult)} callback Called with the error\n   * that occurred, or the read results the read results otherwise.\n   */\n  readNode(referenceDescription, callback) {\n    const nodeId = referenceDescription.nodeId;\n\n    this.session.read([{ nodeId }], (err, nodesToRead, results) => {\n      if (err) {\n        callback(new Error(`Reading ${nodeId.toString()} failed: ${err.message}`));\n      } else if (!results || results.length === 0) {\n        callback(new Error(`Reading ${nodeId.toString()} failed: No results`));\n      } else if (results[0].statusCode !== StatusCodes.Good) {\n        callback(new Error(`Reading ${nodeId.toString()} failed: Status ${results[0].statusCode}`));\n      } else {\n        callback(null, {\n          nodeId,\n          value: results[0].value,\n          referenceDescription,\n        });\n      }\n    });\n  }\n\n  /**\n   * Calls {@link ReadStream#readNode} once the session is open for the passed node.\n   * @param {NodeId} nodeId The node to read.\n   * @param {String} enc The encoding used.\n   * @param {function(err: ?Error, data: ?Object)} callback Called by {@link ReadStream#readNode}\n   * once reading ended.\n   * @listens {Session} Listens to the `session-open`-event if the session is not open yet.\n   */\n  _transform(nodeId, enc, callback) {\n    if (this.session) {\n      this.readNode(nodeId, callback);\n    } else {\n      this.once('session-open', () => this.readNode(nodeId, callback));\n    }\n  }\n\n}\n\n/**\n * @typedef {Object} ReadStream.ReadResult\n * @property {NodeId} nodeId The read node's id.\n * @property {?node-opcua~DataValue} value The read value.\n * @property {Object} referenceDescription Additional info on the read node.\n */\n",
    "static": true,
    "longname": "src/lib/server/ReadStream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "class",
    "name": "ReadStream",
    "memberof": "src/lib/server/ReadStream.js",
    "static": true,
    "longname": "src/lib/server/ReadStream.js~ReadStream",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/ReadStream.js",
    "importStyle": "ReadStream",
    "description": "An object transform stream that reads the written {@link NodeId}s.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/lib/server/Stream.js~Stream"
    ]
  },
  {
    "__docId__": 109,
    "kind": "typedef",
    "name": "ReadStream.ReadResult",
    "memberof": "src/lib/server/ReadStream.js",
    "static": true,
    "longname": "src/lib/server/ReadStream.js~ReadStream.ReadResult",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "NodeId"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeId",
        "description": "The read node's id."
      },
      {
        "nullable": true,
        "types": [
          "node-opcua~DataValue"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The read value."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceDescription",
        "description": "Additional info on the read node."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ReadStream.ReadResult"
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "readNode",
    "memberof": "src/lib/server/ReadStream.js~ReadStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/ReadStream.js~ReadStream#readNode",
    "access": null,
    "description": "Reads the given node.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "node-opcua~ReferenceDescription"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceDescription",
        "description": "The reference description of the\nnode to read from."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, data: ?ReadStream.ReadResult)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error\nthat occurred, or the read results the read results otherwise."
      }
    ]
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "_transform",
    "memberof": "src/lib/server/ReadStream.js~ReadStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/ReadStream.js~ReadStream#_transform",
    "access": null,
    "description": "Calls {@link ReadStream#readNode} once the session is open for the passed node.",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "NodeId"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeId",
        "description": "The node to read."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "enc",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, data: ?Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called by {@link ReadStream#readNode}\nonce reading ended."
      }
    ],
    "listens": [
      {
        "types": [
          "Session"
        ],
        "description": "Listens to the `session-open`-event if the session is not open yet."
      }
    ]
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/lib/server/Session.js",
    "content": "import { StatusCodes, ClientSession } from 'node-opcua';\nimport Client from './Client';\nimport ProjectConfig from '../../config/ProjectConfig';\n\n/**\n * A wrapper around {@link node-opcua~ClientSession} used to connect to atvise server.\n */\nexport default class Session {\n\n  /**\n   * Creates and opens a new {@link node-opcua~ClientSession}.\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with an already opened\n   * {@link node-opcua~ClientSession}.\n   */\n  static create() {\n    return Client.create()\n      .then(client => new Promise((resolve, reject) => {\n        client.createSession({\n          userName: ProjectConfig.login.username,\n          password: ProjectConfig.login.password,\n        }, (err, session) => {\n          if (err) {\n            if (\n              [\n                'userName === null || typeof userName === \"string\"',\n                'password === null || typeof password === \"string\"',\n              ].includes(err.message) ||\n              (err.response &&\n              err.response.responseHeader.serviceResult === StatusCodes.BadUserAccessDenied)\n            ) {\n              reject(new Error('Unable to create session: Invalid login'));\n            } else {\n              reject(new Error(`Unable to create session: ${err.message}`));\n            }\n          } else {\n            resolve(session);\n          }\n        });\n      }));\n  }\n\n  /**\n   * Closes the given session.\n   * @param {node-opcua~ClientSession} session The session to close.\n   * @param {Boolean} [deleteSubscriptions=true] If active subscriptions should be closed as well.\n   * @return {Promise<node-opcua~ClientSession, Error>} Fulfilled with the (now closed!) session or\n   * rejected with the error that occured while closing.\n   */\n  static close(session, deleteSubscriptions = true) {\n    if (!session || !(session instanceof ClientSession)) {\n      return Promise.reject(new Error('session is required'));\n    }\n\n    return new Promise((resolve, reject) => {\n      session.close(deleteSubscriptions, (err) => {\n        if (err) {\n          reject(new Error(`Unable to close session: ${err.message}`));\n        } else {\n          session._client.disconnect(clientErr => {\n            if (clientErr) {\n              reject(new Error(`Unable to disconnect client: ${clientErr.message}`));\n            } else {\n              resolve(session);\n            }\n          });\n        }\n      });\n    });\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/Session.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "class",
    "name": "Session",
    "memberof": "src/lib/server/Session.js",
    "static": true,
    "longname": "src/lib/server/Session.js~Session",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/Session.js",
    "importStyle": "Session",
    "description": "A wrapper around {@link node-opcua~ClientSession} used to connect to atvise server.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "create",
    "memberof": "src/lib/server/Session.js~Session",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/Session.js~Session.create",
    "access": null,
    "description": "Creates and opens a new {@link node-opcua~ClientSession}.",
    "lineNumber": 15,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<node-opcua~ClientSession, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with an already opened\n{@link node-opcua~ClientSession}."
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "close",
    "memberof": "src/lib/server/Session.js~Session",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/server/Session.js~Session.close",
    "access": null,
    "description": "Closes the given session.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "node-opcua~ClientSession"
        ],
        "spread": false,
        "optional": false,
        "name": "session",
        "description": "The session to close."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "deleteSubscriptions",
        "description": "If active subscriptions should be closed as well."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<node-opcua~ClientSession, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the (now closed!) session or\nrejected with the error that occured while closing."
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/lib/server/Stream.js",
    "content": "import { ctor as throughStreamClass } from 'through2';\nimport Session from './Session';\n\n/**\n * An object transform stream connected to atvise server.\n */\nexport default class Stream extends throughStreamClass({ objectMode: true }) {\n\n  /**\n   * Creates a new Stream and starts opening a new session to atvise server.\n   * @emits {Session} Emits an `session-open` event once the session is open, passing the Session\n   * instance.\n   */\n  constructor() {\n    super();\n\n    Session.create()\n      .then(session => (this.session = session))\n      .then(session => this.emit('session-open', session))\n      .catch(err => this.emit('error', err));\n  }\n\n  /**\n   * Called just before the stream is closed: Closes the open session.\n   * @param {function(err: ?Error, data: Object)} callback Called once the session is closed.\n   */\n  _flush(callback) {\n    if (this.session) {\n      Session.close(this.session)\n        .then(() => callback())\n        .catch(err => callback(err));\n    } else {\n      callback();\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/Stream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "Stream",
    "memberof": "src/lib/server/Stream.js",
    "static": true,
    "longname": "src/lib/server/Stream.js~Stream",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/Stream.js",
    "importStyle": "Stream",
    "description": "An object transform stream connected to atvise server.",
    "lineNumber": 7,
    "interface": false,
    "expressionExtends": "throughStreamClass({ objectMode: true })"
  },
  {
    "__docId__": 118,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/server/Stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/Stream.js~Stream#constructor",
    "access": null,
    "description": "Creates a new Stream and starts opening a new session to atvise server.",
    "lineNumber": 14,
    "params": [],
    "emits": [
      {
        "types": [
          "Session"
        ],
        "description": "Emits an `session-open` event once the session is open, passing the Session\ninstance."
      }
    ]
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "_flush",
    "memberof": "src/lib/server/Stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/Stream.js~Stream#_flush",
    "access": null,
    "description": "Called just before the stream is closed: Closes the open session.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, data: Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called once the session is closed."
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/lib/server/Types.js",
    "content": "import { DataType } from 'node-opcua';\nimport NodeId from '../server/NodeId';\n\nclass AtviseType {\n\n  constructor(nodeIdValue, identifier, dataType, fileExtensionOrKeep) {\n    this.typeDefinition = new NodeId(`VariableTypes.ATVISE.${nodeIdValue}`);\n    this.identifier = identifier;\n    this.dataType = dataType;\n    if (fileExtensionOrKeep !== undefined) {\n      if (typeof fileExtensionOrKeep === 'string') {\n        this.fileExtension = fileExtensionOrKeep;\n      } else {\n        this.keepExtension = fileExtensionOrKeep;\n      }\n    }\n  }\n\n}\n\nclass AtviseResourceType extends AtviseType {\n\n  constructor(name, identifier) {\n    super(`Resource.${name}`, identifier, DataType.ByteString, true);\n  }\n\n}\n\n/**\n * The atvise types to handle. **Ordering matters:** The {@link MappingTransformer} takes the first\n * match, therefore **plain types should always come before resource types!**\n * @type {AtviseType[]}\n */\nconst AtviseTypes = [\n  new AtviseType('HtmlHelp', 'help', DataType.XmlElement, 'html'),\n  new AtviseType('QuickDynamic', 'qd', DataType.XmlElement),\n  new AtviseType('ScriptCode', 'script', DataType.XmlElement),\n  new AtviseType('Display', 'display', DataType.XmlElement),\n  new AtviseType('TranslationTable', 'locs', DataType.XmlElement),\n  new AtviseResourceType('Pdf', 'pdf'),\n  new AtviseResourceType('Html', 'html'),\n  new AtviseResourceType('Javascript', 'js'),\n  new AtviseResourceType('Wave', 'wav'),\n  new AtviseResourceType('Gif', 'gif'),\n  new AtviseResourceType('Png', 'png'),\n  new AtviseResourceType('Aac', 'm4a'),\n  new AtviseResourceType('Ogg', 'ogg'),\n  new AtviseResourceType('Icon', 'ico'),\n  new AtviseResourceType('Css', 'css'),\n  new AtviseResourceType('Svg', 'svg'),\n  new AtviseResourceType('Jpeg', 'jpg'),\n  new AtviseResourceType('OctetStream', '*'),\n];\n\nexport default AtviseTypes;\n",
    "static": true,
    "longname": "src/lib/server/Types.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "AtviseType",
    "memberof": "src/lib/server/Types.js",
    "static": true,
    "longname": "src/lib/server/Types.js~AtviseType",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/Types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "nodeIdValue",
        "types": [
          "*"
        ]
      },
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      },
      {
        "name": "dataType",
        "types": [
          "*"
        ]
      },
      {
        "name": "fileExtensionOrKeep",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "typeDefinition",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#typeDefinition",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "identifier",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#identifier",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "dataType",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#dataType",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "fileExtension",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#fileExtension",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "keepExtension",
    "memberof": "src/lib/server/Types.js~AtviseType",
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseType#keepExtension",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "AtviseResourceType",
    "memberof": "src/lib/server/Types.js",
    "static": true,
    "longname": "src/lib/server/Types.js~AtviseResourceType",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/server/Types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "AtviseType"
    ]
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/server/Types.js~AtviseResourceType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/Types.js~AtviseResourceType#constructor",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "AtviseTypes",
    "memberof": "src/lib/server/Types.js",
    "static": true,
    "longname": "src/lib/server/Types.js~AtviseTypes",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/Types.js",
    "importStyle": "AtviseTypes",
    "description": "The atvise types to handle. **Ordering matters:** The {@link MappingTransformer} takes the first\nmatch, therefore **plain types should always come before resource types!**",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "AtviseType[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/lib/server/WriteStream.js",
    "content": "import Stream from './Stream';\n\n/**\n * A stream that writes all read {@link AtviseFile}s to atvise server.\n */\nexport default class WriteStream extends Stream {\n\n  /**\n   * Writes a file to atvise server.\n   * @param {AtviseFile} file The file to write.\n   * @param {function(err: ?Error, file: ?AtviseFile)} callback Called with the error that occurred\n   * or the successfully written file.\n   */\n  writeFile(file, callback) {\n    this.session.writeSingleNode(file.nodeId.toString(), {\n      dataType: file.dataType,\n      arrayType: file.arrayType,\n      value: file.value,\n    }, err => {\n      callback(err, file);\n    });\n  }\n\n  /**\n   * Calls {@link WriteStream#writeFile} once the session is open.\n   * @param {AtviseFile} file The file to write.\n   * @param {String} enc The encoding used.\n   * @param {function(err: ?Error, file: ?AtviseFile)} callback Called with the error that occurred\n   * or the successfully written file.\n   * @listens {Session} Listens to the `session-open`-event if the session is not open yet.\n   */\n  _transform(file, enc, callback) {\n    if (this.session) {\n      this.writeFile(file, callback);\n    } else {\n      this.once('session-open', () => this.writeFile(file, callback));\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/server/WriteStream.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "WriteStream",
    "memberof": "src/lib/server/WriteStream.js",
    "static": true,
    "longname": "src/lib/server/WriteStream.js~WriteStream",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/server/WriteStream.js",
    "importStyle": "WriteStream",
    "description": "A stream that writes all read {@link AtviseFile}s to atvise server.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/lib/server/Stream.js~Stream"
    ]
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "writeFile",
    "memberof": "src/lib/server/WriteStream.js~WriteStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/WriteStream.js~WriteStream#writeFile",
    "access": null,
    "description": "Writes a file to atvise server.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtviseFile"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The file to write."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, file: ?AtviseFile)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occurred\nor the successfully written file."
      }
    ]
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "_transform",
    "memberof": "src/lib/server/WriteStream.js~WriteStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/server/WriteStream.js~WriteStream#_transform",
    "access": null,
    "description": "Calls {@link WriteStream#writeFile} once the session is open.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtviseFile"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The file to write."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "enc",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, file: ?AtviseFile)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occurred\nor the successfully written file."
      }
    ],
    "listens": [
      {
        "types": [
          "Session"
        ],
        "description": "Listens to the `session-open`-event if the session is not open yet."
      }
    ]
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/lib/transform/Transformer.js",
    "content": "import { ctor as throughStreamClass, obj as createStream } from 'through2';\n\n/**\n * The directions a transformer can be run in.\n * @type {{FromDB: String, FromFilesystem: String}}\n */\nexport const TransformDirection = {\n  FromDB: 'FromDB',\n  FromFilesystem: 'FromFilesystem',\n};\n\nfunction isValidDirection(direction) {\n  return [\n    TransformDirection.FromDB,\n    TransformDirection.FromFilesystem,\n  ].includes(direction);\n}\n\n/**\n * A special kind of an object transform stream: It does apply different transformations based on\n * it's direction.\n * @abstract\n */\nexport default class Transformer extends throughStreamClass({ objectMode: true }) {\n\n  /**\n   * Creates a new Transformer with the specified options.\n   * @param {Object} [options] The options to use.\n   * @param {TransformDirection} [options.direction] The direction to use.\n   * @throws {Error} Throws an error if the given direction is invalid.\n   */\n  constructor(options) {\n    super();\n\n    if (options) {\n      if (options.direction) {\n        if (isValidDirection(options.direction)) {\n          /**\n           * The transformer's direction\n           * @type {TransformerDirection}\n           */\n          this.direction = options.direction;\n        } else {\n          throw new Error('Invalid direction');\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the Transformer with the given direction\n   * @param {TransformDirection} direction The direction to use.\n   * @return {Transformer} Itself, to be chainable.\n   * @throws {Error} Throws an error if the given direction is invalid.\n   */\n  withDirection(direction) {\n    if (!isValidDirection(direction)) {\n      throw new Error('Invalid direction');\n    }\n\n    this.direction = direction;\n    return this;\n  }\n\n  /**\n   * Calls {@link Transformer#transformFromDB} or {@link Transformer#transformFromFilesystem}\n   * based on the transformer's direction.\n   * @param {Object} chunk The chunk to transform.\n   * @param {String} enc The encoding used.\n   * @param {function(err: ?Error, obj: ?Object)} callback Called with the error that occured while\n   * transforming or (optionally) the transformed object.\n   * @throws {Error} Throws an error if the transformer has no valid direction.\n   */\n  _transform(chunk, enc, callback) {\n    if (!this.direction) {\n      callback(new Error('Transformer has no direction'));\n    } else if (this.direction === TransformDirection.FromDB) {\n      this.transformFromDB(chunk, enc, callback);\n    } else {\n      this.transformFromFilesystem(chunk, enc, callback);\n    }\n  }\n\n  /**\n   * **Must be overridden by all subclasses:** Transforms the given chunk when using\n   * {@link TransformDirection.FromDB}.\n   * @param {Object} chunk The chunk to transform.\n   * @param {String} enc The encoding used.\n   * @param {function(err: ?Error, obj: ?Object)} callback Called with the error that occured while\n   * transforming or (optionally) the transformed object.\n   */\n  transformFromDB(chunk, enc, callback) {\n    callback(new Error('Transformer#transformFromDB must be overridden by all subclasses'));\n  }\n\n  /**\n   * **Must be overridden by all subclasses:** Transforms the given chunk when using\n   * {@link TransformDirection.FromFilesystem}.\n   * @param {Object} chunk The chunk to transform.\n   * @param {String} enc The encoding used.\n   * @param {function(err: ?Error, obj: ?Object)} callback Called with the error that occured while\n   * transforming or (optionally) the transformed object.\n   */\n  transformFromFilesystem(chunk, enc, callback) {\n    callback(new Error('Transformer#transformFromFilesystem must be overridden by all subclasses'));\n  }\n\n  /**\n   * Creates a stream with all transformers passed, with the given direction. Transformers are\n   * reversed if using {@link TransformDirection.FromFilesystem}.\n   * @param {Transformer[]} transformers The transformers to apply.\n   * @param {TransformDirection} direction The direction to use.\n   * @return {Transformer} The last transformer passed, piped to the previous.\n   */\n  static applyTransformers(transformers, direction) {\n    if (!isValidDirection(direction)) {\n      throw new Error('Direction is invalid');\n    }\n\n    if (transformers.length === 0) {\n      return createStream();\n    }\n\n    return (direction === TransformDirection.FromDB ? transformers : transformers.reverse())\n      .reduce((prev, curr) => {\n        const directed = curr.withDirection(direction);\n\n        if (prev) {\n          return prev.pipe(directed);\n        }\n\n        return directed;\n      }, false);\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/transform/Transformer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "TransformDirection",
    "memberof": "src/lib/transform/Transformer.js",
    "static": true,
    "longname": "src/lib/transform/Transformer.js~TransformDirection",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/transform/Transformer.js",
    "importStyle": "{TransformDirection}",
    "description": "The directions a transformer can be run in.",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "{FromDB: String, FromFilesystem: String}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "isValidDirection",
    "memberof": "src/lib/transform/Transformer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/transform/Transformer.js~isValidDirection",
    "access": null,
    "export": false,
    "importPath": "atscm/src/lib/transform/Transformer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "direction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "Transformer",
    "memberof": "src/lib/transform/Transformer.js",
    "static": true,
    "longname": "src/lib/transform/Transformer.js~Transformer",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/transform/Transformer.js",
    "importStyle": "Transformer",
    "description": "A special kind of an object transform stream: It does apply different transformations based on\nit's direction.",
    "lineNumber": 24,
    "abstract": true,
    "interface": false,
    "expressionExtends": "throughStreamClass({ objectMode: true })"
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#constructor",
    "access": null,
    "description": "Creates a new Transformer with the specified options.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "TransformDirection"
        ],
        "spread": false,
        "optional": true,
        "name": "options.direction",
        "description": "The direction to use."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the given direction is invalid."
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "direction",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#direction",
    "access": null,
    "description": "The transformer's direction",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "TransformerDirection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "withDirection",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#withDirection",
    "access": null,
    "description": "Returns the Transformer with the given direction",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "TransformDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": "The direction to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transformer"
      ],
      "spread": false,
      "description": "Itself, to be chainable."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the given direction is invalid."
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "direction",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#direction",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "_transform",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#_transform",
    "access": null,
    "description": "Calls {@link Transformer#transformFromDB} or {@link Transformer#transformFromFilesystem}\nbased on the transformer's direction.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "The chunk to transform."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "enc",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, obj: ?Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occured while\ntransforming or (optionally) the transformed object."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the transformer has no valid direction."
      }
    ]
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "transformFromDB",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#transformFromDB",
    "access": null,
    "description": "**Must be overridden by all subclasses:** Transforms the given chunk when using\n{@link TransformDirection.FromDB}.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "The chunk to transform."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "enc",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, obj: ?Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occured while\ntransforming or (optionally) the transformed object."
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "transformFromFilesystem",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/Transformer.js~Transformer#transformFromFilesystem",
    "access": null,
    "description": "**Must be overridden by all subclasses:** Transforms the given chunk when using\n{@link TransformDirection.FromFilesystem}.",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "The chunk to transform."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "enc",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, obj: ?Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occured while\ntransforming or (optionally) the transformed object."
      }
    ]
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "applyTransformers",
    "memberof": "src/lib/transform/Transformer.js~Transformer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/transform/Transformer.js~Transformer.applyTransformers",
    "access": null,
    "description": "Creates a stream with all transformers passed, with the given direction. Transformers are\nreversed if using {@link TransformDirection.FromFilesystem}.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Transformer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "transformers",
        "description": "The transformers to apply."
      },
      {
        "nullable": null,
        "types": [
          "TransformDirection"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": "The direction to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transformer"
      ],
      "spread": false,
      "description": "The last transformer passed, piped to the previous."
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/lib/transform/XMLTransformer.js",
    "content": "import { parseString as parseXML, Builder as XMLBuilder } from 'xml2js';\nimport Transformer, { TransformDirection } from './Transformer';\n\n/**\n * A transformer used to transform XML documents.\n */\nexport default class XMLTransformer extends Transformer {\n\n  /**\n   * Creates a new XMLTransformer based on some options.\n   * @param {Object} options The options to use.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * The builder to use with direction {@link TransformDirection.FromDB}.\n     * @type {xml2js~Builder}\n     */\n    this._fromDBBuilder = new XMLBuilder({ cdata: false });\n\n    /**\n     * The builder to use with direction {@link TransformDirection.FromFilesystem}.\n     * @type {xml2js~Builder}\n     */\n    this._fromFilesystemBuilder = new XMLBuilder({\n      renderOpts: {\n        pretty: true,\n        indent: ' ',\n        newline: '\\r\\n',\n      },\n      xmldec: {\n        version: '1.0',\n        encoding: 'UTF-8',\n        standalone: false,\n      },\n      cdata: false,\n    });\n  }\n\n  /**\n   * Returns the XML builder instance to use base on the current {@link Transformer#direction}.\n   * @type {xml2js~Builder}\n   */\n  get builder() {\n    return this.direction === TransformDirection.FromDB ?\n      this._fromDBBuilder :\n      this._fromFilesystemBuilder;\n  }\n\n  /**\n   * Parses XML in a file's contents.\n   * @param {AtviseFile} file The file to process.\n   * @param {function(err: ?Error, result: ?Object)} callback Called with the parsed document or the\n   * parse error that occurred.\n   */\n  decodeContents(file, callback) {\n    parseXML(file.contents, callback);\n  }\n\n  /**\n   * Builds an XML string from an object.\n   * @param {Object} object The object to encode.\n   * @param {function(err: ?Error, result: ?String)} callback Called with the resulting string or\n   * the error that occurred while building.\n   */\n  encodeContents(object, callback) {\n    try {\n      callback(null, this.builder.buildObject(object));\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "src/lib/transform/XMLTransformer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "XMLTransformer",
    "memberof": "src/lib/transform/XMLTransformer.js",
    "static": true,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "access": null,
    "export": true,
    "importPath": "atscm/src/lib/transform/XMLTransformer.js",
    "importStyle": "XMLTransformer",
    "description": "A transformer used to transform XML documents.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/lib/transform/Transformer.js~Transformer"
    ]
  },
  {
    "__docId__": 149,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#constructor",
    "access": null,
    "description": "Creates a new XMLTransformer based on some options.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to use."
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "_fromDBBuilder",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#_fromDBBuilder",
    "access": null,
    "description": "The builder to use with direction {@link TransformDirection.FromDB}.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "xml2js~Builder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "_fromFilesystemBuilder",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#_fromFilesystemBuilder",
    "access": null,
    "description": "The builder to use with direction {@link TransformDirection.FromFilesystem}.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "xml2js~Builder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "builder",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#builder",
    "access": null,
    "description": "Returns the XML builder instance to use base on the current {@link Transformer#direction}.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "xml2js~Builder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "decodeContents",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#decodeContents",
    "access": null,
    "description": "Parses XML in a file's contents.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtviseFile"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The file to process."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, result: ?Object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the parsed document or the\nparse error that occurred."
      }
    ]
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "encodeContents",
    "memberof": "src/lib/transform/XMLTransformer.js~XMLTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/transform/XMLTransformer.js~XMLTransformer#encodeContents",
    "access": null,
    "description": "Builds an XML string from an object.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to encode."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, result: ?String)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the resulting string or\nthe error that occurred while building."
      }
    ]
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/tasks/pull.js",
    "content": "import { dest } from 'gulp';\nimport ProjectConfig from '../config/ProjectConfig';\nimport NodeStream from '../lib/server/NodeStream';\nimport ReadStream from '../lib/server/ReadStream';\nimport { TransformDirection } from '../lib/transform/Transformer';\nimport MappingTransformer from '../transform/Mapping';\n\n/**\n * Pulls all nodes from atvise server.\n */\nexport default function pull() {\n  let found = 0;\n  let pulled = 0;\n  let stored = 0;\n  const nodeStream = new NodeStream(ProjectConfig.nodes, { read: true })\n    .on('data', () => found++);\n  const readStream = new ReadStream()\n    .on('data', () => pulled++);\n  const mappingStream = new MappingTransformer({ direction: TransformDirection.FromDB });\n  const storeStream = dest('./src')\n    .on('data', () => stored++);\n\n  const printProgress = setInterval(() => {\n    process.stdout.write(`\\rFound: ${found}, pulled: ${pulled}, stored: ${stored}`);\n  }, 1000);\n\n  return nodeStream\n    .pipe(readStream)\n    .pipe(mappingStream)\n    .pipe(storeStream)\n    .on('end', () => {\n      process.stdout.clearLine();\n      process.stdout.write('\\r');\n      clearInterval(printProgress);\n    });\n}\n\npull.description = 'Pull all nodes from atvise server';\n",
    "static": true,
    "longname": "src/tasks/pull.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "pull",
    "memberof": "src/tasks/pull.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tasks/pull.js~pull",
    "access": null,
    "export": true,
    "importPath": "atscm/src/tasks/pull.js",
    "importStyle": "pull",
    "description": "Pulls all nodes from atvise server.",
    "lineNumber": 11,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/tasks/push.js",
    "content": "import { src } from 'gulp';\nimport { TransformDirection } from '../lib/transform/Transformer';\nimport MappingTransformer from '../transform/Mapping';\nimport WriteStream from '../lib/server/WriteStream';\n\n/**\n * Pushes {@link AtviseFile}s to atvise server.\n */\nexport default function push() {\n  let uploaded = 0;\n\n  const mappingStream = new MappingTransformer({ direction: TransformDirection.FromFilesystem });\n  const writeStream = new WriteStream()\n    .on('data', () => uploaded++);\n\n  const printProgress = setInterval(() => {\n    process.stdout.write(`\\rUploaded: ${uploaded}`);\n  }, 1000);\n\n  return src('./src/**/*.*')\n    .pipe(mappingStream)\n    .pipe(writeStream)\n    .on('end', () => {\n      process.stdout.clearLine();\n      process.stdout.write('\\r');\n      clearInterval(printProgress);\n    });\n}\n\npush.description = 'Push all stored nodes to atvise server';\n",
    "static": true,
    "longname": "src/tasks/push.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "push",
    "memberof": "src/tasks/push.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tasks/push.js~push",
    "access": null,
    "export": true,
    "importPath": "atscm/src/tasks/push.js",
    "importStyle": "push",
    "description": "Pushes {@link AtviseFile}s to atvise server.",
    "lineNumber": 9,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/transform/Mapping.js",
    "content": "import Logger from 'gulplog';\nimport Transformer from '../lib/transform/Transformer';\nimport AtviseFile from '../lib/server/AtviseFile';\n\n/**\n * A Transformer that maps {@link ReadStream.ReadResult}s to {@link AtviseFile}s.\n */\nexport default class MappingTransformer extends Transformer {\n\n  /**\n   * Writes an {@link AtviseFile} for each {@link ReadStream.ReadResult} read.\n   * @param {ReadStream.ReadResult} readResult The read result to create the file for.\n   * @param {String} encoding The encoding used.\n   * @param {function(err: ?Error, data: ?AtviseFile)} callback Called with the error that occurred\n   * while transforming the read result or the resulting file.\n   */\n  transformFromDB(readResult, encoding, callback) {\n    try {\n      callback(null, AtviseFile.fromReadResult(readResult));\n    } catch (e) {\n      Logger.warn(`Unable to map ${readResult.nodeId.toString()}`, e.message);\n      callback(null);\n    }\n  }\n\n  /**\n   * Writes an {@link AtviseFile} for each {@link vinyl~File} read.\n   * @param {vinyl~File} file The raw file.\n   * @param {String} encoding The encoding used.\n   * @param {function(err: ?Error, data: ?AtviseFile)} callback Called with the error that occurred\n   * while transforming the read result or the resulting file.\n   */\n  transformFromFilesystem(file, encoding, callback) {\n    callback(null, new AtviseFile({\n      cwd: file.cwd,\n      base: file.base,\n      path: file.path,\n      contents: file.contents,\n    }));\n  }\n\n}\n",
    "static": true,
    "longname": "src/transform/Mapping.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "class",
    "name": "MappingTransformer",
    "memberof": "src/transform/Mapping.js",
    "static": true,
    "longname": "src/transform/Mapping.js~MappingTransformer",
    "access": null,
    "export": true,
    "importPath": "atscm/src/transform/Mapping.js",
    "importStyle": "MappingTransformer",
    "description": "A Transformer that maps {@link ReadStream.ReadResult}s to {@link AtviseFile}s.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/lib/transform/Transformer.js~Transformer"
    ]
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "transformFromDB",
    "memberof": "src/transform/Mapping.js~MappingTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transform/Mapping.js~MappingTransformer#transformFromDB",
    "access": null,
    "description": "Writes an {@link AtviseFile} for each {@link ReadStream.ReadResult} read.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReadStream.ReadResult"
        ],
        "spread": false,
        "optional": false,
        "name": "readResult",
        "description": "The read result to create the file for."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "encoding",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, data: ?AtviseFile)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occurred\nwhile transforming the read result or the resulting file."
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "transformFromFilesystem",
    "memberof": "src/transform/Mapping.js~MappingTransformer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transform/Mapping.js~MappingTransformer#transformFromFilesystem",
    "access": null,
    "description": "Writes an {@link AtviseFile} for each {@link vinyl~File} read.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "vinyl~File"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The raw file."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "encoding",
        "description": "The encoding used."
      },
      {
        "nullable": null,
        "types": [
          "function(err: ?Error, data: ?AtviseFile)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called with the error that occurred\nwhile transforming the read result or the resulting file."
      }
    ]
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/typedef/external/inquirer.js",
    "content": "/**\n * @external {Inquirer} https://github.com/sboudrias/Inquirer.js\n */\n\n/**\n * Must be one of: 'list', 'rawlist', 'expand', 'checkbox', 'confirm', 'input', 'password',\n * 'editor'.\n * @typedef {String} inquirer~PromptType\n * @see https://github.com/sboudrias/Inquirer.js#prompt-types\n */\n\n/**\n * A function that, when called with a value, validates this value and either retunrs `true` if\n * validation succeeded or an error message.\n * @typedef {function(value: String): Boolean|String} inquirer~Validator\n */\n",
    "static": true,
    "longname": "src/typedef/external/inquirer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "Inquirer",
    "externalLink": "https://github.com/sboudrias/Inquirer.js",
    "memberof": "src/typedef/external/inquirer.js",
    "static": true,
    "longname": "src/typedef/external/inquirer.js~Inquirer",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 165,
    "kind": "typedef",
    "name": "inquirer~PromptType",
    "memberof": "src/typedef/external/inquirer.js",
    "static": true,
    "longname": "src/typedef/external/inquirer.js~inquirer~PromptType",
    "access": null,
    "description": "Must be one of: 'list', 'rawlist', 'expand', 'checkbox', 'confirm', 'input', 'password',\n'editor'.",
    "see": [
      "https://github.com/sboudrias/Inquirer.js#prompt-types"
    ],
    "type": {
      "types": [
        "String"
      ],
      "optional": false,
      "name": "inquirer~PromptType"
    }
  },
  {
    "__docId__": 166,
    "kind": "typedef",
    "name": "inquirer~Validator",
    "memberof": "src/typedef/external/inquirer.js",
    "static": true,
    "longname": "src/typedef/external/inquirer.js~inquirer~Validator",
    "access": null,
    "description": "A function that, when called with a value, validates this value and either retunrs `true` if\nvalidation succeeded or an error message.",
    "type": {
      "types": [
        "function(value: String): Boolean",
        "String"
      ],
      "optional": false,
      "name": "inquirer~Validator"
    }
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/typedef/external/node-opcua.js",
    "content": "/**\n * @external {node-opcua} http://node-opcua.github.io/api_doc/\n */\n\n/**\n * @external {node-opcua~NodeId} http://node-opcua.github.io/api_doc/classes/NodeId.html\n */\n\n/**\n * @external {node-opcua~NodeIdType} http://node-opcua.github.io/api_doc/classes/NodeIdType.html\n */\n\n/**\n * @external {node-opcua~OPCUAClient} http://node-opcua.github.io/api_doc/classes/OPCUAClient.html\n */\n\n/**\n * @external {node-opcua~ClientSession} http://node-opcua.github.io/api_doc/classes/ClientSession.html\n */\n\n/**\n * @external {node-opcua~DataValue} http://node-opcua.github.io/api_doc/classes/DataValue.html\n */\n\n/**\n * @external {node-opcua~ReferenceDescription} http://node-opcua.github.io/api_doc/classes/ReferenceDescription.html\n */\n\n/**\n * @external {node-opcua~DataType} https://github.com/node-opcua/node-opcua/blob/master/schemas/DataType_enum.js\n */\n\n/**\n * @external {node-opcua~VariantArrayType} https://github.com/node-opcua/node-opcua/blob/master/schemas/VariantArrayType_enum.js\n */\n",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "node-opcua",
    "externalLink": "http://node-opcua.github.io/api_doc/",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "node-opcua~NodeId",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/NodeId.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~NodeId",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "node-opcua~NodeIdType",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/NodeIdType.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~NodeIdType",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "node-opcua~OPCUAClient",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/OPCUAClient.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~OPCUAClient",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "node-opcua~ClientSession",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/ClientSession.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~ClientSession",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "node-opcua~DataValue",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/DataValue.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~DataValue",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "node-opcua~ReferenceDescription",
    "externalLink": "http://node-opcua.github.io/api_doc/classes/ReferenceDescription.html",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~ReferenceDescription",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "node-opcua~DataType",
    "externalLink": "https://github.com/node-opcua/node-opcua/blob/master/schemas/DataType_enum.js",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~DataType",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "node-opcua~VariantArrayType",
    "externalLink": "https://github.com/node-opcua/node-opcua/blob/master/schemas/VariantArrayType_enum.js",
    "memberof": "src/typedef/external/node-opcua.js",
    "static": true,
    "longname": "src/typedef/external/node-opcua.js~node-opcua~VariantArrayType",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "src/typedef/external/vinyl.js",
    "content": "/**\n * @external {vinyl~File} https://github.com/gulpjs/vinyl#new-vinyloptions\n */\n",
    "static": true,
    "longname": "src/typedef/external/vinyl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "vinyl~File",
    "externalLink": "https://github.com/gulpjs/vinyl#new-vinyloptions",
    "memberof": "src/typedef/external/vinyl.js",
    "static": true,
    "longname": "src/typedef/external/vinyl.js~vinyl~File",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "src/typedef/external/xml2js.js",
    "content": "/**\n * @external {xml2js~Builder} https://github.com/Leonidas-from-XIV/node-xml2js#options-for-the-builder-class\n */\n",
    "static": true,
    "longname": "src/typedef/external/xml2js.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "xml2js~Builder",
    "externalLink": "https://github.com/Leonidas-from-XIV/node-xml2js#options-for-the-builder-class",
    "memberof": "src/typedef/external/xml2js.js",
    "static": true,
    "longname": "src/typedef/external/xml2js.js~xml2js~Builder",
    "access": null,
    "description": ""
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 225,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 227,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 228,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 230,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 231,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 232,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 233,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 234,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 235,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 236,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 237,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 238,
    "kind": "testFile",
    "name": "test/src/Gulpfile.spec.js",
    "content": "import expect from 'unexpected';\n\nimport * as tasks from '../../src/Gulpfile';\n\ndescribe('Gulpfile', function() {\n  it('should export description for all tasks', function() {\n    Object.keys(tasks).forEach(name => {\n      const desc = tasks[name].description;\n\n      expect(desc, 'to be defined');\n      expect(desc, 'not to be empty');\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/Gulpfile.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/src/Gulpfile.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/Gulpfile.spec.js~describe0",
    "access": null,
    "description": "Gulpfile",
    "lineNumber": 5
  },
  {
    "__docId__": 240,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/src/Gulpfile.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/Gulpfile.spec.js~describe0.it1",
    "access": null,
    "description": "should export description for all tasks",
    "lineNumber": 6
  },
  {
    "__docId__": 241,
    "kind": "testFile",
    "name": "test/src/init/InitTask.spec.js",
    "content": "import { readdirSync } from 'fs';\nimport { join, isAbsolute } from 'path';\nimport expect from 'unexpected';\nimport { spy } from 'sinon';\nimport proxyquire from 'proxyquire';\n\nimport { obj as createStream } from 'through2';\nimport { src } from 'gulp';\nimport handlebars from 'gulp-compile-handlebars';\nimport { transform as babelTransform } from 'babel-core';\nimport { transpileModule as tsTransform } from 'typescript';\n// import { compile as coffeeTransform } from 'coffee-script';\nimport evaluate from 'eval';\n\nimport pkg from '../../../package.json';\nimport { ConfigLangs } from '../../../src/init/Options';\nimport Atviseproject from '../../../src/lib/config/Atviseproject';\n\nconst destSpy = spy((c, e, cb) => cb(null));\nconst srcSpy = spy((c, e, cb) => cb(null, c));\n\nconst gulpStub = {\n  src: (...args) => src(...args)\n    .pipe(createStream(srcSpy)),\n  dest: () => createStream(destSpy),\n};\n\nconst handlebarsSpy = spy(handlebars);\n\nconst InitTask = proxyquire('../../../src/init/InitTask', {\n  gulp: gulpStub,\n  handlebars: {\n    default: handlebarsSpy,\n  },\n}).default;\n\n/** @test {InitTask} */\ndescribe('InitTask', function() {\n  const baseConfig = {\n    name: 'unit-testing',\n    atviseHost: 'localhost',\n    atvisePortOpc: 4840,\n    atvisePortHttp: 80,\n    modulePackage: pkg,\n  };\n\n  function optionsForLang(lang) {\n    return Object.assign({ configLang: lang }, baseConfig);\n  }\n\n  beforeEach(() => {\n    srcSpy.reset();\n    destSpy.reset();\n    handlebarsSpy.reset();\n  });\n\n  /** @test {InitTask.filesToHandle} */\n  describe('.filesToHandle', function() {\n    it('should return array of absolute paths', function() {\n      expect(InitTask.filesToHandle('es2015'), 'to have items satisfying', 'to be a', 'string');\n      expect(InitTask.filesToHandle('es2015'), 'to have items satisfying', path => {\n        expect(isAbsolute(path), 'to be', true);\n      });\n    });\n  });\n\n  /** @test {InitTask.run} */\n  describe('.run', function() {\n    it('should handle all general files', function() {\n      const files = readdirSync(\n        join(__dirname, '../../../res/init/templates/general')\n      );\n\n      return InitTask.run({ configLang: 'es2015' })\n        .then(() => {\n          expect(srcSpy.callCount, 'to be greater than', 0);\n\n          const handled = srcSpy.args.map(args => args[0]);\n          const resulting = destSpy.args.map(args => args[0]);\n          expect(handled, 'to have values satisfying',\n            'to have properties', { _isVinyl: true });\n\n          expect(handled.map(f => f.relative), 'to contain', ...files);\n          expect(resulting.map(f => f.relative), 'to contain', ...files);\n        });\n    });\n\n    function expectHandlingLangFiles(configLang) {\n      const files = readdirSync(\n        join(__dirname, '../../../res/init/templates/lang', configLang)\n      );\n\n      it(`should handle ${configLang} files`, function() {\n        return InitTask.run({ configLang })\n          .then(() => {\n            const handled = srcSpy.args.map(args => args[0].relative);\n            const resulting = destSpy.args.map(args => args[0].relative);\n\n            expect(handled, 'to contain', ...files);\n            expect(resulting, 'to contain', ...files);\n          });\n      });\n    }\n\n    // Check if all lang files are handled for all config langs\n    Object.keys(ConfigLangs).forEach(l => expectHandlingLangFiles(ConfigLangs[l]));\n\n    function expectValidConfig(lang, transform) {\n      it(`should create valid ${lang} config`, function() {\n        return InitTask.run(optionsForLang(lang))\n          .then(() => {\n            const createdFiles = destSpy.args.map(args => args[0]);\n\n            // Expect config file is created\n            const configs = createdFiles.filter(file => file.relative.match(/Atviseproject/));\n            expect(configs, 'to have length', 1);\n\n            // Expect code can be transpiled\n            const configCode = configs[0].contents.toString();\n            let resultingCode;\n            expect(() => (resultingCode = transform(configCode, createdFiles)\n              .replace(/require\\(['|\"]atscm['|\"]\\)/, 'require(\\'../../../\\')')), 'not to throw');\n\n            // Expect transpiled code to be runnable\n            let config;\n            expect(() => (config = evaluate(resultingCode, true).default), 'not to throw');\n\n            // Expect config to extend Atviseproject\n            expect(config, 'to have properties', Object.getOwnPropertyNames(Atviseproject));\n            expect(config.name, 'to equal', 'UnitTesting');\n            expect(config.host, 'to equal', baseConfig.atviseHost);\n            expect(config.port.opc, 'to equal', baseConfig.atvisePortOpc);\n            expect(config.port.http, 'to equal', baseConfig.atvisePortHttp);\n          });\n      });\n    }\n\n    expectValidConfig('es2015', (code, createdFiles) => {\n      const rcs = createdFiles.filter(file => file.relative.match(/.babelrc/));\n\n      expect(rcs, 'to have length', 1);\n\n      const rc = JSON.parse(rcs[0].contents.toString());\n\n      return babelTransform(code, rc).code;\n    });\n\n    expectValidConfig('es5', code => code);\n\n    expectValidConfig('ts', (code, createdFiles) => {\n      const rcs = createdFiles.filter(file => file.relative.match(/tsconfig.json/));\n\n      expect(rcs, 'to have length', 1);\n\n      const rc = JSON.parse(rcs[0].contents.toString());\n\n      return tsTransform(code, rc).outputText;\n    });\n\n    // FIXME: CoffeeScript does not yet work.\n    /*\n    expectValidConfig('coffee', (code, createdFiles) => {\n\n      return coffeeTransform(code);\n    });\n    */\n  });\n});\n",
    "static": true,
    "longname": "test/src/init/InitTask.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "testDescribe",
    "name": "describe2",
    "testId": 2,
    "memberof": "test/src/init/InitTask.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2",
    "access": null,
    "description": "InitTask",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitTask}"
      }
    ],
    "testTargets": [
      "InitTask"
    ]
  },
  {
    "__docId__": 243,
    "kind": "testDescribe",
    "name": "describe3",
    "testId": 3,
    "memberof": "test/src/init/InitTask.spec.js~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe3",
    "access": null,
    "description": ".filesToHandle",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitTask.filesToHandle}"
      }
    ],
    "testTargets": [
      "InitTask.filesToHandle"
    ]
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "name": "it4",
    "testId": 4,
    "memberof": "test/src/init/InitTask.spec.js~describe2.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe3.it4",
    "access": null,
    "description": "should return array of absolute paths",
    "lineNumber": 59
  },
  {
    "__docId__": 245,
    "kind": "testDescribe",
    "name": "describe5",
    "testId": 5,
    "memberof": "test/src/init/InitTask.spec.js~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe5",
    "access": null,
    "description": ".run",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitTask.run}"
      }
    ],
    "testTargets": [
      "InitTask.run"
    ]
  },
  {
    "__docId__": 246,
    "kind": "testIt",
    "name": "it6",
    "testId": 6,
    "memberof": "test/src/init/InitTask.spec.js~describe2.describe5",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe5.it6",
    "access": null,
    "description": "should handle all general files",
    "lineNumber": 69
  },
  {
    "__docId__": 247,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/src/init/InitTask.spec.js~describe2.describe5",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe5.it7",
    "access": null,
    "lineNumber": 93
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "name": "it8",
    "testId": 8,
    "memberof": "test/src/init/InitTask.spec.js~describe2.describe5",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/InitTask.spec.js~describe2.describe5.it8",
    "access": null,
    "lineNumber": 109
  },
  {
    "__docId__": 249,
    "kind": "testFile",
    "name": "test/src/init/Options.spec.js",
    "content": "import expect from 'unexpected';\n\nimport InitOptionsAsArray, { InitOptions } from '../../../src/init/Options';\nimport InitOption from '../../../src/lib/init/Option';\n\n/** @test {InitOptions} */\ndescribe('InitOptions', function() {\n  it('should contain InitOptions stored against names', function() {\n    Object.keys(InitOptions).forEach(key => {\n      expect(key, 'to be a', 'string');\n      expect(InitOptions[key], 'to be a', InitOption);\n    });\n  });\n\n  /** @test {InitOptions.atviseUser} */\n  describe('.atviseUser', function() {\n    it('should only be asked if using login', function() {\n      expect(InitOptions.atviseUser.when({ useLogin: false }), 'to equal', false);\n      expect(InitOptions.atviseUser.when({ useLogin: true }), 'to equal', true);\n    });\n  });\n\n  /** @test {InitOptions.atvisePassword} */\n  describe('.atvisePassword', function() {\n    it('should only be asked if using login', function() {\n      expect(InitOptions.atvisePassword.when({ useLogin: false }), 'to equal', false);\n      expect(InitOptions.atvisePassword.when({ useLogin: true }), 'to equal', true);\n    });\n  });\n});\n\n/** @test {InitOptionsAsArray} */\ndescribe('InitOptionsAsArray', function() {\n  it('should contain all InitOptions', function() {\n    InitOptionsAsArray.forEach(opt => {\n      expect(InitOptions[opt.name], 'to be defined');\n      expect(opt, 'to have properties', InitOptions[opt.name]);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/init/Options.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "testDescribe",
    "name": "describe9",
    "testId": 9,
    "memberof": "test/src/init/Options.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9",
    "access": null,
    "description": "InitOptions",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptions}"
      }
    ],
    "testTargets": [
      "InitOptions"
    ]
  },
  {
    "__docId__": 251,
    "kind": "testIt",
    "name": "it10",
    "testId": 10,
    "memberof": "test/src/init/Options.spec.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9.it10",
    "access": null,
    "description": "should contain InitOptions stored against names",
    "lineNumber": 8
  },
  {
    "__docId__": 252,
    "kind": "testDescribe",
    "name": "describe11",
    "testId": 11,
    "memberof": "test/src/init/Options.spec.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9.describe11",
    "access": null,
    "description": ".atviseUser",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptions.atviseUser}"
      }
    ],
    "testTargets": [
      "InitOptions.atviseUser"
    ]
  },
  {
    "__docId__": 253,
    "kind": "testIt",
    "name": "it12",
    "testId": 12,
    "memberof": "test/src/init/Options.spec.js~describe9.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9.describe11.it12",
    "access": null,
    "description": "should only be asked if using login",
    "lineNumber": 17
  },
  {
    "__docId__": 254,
    "kind": "testDescribe",
    "name": "describe13",
    "testId": 13,
    "memberof": "test/src/init/Options.spec.js~describe9",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9.describe13",
    "access": null,
    "description": ".atvisePassword",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptions.atvisePassword}"
      }
    ],
    "testTargets": [
      "InitOptions.atvisePassword"
    ]
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "name": "it14",
    "testId": 14,
    "memberof": "test/src/init/Options.spec.js~describe9.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe9.describe13.it14",
    "access": null,
    "description": "should only be asked if using login",
    "lineNumber": 25
  },
  {
    "__docId__": 256,
    "kind": "testDescribe",
    "name": "describe15",
    "testId": 15,
    "memberof": "test/src/init/Options.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe15",
    "access": null,
    "description": "InitOptionsAsArray",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptionsAsArray}"
      }
    ],
    "testTargets": [
      "InitOptionsAsArray"
    ]
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "name": "it16",
    "testId": 16,
    "memberof": "test/src/init/Options.spec.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/Options.spec.js~describe15.it16",
    "access": null,
    "description": "should contain all InitOptions",
    "lineNumber": 34
  },
  {
    "__docId__": 258,
    "kind": "testFile",
    "name": "test/src/init/OptionsValidator.spec.js",
    "content": "import expect from 'unexpected';\n\nimport Validator from '../../../src/init/OptionsValidator';\n\n/** @test {InitOptionsValidator} */\ndescribe('InitOptionsValidator', function() {\n  /** @test {InitOptionsValidator.name} */\n  describe('.name', function() {\n    it('should fail for empty names', function() {\n      expect(Validator.name(''), 'to match', /must be greater than zero/);\n    });\n\n    it('should fail with capital letters', function() {\n      expect(Validator.name('atSCM'), 'to match', /can no longer contain capital letters/);\n    });\n\n    it('should fail with non-url-safe characters', function() {\n      expect(Validator.name('#asdf'), 'to match', /URL-friendly characters/);\n    });\n\n    it('should fail with names starting with . or _', function() {\n      expect(Validator.name('_atscm'), 'to match', /cannot start with an underscore/);\n      expect(Validator.name('.atscm'), 'to match', /cannot start with a period/);\n    });\n\n    it('should fail with leading or trailing spaces', function() {\n      expect(Validator.name(' atscm'), 'to match', /cannot contain leading or trailing spaces/);\n      expect(Validator.name('atscm '), 'to match', /cannot contain leading or trailing spaces/);\n    });\n\n    it('should fail with core nodejs module name', function() {\n      expect(Validator.name('http'), 'to match', /is a core module name/);\n    });\n\n    it('should fail with blacklisted name', function() {\n      expect(Validator.name('node_modules'), 'to match', /is a blacklisted name/);\n    });\n\n    it('should fail with names longer than 214 characters', function() {\n      expect(Validator.name('a'.repeat(215)), 'to match', /can no longer contain more than 214/);\n    });\n\n    it('should work for valid package names', function() {\n      expect(Validator.name('atscm'), 'to be', true);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "testDescribe",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/src/init/OptionsValidator.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17",
    "access": null,
    "description": "InitOptionsValidator",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptionsValidator}"
      }
    ],
    "testTargets": [
      "InitOptionsValidator"
    ]
  },
  {
    "__docId__": 260,
    "kind": "testDescribe",
    "name": "describe18",
    "testId": 18,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "access": null,
    "description": ".name",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOptionsValidator.name}"
      }
    ],
    "testTargets": [
      "InitOptionsValidator.name"
    ]
  },
  {
    "__docId__": 261,
    "kind": "testIt",
    "name": "it19",
    "testId": 19,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it19",
    "access": null,
    "description": "should fail for empty names",
    "lineNumber": 9
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "name": "it20",
    "testId": 20,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it20",
    "access": null,
    "description": "should fail with capital letters",
    "lineNumber": 13
  },
  {
    "__docId__": 263,
    "kind": "testIt",
    "name": "it21",
    "testId": 21,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it21",
    "access": null,
    "description": "should fail with non-url-safe characters",
    "lineNumber": 17
  },
  {
    "__docId__": 264,
    "kind": "testIt",
    "name": "it22",
    "testId": 22,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it22",
    "access": null,
    "description": "should fail with names starting with . or _",
    "lineNumber": 21
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "name": "it23",
    "testId": 23,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it23",
    "access": null,
    "description": "should fail with leading or trailing spaces",
    "lineNumber": 26
  },
  {
    "__docId__": 266,
    "kind": "testIt",
    "name": "it24",
    "testId": 24,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it24",
    "access": null,
    "description": "should fail with core nodejs module name",
    "lineNumber": 31
  },
  {
    "__docId__": 267,
    "kind": "testIt",
    "name": "it25",
    "testId": 25,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it25",
    "access": null,
    "description": "should fail with blacklisted name",
    "lineNumber": 35
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "name": "it26",
    "testId": 26,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it26",
    "access": null,
    "description": "should fail with names longer than 214 characters",
    "lineNumber": 39
  },
  {
    "__docId__": 269,
    "kind": "testIt",
    "name": "it27",
    "testId": 27,
    "memberof": "test/src/init/OptionsValidator.spec.js~describe17.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/init/OptionsValidator.spec.js~describe17.describe18.it27",
    "access": null,
    "description": "should work for valid package names",
    "lineNumber": 43
  },
  {
    "__docId__": 270,
    "kind": "testFile",
    "name": "test/src/lib/config/Atviseproject.spec.js",
    "content": "import expect from 'unexpected';\n\nimport Atviseproject from '../../../../src/lib/config/Atviseproject';\nimport NodeId from '../../../../src/lib/server/NodeId';\n\n/** @test {Atviseproject} */\ndescribe('Atviseproject', function() {\n  function expectNodeIds(arr) {\n    it('should contain NodeIds', function() {\n      arr.forEach(id => expect(id, 'to be a', NodeId));\n    });\n  }\n\n  /** @test {Atviseproject.login} */\n  describe('.login', function() {\n    it('should default to false', function() {\n      expect(Atviseproject.login, 'to equal', false);\n    });\n  });\n\n  /** @test {Atviseproject.nodes} */\n  describe('.nodes', function() {\n    expectNodeIds(Atviseproject.nodes);\n  });\n\n  /** @test {Atviseproject.nodesToWatch} */\n  describe('.nodesToWatch', function() {\n    expectNodeIds(Atviseproject.nodesToWatch);\n  });\n\n  /** @test {Atviseproject.EditorRelatedNodes} */\n  describe('.EditorRelatedNodes', function() {\n    expectNodeIds(Atviseproject.EditorRelatedNodes);\n  });\n\n  /** @test {Atviseproject.ServerRelatedNodes} */\n  describe('.ServerRelatedNodes', function() {\n    expectNodeIds(Atviseproject.ServerRelatedNodes);\n  });\n\n  /** @test {Atviseproject.EditorRelatedNodes} */\n  describe('.ignoreNodes', function() {\n    expectNodeIds(Atviseproject.ignoreNodes);\n\n    it('should contain Atviseproject.EditorRelatedNodes', function() {\n      expect(Atviseproject.ignoreNodes, 'to contain', ...Atviseproject.EditorRelatedNodes);\n    });\n\n    it('should contain Atviseproject.ServerRelatedNodes', function() {\n      expect(Atviseproject.ignoreNodes, 'to contain', ...Atviseproject.ServerRelatedNodes);\n    });\n  });\n\n  /** @test {Atviseproject.inspect} */\n  describe('.inspect', function() {\n    it('should return the properties to print', function() {\n      expect(Atviseproject.inspect(), 'to have properties', [\n        'host',\n        'port',\n        'useTransformers',\n        'nodes',\n        'nodesToWatch',\n        'ignoreNodes',\n      ]);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "testDescribe",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/src/lib/config/Atviseproject.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "access": null,
    "description": "Atviseproject",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject}"
      }
    ],
    "testTargets": [
      "Atviseproject"
    ]
  },
  {
    "__docId__": 272,
    "kind": "testIt",
    "name": "it29",
    "testId": 29,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.it29",
    "access": null,
    "description": "should contain NodeIds",
    "lineNumber": 9
  },
  {
    "__docId__": 273,
    "kind": "testDescribe",
    "name": "describe30",
    "testId": 30,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe30",
    "access": null,
    "description": ".login",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.login}"
      }
    ],
    "testTargets": [
      "Atviseproject.login"
    ]
  },
  {
    "__docId__": 274,
    "kind": "testIt",
    "name": "it31",
    "testId": 31,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28.describe30",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe30.it31",
    "access": null,
    "description": "should default to false",
    "lineNumber": 16
  },
  {
    "__docId__": 275,
    "kind": "testDescribe",
    "name": "describe32",
    "testId": 32,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe32",
    "access": null,
    "description": ".nodes",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.nodes}"
      }
    ],
    "testTargets": [
      "Atviseproject.nodes"
    ]
  },
  {
    "__docId__": 276,
    "kind": "testDescribe",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe33",
    "access": null,
    "description": ".nodesToWatch",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.nodesToWatch}"
      }
    ],
    "testTargets": [
      "Atviseproject.nodesToWatch"
    ]
  },
  {
    "__docId__": 277,
    "kind": "testDescribe",
    "name": "describe34",
    "testId": 34,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe34",
    "access": null,
    "description": ".EditorRelatedNodes",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.EditorRelatedNodes}"
      }
    ],
    "testTargets": [
      "Atviseproject.EditorRelatedNodes"
    ]
  },
  {
    "__docId__": 278,
    "kind": "testDescribe",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe35",
    "access": null,
    "description": ".ServerRelatedNodes",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.ServerRelatedNodes}"
      }
    ],
    "testTargets": [
      "Atviseproject.ServerRelatedNodes"
    ]
  },
  {
    "__docId__": 279,
    "kind": "testDescribe",
    "name": "describe36",
    "testId": 36,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe36",
    "access": null,
    "description": ".ignoreNodes",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.EditorRelatedNodes}"
      }
    ],
    "testTargets": [
      "Atviseproject.EditorRelatedNodes"
    ]
  },
  {
    "__docId__": 280,
    "kind": "testIt",
    "name": "it37",
    "testId": 37,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28.describe36",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe36.it37",
    "access": null,
    "description": "should contain Atviseproject.EditorRelatedNodes",
    "lineNumber": 45
  },
  {
    "__docId__": 281,
    "kind": "testIt",
    "name": "it38",
    "testId": 38,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28.describe36",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe36.it38",
    "access": null,
    "description": "should contain Atviseproject.ServerRelatedNodes",
    "lineNumber": 49
  },
  {
    "__docId__": 282,
    "kind": "testDescribe",
    "name": "describe39",
    "testId": 39,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe39",
    "access": null,
    "description": ".inspect",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Atviseproject.inspect}"
      }
    ],
    "testTargets": [
      "Atviseproject.inspect"
    ]
  },
  {
    "__docId__": 283,
    "kind": "testIt",
    "name": "it40",
    "testId": 40,
    "memberof": "test/src/lib/config/Atviseproject.spec.js~describe28.describe39",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/config/Atviseproject.spec.js~describe28.describe39.it40",
    "access": null,
    "description": "should return the properties to print",
    "lineNumber": 56
  },
  {
    "__docId__": 284,
    "kind": "testFile",
    "name": "test/src/lib/init/Options.spec.js",
    "content": "import expect from 'unexpected';\n\nimport InitOption from '../../../../src/lib/init/Option';\n\n/** @test {InitOption} */\ndescribe('InitOption', function() {\n  it('should throw when run without arguments', function() {\n    expect(() => new InitOption(), 'to throw', 'message or options required');\n  });\n\n  /** @test {InitOption#constructor} */\n  describe('#constructor', function() {\n    context('when run with string, string', function() {\n      it('should throw error for empty message', function() {\n        expect(() => new InitOption(''), 'to throw error', 'message is required');\n      });\n\n      it('should work with message only', function() {\n        let opt;\n\n        expect(() => (opt = new InitOption('message')), 'not to throw');\n        expect(opt.message, 'to match', /message/);\n        expect(opt.default, 'to be', undefined);\n      });\n\n      it('should set default type', function() {\n        expect((new InitOption('message')).type, 'to equal', InitOption.DefaultType);\n      });\n\n      it('should add `?` to message', function() {\n        expect((new InitOption('message')).message, 'to equal', 'message?');\n      });\n\n      it('should store default if given', function() {\n        expect((new InitOption('message', 'default')).default, 'to equal', 'default');\n      });\n    });\n\n    context('when run with object', function() {\n      it('should throw error for missing message', function() {\n        expect(() => new InitOption({}), 'to throw error', 'message is required');\n      });\n\n      it('should throw error for empty message', function() {\n        expect(() => new InitOption({ message: '' }), 'to throw error', 'message is required');\n      });\n\n      it('should add `?` to message', function() {\n        expect((new InitOption({ message: 'message' })).message, 'to equal', 'message?');\n      });\n\n      it('should set default type', function() {\n        expect((new InitOption({ message: 'message' })).type, 'to equal', InitOption.DefaultType);\n      });\n\n      it('should store type, message, default and validate', function() {\n        const opts = {\n          type: 'test',\n          message: 'message',\n          default: 'default',\n          validate: () => true,\n        };\n\n        const result = Object.assign({}, opts, { message: `${opts.message}?` });\n\n        expect((new InitOption(opts)), 'to have properties', result);\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "testDescribe",
    "name": "describe41",
    "testId": 41,
    "memberof": "test/src/lib/init/Options.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41",
    "access": null,
    "description": "InitOption",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOption}"
      }
    ],
    "testTargets": [
      "InitOption"
    ]
  },
  {
    "__docId__": 286,
    "kind": "testIt",
    "name": "it42",
    "testId": 42,
    "memberof": "test/src/lib/init/Options.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.it42",
    "access": null,
    "description": "should throw when run without arguments",
    "lineNumber": 7
  },
  {
    "__docId__": 287,
    "kind": "testDescribe",
    "name": "describe43",
    "testId": 43,
    "memberof": "test/src/lib/init/Options.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43",
    "access": null,
    "description": "#constructor",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{InitOption#constructor}"
      }
    ],
    "testTargets": [
      "InitOption#constructor"
    ]
  },
  {
    "__docId__": 288,
    "kind": "testDescribe",
    "name": "context44",
    "testId": 44,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "access": null,
    "description": "when run with string, string",
    "lineNumber": 13
  },
  {
    "__docId__": 289,
    "kind": "testIt",
    "name": "it45",
    "testId": 45,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44.it45",
    "access": null,
    "description": "should throw error for empty message",
    "lineNumber": 14
  },
  {
    "__docId__": 290,
    "kind": "testIt",
    "name": "it46",
    "testId": 46,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44.it46",
    "access": null,
    "description": "should work with message only",
    "lineNumber": 18
  },
  {
    "__docId__": 291,
    "kind": "testIt",
    "name": "it47",
    "testId": 47,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44.it47",
    "access": null,
    "description": "should set default type",
    "lineNumber": 26
  },
  {
    "__docId__": 292,
    "kind": "testIt",
    "name": "it48",
    "testId": 48,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44.it48",
    "access": null,
    "description": "should add `?` to message",
    "lineNumber": 30
  },
  {
    "__docId__": 293,
    "kind": "testIt",
    "name": "it49",
    "testId": 49,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context44",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context44.it49",
    "access": null,
    "description": "should store default if given",
    "lineNumber": 34
  },
  {
    "__docId__": 294,
    "kind": "testDescribe",
    "name": "context50",
    "testId": 50,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "access": null,
    "description": "when run with object",
    "lineNumber": 39
  },
  {
    "__docId__": 295,
    "kind": "testIt",
    "name": "it51",
    "testId": 51,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50.it51",
    "access": null,
    "description": "should throw error for missing message",
    "lineNumber": 40
  },
  {
    "__docId__": 296,
    "kind": "testIt",
    "name": "it52",
    "testId": 52,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50.it52",
    "access": null,
    "description": "should throw error for empty message",
    "lineNumber": 44
  },
  {
    "__docId__": 297,
    "kind": "testIt",
    "name": "it53",
    "testId": 53,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50.it53",
    "access": null,
    "description": "should add `?` to message",
    "lineNumber": 48
  },
  {
    "__docId__": 298,
    "kind": "testIt",
    "name": "it54",
    "testId": 54,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50.it54",
    "access": null,
    "description": "should set default type",
    "lineNumber": 52
  },
  {
    "__docId__": 299,
    "kind": "testIt",
    "name": "it55",
    "testId": 55,
    "memberof": "test/src/lib/init/Options.spec.js~describe41.describe43.context50",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/init/Options.spec.js~describe41.describe43.context50.it55",
    "access": null,
    "description": "should store type, message, default and validate",
    "lineNumber": 56
  },
  {
    "__docId__": 300,
    "kind": "testFile",
    "name": "test/src/lib/server/AtviseFile.spec.js",
    "content": "import expect from 'unexpected';\nimport { stub } from 'sinon';\n\nimport { Buffer } from 'buffer';\nimport File from 'vinyl';\nimport { DataType, VariantArrayType } from 'node-opcua';\nimport AtviseFile from '../../../../src/lib/server/AtviseFile';\nimport AtviseTypes from '../../../../src/lib/server/Types';\nimport NodeId from '../../../../src/lib/server/NodeId';\n\n/** @test {AtviseFile} */\ndescribe('AtviseFile', function() {\n  /** @test {AtviseFile#constructor} */\n  describe('#constructor', function() {\n    it('should create a vinyl instance', function() {\n      const file = new AtviseFile();\n\n      expect(file, 'to be a', File);\n    });\n  });\n\n  const tests = [\n    {\n      name: 'should store variables with their data type as an extension',\n      nodeId: new NodeId('ns=1;s=AGENT.OBJECTS.Test'),\n      dataType: DataType.UInt16,\n      typeDefinition: new NodeId(NodeId.NodeIdType.NUMERIC, 62, 0),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'AGENT/OBJECTS/Test.uint16',\n    },\n    {\n      name: 'should store variable arrays with their data type as an extension',\n      nodeId: new NodeId('ns=1;s=AGENT.OBJECTS.Test'),\n      dataType: DataType.UInt16,\n      typeDefinition: new NodeId(NodeId.NodeIdType.NUMERIC, 62, 0),\n      arrayType: VariantArrayType.Array,\n      filePath: 'AGENT/OBJECTS/Test.uint16.array',\n    },\n    {\n      name: 'should store variable matrices with their data type as an extension',\n      nodeId: new NodeId('ns=1;s=AGENT.OBJECTS.Test'),\n      dataType: DataType.UInt16,\n      typeDefinition: new NodeId(NodeId.NodeIdType.NUMERIC, 62, 0),\n      arrayType: VariantArrayType.Matrix,\n      filePath: 'AGENT/OBJECTS/Test.uint16.matrix',\n    },\n    {\n      name: 'should store property variables with their data type as an extension',\n      nodeId: new NodeId('ns=1;s=AGENT.OBJECTS.Test.property'),\n      dataType: DataType.UInt16,\n      typeDefinition: new NodeId(NodeId.NodeIdType.NUMERIC, 68, 0),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'AGENT/OBJECTS/Test/property.prop.uint16',\n    },\n    {\n      name: 'should store html help documents with a \".help.html\" extension',\n      nodeId: new NodeId('ns=1;s=AGENT.DISPLAYS.Test.en'),\n      dataType: DataType.XmlElement,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.HtmlHelp'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'AGENT/DISPLAYS/Test/en.help.html',\n    },\n    {\n      name: 'should store quickdynamics with a \".qd.xml\" extension',\n      nodeId: new NodeId('ns=1;s=SYSTEM.LIBRARY.PROJECT.QUICKDYNAMICS.Test'),\n      dataType: DataType.XmlElement,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.QuickDynamic'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'SYSTEM/LIBRARY/PROJECT/QUICKDYNAMICS/Test.qd.xml',\n    },\n    {\n      name: 'should store scripts with a \".script.xml\" extension',\n      nodeId: new NodeId('ns=1;s=SYSTEM.LIBRARY.PROJECT.SERVERSCRIPTS.Test'),\n      dataType: DataType.XmlElement,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.ScriptCode'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'SYSTEM/LIBRARY/PROJECT/SERVERSCRIPTS/Test.script.xml',\n    },\n    {\n      name: 'should store displays with a \".display.xml\" extension',\n      nodeId: new NodeId('ns=1;s=AGENT.DISPLAYS.Test'),\n      dataType: DataType.XmlElement,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.Display'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'AGENT/DISPLAYS/Test.display.xml',\n    },\n    {\n      name: 'should store scripts with a \".locs.xml\" extension',\n      nodeId: new NodeId('ns=1;s=SYSTEM.LIBRARY.PROJECT.de'),\n      dataType: DataType.XmlElement,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.TranslationTable'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'SYSTEM/LIBRARY/PROJECT/de.locs.xml',\n    },\n    {\n      name: 'should store custom resources with their original extension',\n      nodeId: new NodeId('ns=1;s=SYSTEM.LIBRARY.PROJECT.RESOURCES/Test.md'),\n      dataType: DataType.ByteString,\n      typeDefinition: new NodeId('VariableTypes.ATVISE.Resource.OctetStream'),\n      arrayType: VariantArrayType.Scalar,\n      filePath: 'SYSTEM/LIBRARY/PROJECT/RESOURCES/Test.md',\n    },\n  ].concat(\n    AtviseTypes.filter(t => t.constructor.name === 'AtviseResourceType')\n      .map(t => ({\n        name: `should store ${t.typeDefinition.value} resources with their original extension`,\n        nodeId: new NodeId(`ns=1;s=SYSTEM.LIBRARY.PROJECT.RESOURCES/Test.${t.identifier}`),\n        dataType: DataType.ByteString,\n        typeDefinition: new NodeId(t.typeDefinition.value),\n        arrayType: VariantArrayType.Scalar,\n        filePath: `SYSTEM/LIBRARY/PROJECT/RESOURCES/Test.${t.identifier}`,\n      }))\n  );\n\n  /** @test {AtviseFile.pathForReadResults} */\n  describe('.pathForReadResults', function() {\n    tests.forEach(test => {\n      it(test.name, function() {\n        expect(AtviseFile.pathForReadResult({\n          nodeId: test.nodeId,\n          value: {\n            $dataType: test.dataType,\n            $arrayType: test.arrayType,\n          },\n          referenceDescription: {\n            typeDefinition: test.typeDefinition,\n          },\n        }), 'to equal', test.filePath);\n      });\n    })\n  });\n\n  /** @test {AtviseFile.encodeValue} */\n  describe('.encodeValue', function() {\n    it('should forward null', function() {\n      expect(AtviseFile.encodeValue(null), 'to equal', null);\n    });\n\n    it('should store timestamp as string for DateTime values', function() {\n      const now = new Date();\n\n      expect(AtviseFile.encodeValue({ value: now }, DataType.DateTime),\n        'to equal', Buffer.from(now.getTime().toString()));\n    });\n  });\n\n  /** @test {AtviseFile.decodeValue} */\n  describe('.decodeValue', function() {\n    it('should forward null', function() {\n      expect(AtviseFile.decodeValue(null), 'to equal', null);\n    });\n\n    function testDecoderForDataType(dataType, rawValue, expectedValue) {\n      it(`decoder for ${dataType} should work`, function() {\n        expect(AtviseFile.decodeValue(Buffer.from(rawValue), dataType),\n          'to satisfy', expectedValue);\n      });\n    }\n\n    const now = (new Date());\n\n    [\n      [DataType.Boolean, 'false', false],\n      [DataType.Boolean, 'true', true],\n      [DataType.String, 'test', 'test'],\n      [DataType.NodeId, 'ns=1;s=AGENT.DISPLAYS.Main', new NodeId('AGENT.DISPLAYS.Main')],\n      [DataType.DateTime, now.getTime().toString(), now],\n    ].forEach(t => testDecoderForDataType(...t));\n\n    it('should forward buffer without spection encoding', function() {\n      const buffer = new Buffer('test');\n      expect(AtviseFile.decodeValue(buffer, DataType.ByteString), 'to equal', buffer);\n    });\n  });\n\n  /** @test {AtviseFile.fromReadResult} */\n  describe('.fromReadResult', function() {\n    it('should fail without value', function() {\n      expect(() => AtviseFile.fromReadResult({}), 'to throw', 'no value');\n    });\n  });\n\n  /** @test {AtviseFile#_getMetadata} */\n  describe('#_getMetadata', function() {\n    tests.forEach(test => {\n      it(test.name, function() {\n        const file = new AtviseFile({ path: test.filePath });\n\n        expect(() => file._getMetadata(), 'not to throw');\n        expect(file._dataType, 'to equal', test.dataType);\n        expect(file._arrayType, 'to equal', test.arrayType);\n        expect(file._typeDefinition, 'to equal', test.typeDefinition);\n      });\n    });\n  });\n\n  function testMetaGetter(name) {\n    beforeEach(() => stub(AtviseFile.prototype, '_getMetadata', () => {}));\n    afterEach(() => AtviseFile.prototype._getMetadata.restore());\n\n    it('should call _getMetadata if not present', function() {\n      const file = new AtviseFile({ path: 'path' });\n      const val = file[name];\n\n      expect(val, 'to be', undefined);\n      expect(AtviseFile.prototype._getMetadata.calledOnce, 'to be', true);\n    });\n  }\n\n  /** @test {AtviseFile#dataType} */\n  describe('#dataType', function() {\n    testMetaGetter('dataType');\n  });\n\n  /** @test {AtviseFile#arrayType} */\n  describe('#arrayType', function() {\n    testMetaGetter('arrayType');\n  });\n\n  /** @test {AtviseFile#typeDefinition} */\n  describe('#typeDefinition', function() {\n    testMetaGetter('typeDefinition');\n  });\n\n  /** @test {AtviseFile#isDisplay} */\n  describe('#isDisplay', function() {\n    it('should return true for AtviseFiles with correct TypeDefinition', function() {\n      expect((new AtviseFile({\n        path: 'test.display',\n        _typeDefinition: new NodeId('VariableTypes.ATVISE.Display'),\n      })).isDisplay, 'to be true');\n    });\n  });\n\n  /** @test {AtivseFile#value} */\n  describe('#value', function() {\n    const val = new Buffer('test');\n\n    before(() => {\n      stub(AtviseFile, 'decodeValue', () => true);\n      stub(AtviseFile, 'encodeValue', () => val);\n    });\n\n    after(() => {\n      AtviseFile.decodeValue.restore();\n      AtviseFile.encodeValue.restore();\n    });\n\n    context('when used as getter', function() {\n      it('should return decodedValue', function() {\n        const file = new AtviseFile({ path: 'path.ext' });\n\n        expect(file.value, 'to equal', true);\n        expect(AtviseFile.decodeValue.calledOnce, 'to be true');\n      });\n    });\n\n    context('when used as setter', function() {\n      it('should set encoded value as contents', function() {\n        const file = new AtviseFile({ path: 'path.ext' });\n        file.value = 13;\n\n        expect(AtviseFile.encodeValue.calledOnce, 'to be true');\n        expect(file.contents, 'to equal', val);\n      });\n    });\n  });\n\n  /** @test {AtviseFile#NodeId} */\n  describe('#NodeId', function() {\n    it('should keep extensions for resources', function() {\n      expect((new AtviseFile({ path: 'SYSTEM/LIBRARY/PROJECT/RESOURCES/example.js' }).nodeId.value),\n        'to equal', 'SYSTEM.LIBRARY.PROJECT.RESOURCES/example.js');\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "testDescribe",
    "name": "describe56",
    "testId": 56,
    "memberof": "test/src/lib/server/AtviseFile.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "access": null,
    "description": "AtviseFile",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile}"
      }
    ],
    "testTargets": [
      "AtviseFile"
    ]
  },
  {
    "__docId__": 302,
    "kind": "testDescribe",
    "name": "describe57",
    "testId": 57,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe57",
    "access": null,
    "description": "#constructor",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#constructor}"
      }
    ],
    "testTargets": [
      "AtviseFile#constructor"
    ]
  },
  {
    "__docId__": 303,
    "kind": "testIt",
    "name": "it58",
    "testId": 58,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe57",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe57.it58",
    "access": null,
    "description": "should create a vinyl instance",
    "lineNumber": 15
  },
  {
    "__docId__": 304,
    "kind": "testDescribe",
    "name": "describe59",
    "testId": 59,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe59",
    "access": null,
    "description": ".pathForReadResults",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile.pathForReadResults}"
      }
    ],
    "testTargets": [
      "AtviseFile.pathForReadResults"
    ]
  },
  {
    "__docId__": 305,
    "kind": "testIt",
    "name": "it60",
    "testId": 60,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe59.it60",
    "access": null,
    "lineNumber": 118
  },
  {
    "__docId__": 306,
    "kind": "testDescribe",
    "name": "describe61",
    "testId": 61,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe61",
    "access": null,
    "description": ".encodeValue",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile.encodeValue}"
      }
    ],
    "testTargets": [
      "AtviseFile.encodeValue"
    ]
  },
  {
    "__docId__": 307,
    "kind": "testIt",
    "name": "it62",
    "testId": 62,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe61.it62",
    "access": null,
    "description": "should forward null",
    "lineNumber": 135
  },
  {
    "__docId__": 308,
    "kind": "testIt",
    "name": "it63",
    "testId": 63,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe61.it63",
    "access": null,
    "description": "should store timestamp as string for DateTime values",
    "lineNumber": 139
  },
  {
    "__docId__": 309,
    "kind": "testDescribe",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64",
    "access": null,
    "description": ".decodeValue",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile.decodeValue}"
      }
    ],
    "testTargets": [
      "AtviseFile.decodeValue"
    ]
  },
  {
    "__docId__": 310,
    "kind": "testIt",
    "name": "it65",
    "testId": 65,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64.it65",
    "access": null,
    "description": "should forward null",
    "lineNumber": 149
  },
  {
    "__docId__": 311,
    "kind": "testIt",
    "name": "it66",
    "testId": 66,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64.it66",
    "access": null,
    "lineNumber": 154
  },
  {
    "__docId__": 312,
    "kind": "testIt",
    "name": "it67",
    "testId": 67,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe64.it67",
    "access": null,
    "description": "should forward buffer without spection encoding",
    "lineNumber": 170
  },
  {
    "__docId__": 313,
    "kind": "testDescribe",
    "name": "describe68",
    "testId": 68,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe68",
    "access": null,
    "description": ".fromReadResult",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile.fromReadResult}"
      }
    ],
    "testTargets": [
      "AtviseFile.fromReadResult"
    ]
  },
  {
    "__docId__": 314,
    "kind": "testIt",
    "name": "it69",
    "testId": 69,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe68",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe68.it69",
    "access": null,
    "description": "should fail without value",
    "lineNumber": 178
  },
  {
    "__docId__": 315,
    "kind": "testDescribe",
    "name": "describe70",
    "testId": 70,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe70",
    "access": null,
    "description": "#_getMetadata",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#_getMetadata}"
      }
    ],
    "testTargets": [
      "AtviseFile#_getMetadata"
    ]
  },
  {
    "__docId__": 316,
    "kind": "testIt",
    "name": "it71",
    "testId": 71,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe70",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe70.it71",
    "access": null,
    "lineNumber": 186
  },
  {
    "__docId__": 317,
    "kind": "testIt",
    "name": "it72",
    "testId": 72,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.it72",
    "access": null,
    "description": "should call _getMetadata if not present",
    "lineNumber": 201
  },
  {
    "__docId__": 318,
    "kind": "testDescribe",
    "name": "describe73",
    "testId": 73,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe73",
    "access": null,
    "description": "#dataType",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#dataType}"
      }
    ],
    "testTargets": [
      "AtviseFile#dataType"
    ]
  },
  {
    "__docId__": 319,
    "kind": "testDescribe",
    "name": "describe74",
    "testId": 74,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe74",
    "access": null,
    "description": "#arrayType",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#arrayType}"
      }
    ],
    "testTargets": [
      "AtviseFile#arrayType"
    ]
  },
  {
    "__docId__": 320,
    "kind": "testDescribe",
    "name": "describe75",
    "testId": 75,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe75",
    "access": null,
    "description": "#typeDefinition",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#typeDefinition}"
      }
    ],
    "testTargets": [
      "AtviseFile#typeDefinition"
    ]
  },
  {
    "__docId__": 321,
    "kind": "testDescribe",
    "name": "describe76",
    "testId": 76,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe76",
    "access": null,
    "description": "#isDisplay",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#isDisplay}"
      }
    ],
    "testTargets": [
      "AtviseFile#isDisplay"
    ]
  },
  {
    "__docId__": 322,
    "kind": "testIt",
    "name": "it77",
    "testId": 77,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe76",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe76.it77",
    "access": null,
    "description": "should return true for AtviseFiles with correct TypeDefinition",
    "lineNumber": 227
  },
  {
    "__docId__": 323,
    "kind": "testDescribe",
    "name": "describe78",
    "testId": 78,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78",
    "access": null,
    "description": "#value",
    "lineNumber": 236,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtivseFile#value}"
      }
    ],
    "testTargets": [
      "AtivseFile#value"
    ]
  },
  {
    "__docId__": 324,
    "kind": "testDescribe",
    "name": "context79",
    "testId": 79,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context79",
    "access": null,
    "description": "when used as getter",
    "lineNumber": 249
  },
  {
    "__docId__": 325,
    "kind": "testIt",
    "name": "it80",
    "testId": 80,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context79",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context79.it80",
    "access": null,
    "description": "should return decodedValue",
    "lineNumber": 250
  },
  {
    "__docId__": 326,
    "kind": "testDescribe",
    "name": "context81",
    "testId": 81,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context81",
    "access": null,
    "description": "when used as setter",
    "lineNumber": 258
  },
  {
    "__docId__": 327,
    "kind": "testIt",
    "name": "it82",
    "testId": 82,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context81",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe78.context81.it82",
    "access": null,
    "description": "should set encoded value as contents",
    "lineNumber": 259
  },
  {
    "__docId__": 328,
    "kind": "testDescribe",
    "name": "describe83",
    "testId": 83,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe83",
    "access": null,
    "description": "#NodeId",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AtviseFile#NodeId}"
      }
    ],
    "testTargets": [
      "AtviseFile#NodeId"
    ]
  },
  {
    "__docId__": 329,
    "kind": "testIt",
    "name": "it84",
    "testId": 84,
    "memberof": "test/src/lib/server/AtviseFile.spec.js~describe56.describe83",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/AtviseFile.spec.js~describe56.describe83.it84",
    "access": null,
    "description": "should keep extensions for resources",
    "lineNumber": 271
  },
  {
    "__docId__": 330,
    "kind": "testFile",
    "name": "test/src/lib/server/Client.spec.js",
    "content": "import expect from 'unexpected';\nimport proxyquire from 'proxyquire';\n\nimport { OPCUAClient } from 'node-opcua';\nimport Client from '../../../../src/lib/server/Client';\n\nconst InvalidHostClient = proxyquire('../../../../src/lib/server/Client', {\n  '../../config/ProjectConfig': {\n    default: {\n      host: 'in valid url',\n      port: { opc: 4840 },\n    },\n  },\n}).default;\n\nconst NotExisingHostClient = proxyquire('../../../../src/lib/server/Client', {\n  '../../config/ProjectConfig': {\n    default: {\n      host: '123.456.789.0',\n      port: { opc: 4840 },\n    },\n  },\n}).default;\n\nconst FailingClient = proxyquire('../../../../src/lib/server/Client', {\n  'node-opcua': {\n    OPCUAClient: class FailingCli extends OPCUAClient {\n\n      connect(endpoint, callback) {\n        callback(new Error('Error message'))\n      }\n\n    }\n  },\n}).default;\n\n/** @test {Client} */\ndescribe('Client', function() {\n  this.timeout(5000);\n\n  /** @test {Client.create} */\n  describe('.create', function() {\n    it('should return a OPCUAClient', function() {\n      return expect(Client.create(), 'when fulfilled', 'to be a', OPCUAClient);\n    });\n\n    it('should fail with invalid host', function() {\n      return expect(InvalidHostClient.create(), 'to be rejected with', /Invalid endpoint url/);\n    });\n\n    it('should fail on connection timeout', function() {\n      return expect(NotExisingHostClient.create(), 'to be rejected with', /Connection timed out/);\n    });\n\n    it('should fail when node-opcua encounters an error', function() {\n      return expect(FailingClient.create(), 'to be rejected with', Error);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 331,
    "kind": "testDescribe",
    "name": "describe85",
    "testId": 85,
    "memberof": "test/src/lib/server/Client.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85",
    "access": null,
    "description": "Client",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Client}"
      }
    ],
    "testTargets": [
      "Client"
    ]
  },
  {
    "__docId__": 332,
    "kind": "testDescribe",
    "name": "describe86",
    "testId": 86,
    "memberof": "test/src/lib/server/Client.spec.js~describe85",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85.describe86",
    "access": null,
    "description": ".create",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Client.create}"
      }
    ],
    "testTargets": [
      "Client.create"
    ]
  },
  {
    "__docId__": 333,
    "kind": "testIt",
    "name": "it87",
    "testId": 87,
    "memberof": "test/src/lib/server/Client.spec.js~describe85.describe86",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85.describe86.it87",
    "access": null,
    "description": "should return a OPCUAClient",
    "lineNumber": 43
  },
  {
    "__docId__": 334,
    "kind": "testIt",
    "name": "it88",
    "testId": 88,
    "memberof": "test/src/lib/server/Client.spec.js~describe85.describe86",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85.describe86.it88",
    "access": null,
    "description": "should fail with invalid host",
    "lineNumber": 47
  },
  {
    "__docId__": 335,
    "kind": "testIt",
    "name": "it89",
    "testId": 89,
    "memberof": "test/src/lib/server/Client.spec.js~describe85.describe86",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85.describe86.it89",
    "access": null,
    "description": "should fail on connection timeout",
    "lineNumber": 51
  },
  {
    "__docId__": 336,
    "kind": "testIt",
    "name": "it90",
    "testId": 90,
    "memberof": "test/src/lib/server/Client.spec.js~describe85.describe86",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Client.spec.js~describe85.describe86.it90",
    "access": null,
    "description": "should fail when node-opcua encounters an error",
    "lineNumber": 55
  },
  {
    "__docId__": 337,
    "kind": "testFile",
    "name": "test/src/lib/server/NodeId.spec.js",
    "content": "import expect from 'unexpected';\nimport { spy } from 'sinon';\n\nimport { NodeId as OpcNodeId } from 'node-opcua';\nimport NodeId from '../../../../src/lib/server/NodeId';\n\n/** @test {NodeId} */\ndescribe('NodeId', function() {\n  const path = 'AGENT/DISPLAYS/Main';\n  const id = 'AGENT.DISPLAYS.Main';\n\n  /** @test {NodeId#constructor} */\n  describe('#constructor', function() {\n    function expectType(type, ...args) {\n      expect((new NodeId(...args)).identifierType, 'to equal', type);\n    }\n\n    context('when called with value only', function() {\n      it('should work', function() {\n        expect(() => new NodeId('AGENT.DISPLAYS'), 'not to throw');\n      });\n\n      it('should set namespace to 1', function() {\n        expect((new NodeId('AGENT.DISPLAYS')).namespace, 'to equal', 1);\n      });\n\n      it('should set indentifierType to string if string is passed', function() {\n        expectType(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS');\n      });\n\n      it('should set indentifierType to number if number is passed', function() {\n        expectType(NodeId.NodeIdType.NUMERIC, 123);\n      });\n    });\n\n    context('when called with a nodeid string', function() {\n      it('should work', function() {\n        expect(() => new NodeId('ns=1;s=AGENT.DISPLAYS'), 'not to throw');\n      });\n\n      it('should get namespace from string', function() {\n        expect((new NodeId('ns=13;s=AGENT.DISPLAYS')).namespace, 'to equal', 13);\n      });\n\n      it('should get identifierType from string', function() {\n        expectType(NodeId.NodeIdType.STRING, 'ns=1;s=AGENT.DISPLAYS');\n        expectType(NodeId.NodeIdType.NUMERIC, 'ns=1;i=13');\n        // FIXME: Missing tests for type GUID\n        expectType(NodeId.NodeIdType.BYTESTRING, 'ns=1;b=13Ac');\n      });\n    });\n\n    context('when called with type, value, namespace', function() {\n      it('should work', function() {\n        expect(() => new NodeId(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS', 1), 'not to throw');\n      });\n\n      it('should set namespace to 1 if omitted', function() {\n        expect(() => new NodeId(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS'), 'not to throw');\n        expect((new NodeId(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS')).namespace, 'to equal', 1);\n      });\n    });\n\n    it('should extend node-opcua\\'s NodeId', function() {\n      expect((new NodeId(NodeId.NodeIdType.NUMERIC, 123, 1)), 'to be a', OpcNodeId);\n    });\n  });\n\n  /** @test {NodeId#fromFilePath} */\n  describe('#fromFilePath', function() {\n    it('should return a NodeId', function() {\n      expect(NodeId.fromFilePath(path), 'to be a', NodeId);\n    });\n\n    it('should return file path again', function() {\n      const nodeId = NodeId.fromFilePath(path);\n      expect(nodeId.filePath, 'to be a', 'string');\n      expect(nodeId.filePath, 'to equal', path);\n    });\n\n    it('should work with resource paths', function() {\n      expect(NodeId.fromFilePath(\n        'SYSTEM/LIBRARY/ATVISE/RESOURCES/timer/imgs_glossy/top-separator.gif'\n      ).value,\n        'to equal', 'SYSTEM.LIBRARY.ATVISE.RESOURCES/timer/imgs_glossy/top-separator.gif');\n    });\n  });\n\n  /** @test {NodeId#filePath} */\n  describe('#filePath', function() {\n    it('should return a valid file path', function() {\n      const nodeId = new NodeId(NodeId.NodeIdType.STRING, id, 1);\n\n      expect(nodeId.filePath, 'to be a', 'string');\n      expect(nodeId.filePath, 'to equal', path);\n    });\n\n    it('should handle resource paths', function() {\n      const nodeId = new NodeId(NodeId.NodeIdType.STRING, 'SYSTEM.LIBRARY.RESOURCES/dir/test.ext', 1);\n\n      expect(nodeId.filePath, 'to be a', 'string');\n      expect(nodeId.filePath, 'to equal', 'SYSTEM/LIBRARY/RESOURCES/dir/test.ext');\n    });\n  });\n\n  /** @test {NodeId#inspect} */\n  describe('#inspect', function() {\n    const opts = {\n      stylize: spy(t => t),\n    };\n\n    beforeEach(() => opts.stylize.reset());\n\n    it('should return \"namespace value\"', function() {\n      const nodeId = new NodeId(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS', 1);\n\n      expect(nodeId.inspect(0, opts), 'to match', /1 AGENT\\.DISPLAYS/);\n    });\n\n    it('should style string id as string', function() {\n      (new NodeId(NodeId.NodeIdType.STRING, 'AGENT.DISPLAYS', 1)).inspect(0, opts);\n\n      expect(opts.stylize.calledTwice, 'to be true');\n      expect(opts.stylize.lastCall.args, 'to equal', ['AGENT.DISPLAYS', 'string']);\n    });\n\n    it('should style numeric id as number', function() {\n      (new NodeId(NodeId.NodeIdType.NUMERIC, 123, 1)).inspect(0, opts);\n\n      expect(opts.stylize.calledTwice, 'to be true');\n      expect(opts.stylize.lastCall.args, 'to equal', [123, 'number']);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 338,
    "kind": "testDescribe",
    "name": "describe91",
    "testId": 91,
    "memberof": "test/src/lib/server/NodeId.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91",
    "access": null,
    "description": "NodeId",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeId}"
      }
    ],
    "testTargets": [
      "NodeId"
    ]
  },
  {
    "__docId__": 339,
    "kind": "testDescribe",
    "name": "describe92",
    "testId": 92,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92",
    "access": null,
    "description": "#constructor",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeId#constructor}"
      }
    ],
    "testTargets": [
      "NodeId#constructor"
    ]
  },
  {
    "__docId__": 340,
    "kind": "testDescribe",
    "name": "context93",
    "testId": 93,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93",
    "access": null,
    "description": "when called with value only",
    "lineNumber": 18
  },
  {
    "__docId__": 341,
    "kind": "testIt",
    "name": "it94",
    "testId": 94,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93.it94",
    "access": null,
    "description": "should work",
    "lineNumber": 19
  },
  {
    "__docId__": 342,
    "kind": "testIt",
    "name": "it95",
    "testId": 95,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93.it95",
    "access": null,
    "description": "should set namespace to 1",
    "lineNumber": 23
  },
  {
    "__docId__": 343,
    "kind": "testIt",
    "name": "it96",
    "testId": 96,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93.it96",
    "access": null,
    "description": "should set indentifierType to string if string is passed",
    "lineNumber": 27
  },
  {
    "__docId__": 344,
    "kind": "testIt",
    "name": "it97",
    "testId": 97,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context93.it97",
    "access": null,
    "description": "should set indentifierType to number if number is passed",
    "lineNumber": 31
  },
  {
    "__docId__": 345,
    "kind": "testDescribe",
    "name": "context98",
    "testId": 98,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98",
    "access": null,
    "description": "when called with a nodeid string",
    "lineNumber": 36
  },
  {
    "__docId__": 346,
    "kind": "testIt",
    "name": "it99",
    "testId": 99,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98.it99",
    "access": null,
    "description": "should work",
    "lineNumber": 37
  },
  {
    "__docId__": 347,
    "kind": "testIt",
    "name": "it100",
    "testId": 100,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98.it100",
    "access": null,
    "description": "should get namespace from string",
    "lineNumber": 41
  },
  {
    "__docId__": 348,
    "kind": "testIt",
    "name": "it101",
    "testId": 101,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context98.it101",
    "access": null,
    "description": "should get identifierType from string",
    "lineNumber": 45
  },
  {
    "__docId__": 349,
    "kind": "testDescribe",
    "name": "context102",
    "testId": 102,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context102",
    "access": null,
    "description": "when called with type, value, namespace",
    "lineNumber": 53
  },
  {
    "__docId__": 350,
    "kind": "testIt",
    "name": "it103",
    "testId": 103,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context102",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context102.it103",
    "access": null,
    "description": "should work",
    "lineNumber": 54
  },
  {
    "__docId__": 351,
    "kind": "testIt",
    "name": "it104",
    "testId": 104,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context102",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.context102.it104",
    "access": null,
    "description": "should set namespace to 1 if omitted",
    "lineNumber": 58
  },
  {
    "__docId__": 352,
    "kind": "testIt",
    "name": "it105",
    "testId": 105,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe92.it105",
    "access": null,
    "description": "should extend node-opcua's NodeId",
    "lineNumber": 64
  },
  {
    "__docId__": 353,
    "kind": "testDescribe",
    "name": "describe106",
    "testId": 106,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe106",
    "access": null,
    "description": "#fromFilePath",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeId#fromFilePath}"
      }
    ],
    "testTargets": [
      "NodeId#fromFilePath"
    ]
  },
  {
    "__docId__": 354,
    "kind": "testIt",
    "name": "it107",
    "testId": 107,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe106.it107",
    "access": null,
    "description": "should return a NodeId",
    "lineNumber": 71
  },
  {
    "__docId__": 355,
    "kind": "testIt",
    "name": "it108",
    "testId": 108,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe106.it108",
    "access": null,
    "description": "should return file path again",
    "lineNumber": 75
  },
  {
    "__docId__": 356,
    "kind": "testIt",
    "name": "it109",
    "testId": 109,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe106",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe106.it109",
    "access": null,
    "description": "should work with resource paths",
    "lineNumber": 81
  },
  {
    "__docId__": 357,
    "kind": "testDescribe",
    "name": "describe110",
    "testId": 110,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe110",
    "access": null,
    "description": "#filePath",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeId#filePath}"
      }
    ],
    "testTargets": [
      "NodeId#filePath"
    ]
  },
  {
    "__docId__": 358,
    "kind": "testIt",
    "name": "it111",
    "testId": 111,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe110",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe110.it111",
    "access": null,
    "description": "should return a valid file path",
    "lineNumber": 91
  },
  {
    "__docId__": 359,
    "kind": "testIt",
    "name": "it112",
    "testId": 112,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe110",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe110.it112",
    "access": null,
    "description": "should handle resource paths",
    "lineNumber": 98
  },
  {
    "__docId__": 360,
    "kind": "testDescribe",
    "name": "describe113",
    "testId": 113,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe113",
    "access": null,
    "description": "#inspect",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeId#inspect}"
      }
    ],
    "testTargets": [
      "NodeId#inspect"
    ]
  },
  {
    "__docId__": 361,
    "kind": "testIt",
    "name": "it114",
    "testId": 114,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe113.it114",
    "access": null,
    "description": "should return \"namespace value\"",
    "lineNumber": 114
  },
  {
    "__docId__": 362,
    "kind": "testIt",
    "name": "it115",
    "testId": 115,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe113.it115",
    "access": null,
    "description": "should style string id as string",
    "lineNumber": 120
  },
  {
    "__docId__": 363,
    "kind": "testIt",
    "name": "it116",
    "testId": 116,
    "memberof": "test/src/lib/server/NodeId.spec.js~describe91.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeId.spec.js~describe91.describe113.it116",
    "access": null,
    "description": "should style numeric id as number",
    "lineNumber": 127
  },
  {
    "__docId__": 364,
    "kind": "testFile",
    "name": "test/src/lib/server/NodeStream.spec.js",
    "content": "import expect from '../../../expect';\nimport { stub, spy } from 'sinon';\n\nimport { ClientSession, resolveNodeId, browse_service as BrowseService } from 'node-opcua';\nimport NodeStream from '../../../../src/lib/server/NodeStream';\nimport Stream from '../../../../src/lib/server/Stream';\nimport NodeId from '../../../../src/lib/server/NodeId';\n\n/** @test {NodeStream} */\ndescribe('NodeStream', function() {\n  this.timeout(5000);\n  const testNodes = [new NodeId('ns=1;s=AGENT.DISPLAYS')];\n\n  /** @test {NodeStream#constructor} */\n  describe('#constructor', function() {\n    let stream;\n    afterEach(() => {\n      if (stream) {\n        // stream.end();\n      }\n    });\n\n    it('should fail without nodes', function() {\n      expect(() => (stream = new NodeStream()), 'to throw', 'nodes is required');\n    });\n\n    it('should return a server Stream', function() {\n      expect((stream = new NodeStream(testNodes)), 'to be a', Stream);\n    });\n\n    it('should store \"read\" option', function() {\n      expect((stream = new NodeStream(testNodes, { read: true })).readNodes, 'to be true');\n    });\n\n    it('should set \"recursive\" to true by default', function() {\n      expect((stream = new NodeStream(testNodes)).recursive, 'to be true');\n    });\n\n    it('should handle \"recursive\" option', function() {\n      expect((stream = new NodeStream(testNodes, { recursive: false })).recursive, 'to be false');\n    });\n\n    it('should throw if options.ignoreNodes is not an array', function() {\n      expect(() => (stream = new NodeStream(testNodes, { ignoreNodes: 'asdf' })), 'to throw',\n        'ignoreNodes must be an array of node ids');\n    });\n\n    it('should handle \"ignoreNodes\" option', function() {\n      expect((stream = new NodeStream(testNodes, { ignoreNodes: [new NodeId('TESTNODE')] }))\n        .ignoredRegExp, 'to equal', new RegExp('^(ns=1;s=TESTNODE)'));\n    });\n  });\n\n  /** @test {NodeStream#browseNodes} */\n  describe('#browseNodes', function() {\n    it('should be called for the specified nodes', function(done) {\n      const stream = new NodeStream(testNodes);\n      stub(stream, 'browseNodes', () => Promise.resolve(true));\n\n      stream.on('data', () => {}) // unpause readable stream\n        .on('end', () => {\n          expect(stream.browseNodes.calledOnce, 'to be', true);\n          expect(stream.browseNodes.lastCall.args, 'to equal', [testNodes]);\n\n          done();\n        });\n    });\n\n    context('when browsing fails', function() {\n      before(() => {\n        stub(ClientSession.prototype, 'browse', (node, cb) => {\n          cb(new Error('Browse error'));\n        });\n      });\n\n      after(() => ClientSession.prototype.browse.restore());\n\n      it('should forward errors', function(done) {\n        const stream = new NodeStream(testNodes);\n        stream.once('session-open', () => {\n          stream.session.close(() => {});\n        });\n\n        stream.on('data', () => {}) // unpause readable stream\n          .on('error', err => {\n            expect(err, 'to have message', /Browse error/);\n\n            done();\n          });\n      });\n    });\n\n    context('when browsing returns empty results', function() {\n      before(() => {\n        stub(ClientSession.prototype, 'browse', (node, cb) => {\n          cb(null, []);\n        });\n      });\n\n      after(() => ClientSession.prototype.browse.restore());\n\n      it('should emit error', function(done) {\n        const stream = new NodeStream(testNodes);\n        stream.once('session-open', () => {\n          stream.session.close(() => {});\n        });\n\n        stream.on('data', () => {}) // unpause readable stream\n          .on('error', err => {\n            expect(err, 'to have message', /No results/);\n\n            done();\n          });\n      });\n    });\n\n    context('when browsing returns status codes > 0', function() {\n      before(() => {\n        stub(ClientSession.prototype, 'browse', (node, cb) => {\n          cb(null, [{ statusCode: 13 }]);\n        });\n      });\n\n      after(() => ClientSession.prototype.browse.restore());\n\n      it('should emit error', function(done) {\n        const stream = new NodeStream(testNodes);\n\n        stream.on('data', () => {}) // unpause readable stream\n          .on('error', err => {\n            expect(err, 'to have message', /failed: Code 13/);\n\n            done();\n          });\n      });\n    });\n\n    context('when browsing works', function() {\n      const nodeId = resolveNodeId('ns=1;s=AGENT.DISPLAYS.Main');\n      let firstCall = true;\n\n      before(() => {\n        stub(ClientSession.prototype, 'browse', (node, cb) => {\n          if (firstCall) {\n            cb(null, [{\n              references: [{ nodeClass: { value: 2 }, nodeId }],\n            }]);\n            firstCall = false;\n          } else {\n            cb(null, [{ references: [] }]);\n          }\n        });\n      });\n\n      after(() => ClientSession.prototype.browse.restore());\n\n      beforeEach(() => (firstCall = true));\n\n      it('should push browsed variable nodes', function(done) {\n        const stream = new NodeStream(testNodes);\n\n        stream.on('data', desc => {\n          expect(desc.nodeId, 'to equal', nodeId);\n        })\n          .on('end', () => done());\n      });\n\n      it('should be called only once when recursive is set to false', function(done) {\n        const stream = new NodeStream(testNodes, { recursive: false });\n        spy(stream, 'browseNode');\n\n        stream\n          .on('data', () => {}) // unpause readable stream\n          .on('end', () => {\n            expect(stream.browseNode, 'was called times', 1);\n            expect(stream.browseNode, 'was called with', testNodes[0]);\n\n            done();\n          });\n      });\n\n      it('should be called for all browsed nodes if recursive is set', function(done) {\n        const stream = new NodeStream(testNodes, { recursive: true });\n        spy(stream, 'browseNode');\n        const nodes = [];\n\n        stream\n          .on('data', desc => nodes.push(desc.nodeId)) // unpause readable stream\n          .on('end', () => {\n            expect(stream.browseNode.callCount, 'to be greater than', 1);\n            expect(stream.browseNode, 'to have calls satisfying',\n              testNodes.concat(nodes).map(n => ({ args: [n] }))\n            );\n\n            done();\n          });\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "testDescribe",
    "name": "describe117",
    "testId": 117,
    "memberof": "test/src/lib/server/NodeStream.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117",
    "access": null,
    "description": "NodeStream",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeStream}"
      }
    ],
    "testTargets": [
      "NodeStream"
    ]
  },
  {
    "__docId__": 366,
    "kind": "testDescribe",
    "name": "describe118",
    "testId": 118,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "access": null,
    "description": "#constructor",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeStream#constructor}"
      }
    ],
    "testTargets": [
      "NodeStream#constructor"
    ]
  },
  {
    "__docId__": 367,
    "kind": "testIt",
    "name": "it119",
    "testId": 119,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it119",
    "access": null,
    "description": "should fail without nodes",
    "lineNumber": 23
  },
  {
    "__docId__": 368,
    "kind": "testIt",
    "name": "it120",
    "testId": 120,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it120",
    "access": null,
    "description": "should return a server Stream",
    "lineNumber": 27
  },
  {
    "__docId__": 369,
    "kind": "testIt",
    "name": "it121",
    "testId": 121,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it121",
    "access": null,
    "description": "should store \"read\" option",
    "lineNumber": 31
  },
  {
    "__docId__": 370,
    "kind": "testIt",
    "name": "it122",
    "testId": 122,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it122",
    "access": null,
    "description": "should set \"recursive\" to true by default",
    "lineNumber": 35
  },
  {
    "__docId__": 371,
    "kind": "testIt",
    "name": "it123",
    "testId": 123,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it123",
    "access": null,
    "description": "should handle \"recursive\" option",
    "lineNumber": 39
  },
  {
    "__docId__": 372,
    "kind": "testIt",
    "name": "it124",
    "testId": 124,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it124",
    "access": null,
    "description": "should throw if options.ignoreNodes is not an array",
    "lineNumber": 43
  },
  {
    "__docId__": 373,
    "kind": "testIt",
    "name": "it125",
    "testId": 125,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe118.it125",
    "access": null,
    "description": "should handle \"ignoreNodes\" option",
    "lineNumber": 48
  },
  {
    "__docId__": 374,
    "kind": "testDescribe",
    "name": "describe126",
    "testId": 126,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "access": null,
    "description": "#browseNodes",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{NodeStream#browseNodes}"
      }
    ],
    "testTargets": [
      "NodeStream#browseNodes"
    ]
  },
  {
    "__docId__": 375,
    "kind": "testIt",
    "name": "it127",
    "testId": 127,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.it127",
    "access": null,
    "description": "should be called for the specified nodes",
    "lineNumber": 56
  },
  {
    "__docId__": 376,
    "kind": "testDescribe",
    "name": "context128",
    "testId": 128,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context128",
    "access": null,
    "description": "when browsing fails",
    "lineNumber": 69
  },
  {
    "__docId__": 377,
    "kind": "testIt",
    "name": "it129",
    "testId": 129,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context128",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context128.it129",
    "access": null,
    "description": "should forward errors",
    "lineNumber": 78
  },
  {
    "__docId__": 378,
    "kind": "testDescribe",
    "name": "context130",
    "testId": 130,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context130",
    "access": null,
    "description": "when browsing returns empty results",
    "lineNumber": 93
  },
  {
    "__docId__": 379,
    "kind": "testIt",
    "name": "it131",
    "testId": 131,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context130",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context130.it131",
    "access": null,
    "description": "should emit error",
    "lineNumber": 102
  },
  {
    "__docId__": 380,
    "kind": "testDescribe",
    "name": "context132",
    "testId": 132,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context132",
    "access": null,
    "description": "when browsing returns status codes > 0",
    "lineNumber": 117
  },
  {
    "__docId__": 381,
    "kind": "testIt",
    "name": "it133",
    "testId": 133,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context132",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context132.it133",
    "access": null,
    "description": "should emit error",
    "lineNumber": 126
  },
  {
    "__docId__": 382,
    "kind": "testDescribe",
    "name": "context134",
    "testId": 134,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134",
    "access": null,
    "description": "when browsing works",
    "lineNumber": 138
  },
  {
    "__docId__": 383,
    "kind": "testIt",
    "name": "it135",
    "testId": 135,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134.it135",
    "access": null,
    "description": "should push browsed variable nodes",
    "lineNumber": 159
  },
  {
    "__docId__": 384,
    "kind": "testIt",
    "name": "it136",
    "testId": 136,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134.it136",
    "access": null,
    "description": "should be called only once when recursive is set to false",
    "lineNumber": 168
  },
  {
    "__docId__": 385,
    "kind": "testIt",
    "name": "it137",
    "testId": 137,
    "memberof": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/server/NodeStream.spec.js~describe117.describe126.context134.it137",
    "access": null,
    "description": "should be called for all browsed nodes if recursive is set",
    "lineNumber": 182
  },
  {
    "__docId__": 386,
    "kind": "testFile",
    "name": "test/src/lib/server/ReadStream.spec.js",
    "content": "import { spy, stub } from 'sinon';\nimport expect from '../../../expect';\n\nimport NodeId from '../../../../src/lib/server/NodeId';\nimport ReadStream from '../../../../src/lib/server/ReadStream';\n\n/** @test {ReadStream} */\ndescribe('ReadStream', function() {\n  const validNodeId = new NodeId('ns=0;i=2262'); // ProductUri\n\n  /** @test {ReadStream#readNode} */\n  describe('#readNode', function() {\n    it('should fail if an error occurs', function() {\n      const stream = new ReadStream();\n\n      stream.once('session-open', () => {\n        stream.session.read = (node, cb) => cb(new Error('Failed'));\n      });\n\n      return expect([{ nodeId: validNodeId }], 'when piped through', stream,\n        'to error with', `Reading ${validNodeId.toString()} failed: Failed`);\n    });\n\n    it('should with no or empty results', function() {\n      const stream = new ReadStream();\n\n      stream.once('session-open', () => {\n        stream.session.read = (node, cb) => cb(null, []);\n      });\n\n      return expect([{ nodeId: validNodeId }], 'when piped through', stream,\n        'to error with', `Reading ${validNodeId.toString()} failed: No results`);\n    });\n\n    it('should fail with non-good status code', function() {\n      const stream = new ReadStream();\n      const nodeId = new NodeId('ns=123;i=2262'); // This node does not exist\n\n      return expect([{ nodeId }], 'when piped through', stream,\n        'to error with', /Reading ns=123;i=2262 failed: Status BadNodeIdUnknown/);\n    });\n\n    it('should read variables', function() {\n      const stream = new ReadStream();\n\n      return expect([{ nodeId: validNodeId }], 'when piped through', stream, 'to yield objects satisfying', [{\n        nodeId: validNodeId,\n        value: { value: 'http://www.atvise.com' },\n      }]);\n    });\n  });\n\n  /** @test {ReadStream#_transform} */\n  describe('#_transform', function() {\n    it('should wait for session to open', function(done) {\n      const stream = new ReadStream();\n      stub(stream, 'readNode', (node, cb) => cb(null));\n      spy(stream, '_transform');\n\n      stream.on('data', () => {}); // Unpause readable stream\n      stream.write(new NodeId('ns=1;s=AGENT.DISPLAYS'));\n\n      expect(stream._transform.calledOnce, 'to be', true);\n      expect(stream.readNode.callCount, 'to equal', 0);\n\n      stream.once('end', () => {\n        expect(stream._transform.calledOnce, 'to be', true);\n        expect(stream.readNode.calledOnce, 'to be', true);\n        done();\n      });\n      stream.end();\n    });\n\n    it('should read immediate if session is open', function(done) {\n      const stream = new ReadStream();\n      stub(stream, 'readNode', (node, cb) => cb(null));\n\n      stream.on('data', () => {}); // Unpause readable stream\n\n      stream.once('session-open', () => {\n        stream.write(new NodeId('ns=1;s=AGENT.DISPLAYS'));\n        expect(stream.readNode.calledOnce, 'to be true');\n        stream.end();\n      });\n\n      stream.on('end', done);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "testDescribe",
    "name": "describe138",
    "testId": 138,
    "memberof": "test/src/lib/server/ReadStream.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138",
    "access": null,
    "description": "ReadStream",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ReadStream}"
      }
    ],
    "testTargets": [
      "ReadStream"
    ]
  },
  {
    "__docId__": 388,
    "kind": "testDescribe",
    "name": "describe139",
    "testId": 139,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe139",
    "access": null,
    "description": "#readNode",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ReadStream#readNode}"
      }
    ],
    "testTargets": [
      "ReadStream#readNode"
    ]
  },
  {
    "__docId__": 389,
    "kind": "testIt",
    "name": "it140",
    "testId": 140,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe139",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe139.it140",
    "access": null,
    "description": "should fail if an error occurs",
    "lineNumber": 13
  },
  {
    "__docId__": 390,
    "kind": "testIt",
    "name": "it141",
    "testId": 141,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe139",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe139.it141",
    "access": null,
    "description": "should with no or empty results",
    "lineNumber": 24
  },
  {
    "__docId__": 391,
    "kind": "testIt",
    "name": "it142",
    "testId": 142,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe139",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe139.it142",
    "access": null,
    "description": "should fail with non-good status code",
    "lineNumber": 35
  },
  {
    "__docId__": 392,
    "kind": "testIt",
    "name": "it143",
    "testId": 143,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe139",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe139.it143",
    "access": null,
    "description": "should read variables",
    "lineNumber": 43
  },
  {
    "__docId__": 393,
    "kind": "testDescribe",
    "name": "describe144",
    "testId": 144,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe144",
    "access": null,
    "description": "#_transform",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ReadStream#_transform}"
      }
    ],
    "testTargets": [
      "ReadStream#_transform"
    ]
  },
  {
    "__docId__": 394,
    "kind": "testIt",
    "name": "it145",
    "testId": 145,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe144",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe144.it145",
    "access": null,
    "description": "should wait for session to open",
    "lineNumber": 55
  },
  {
    "__docId__": 395,
    "kind": "testIt",
    "name": "it146",
    "testId": 146,
    "memberof": "test/src/lib/server/ReadStream.spec.js~describe138.describe144",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/ReadStream.spec.js~describe138.describe144.it146",
    "access": null,
    "description": "should read immediate if session is open",
    "lineNumber": 74
  },
  {
    "__docId__": 396,
    "kind": "testFile",
    "name": "test/src/lib/server/Session.spec.js",
    "content": "import expect from 'unexpected';\nimport proxyquire from 'proxyquire';\n\nimport { ClientSession } from 'node-opcua';\nimport Session from '../../../../src/lib/server/Session';\nimport TestConfig from '../../../fixtures/Atviseproject.babel';\n\nfunction sessionWithLogin(login) {\n  return proxyquire('../../../../src/lib/server/Session', {\n    '../../config/ProjectConfig': {\n      _esModule: true,\n      default: { login },\n    },\n  }).default;\n}\n\nfunction itSkipForLocalTests(...args) {\n  return process.env.TEST_LOCAL ? it.skip(...args) : it(...args);\n}\n\n/** @test {Session} */\ndescribe('Session', function() {\n  this.timeout(5000);\n\n  /** @test {Session.create} */\n  describe('.create', function() {\n    it('should create a new ClientSession', function() {\n      return expect(Session.create(), 'when fulfilled', 'to be a', ClientSession);\n    });\n\n    itSkipForLocalTests('should fail with invalid credentials', function() {\n      return Promise.all([\n        // Missing username\n        expect(sessionWithLogin({\n          username: false,\n          password: TestConfig.login.password,\n        }).create(), 'to be rejected with', /Invalid login/),\n\n        // Missing password\n        expect(sessionWithLogin({\n          username: TestConfig.login.username,\n          password: false,\n        }).create(), 'to be rejected with', /Invalid login/),\n\n        // Invalid username\n        expect(sessionWithLogin({\n          username: TestConfig.login.password,\n          password: TestConfig.login.password,\n        }).create(), 'to be rejected with', /Invalid login/),\n      ]);\n    });\n  });\n\n  /** @test {Session.close} */\n  describe('.close', function() {\n    it('should fail without session', function() {\n      return expect(() => Session.close(), 'to be rejected with', 'session is required');\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "testDescribe",
    "name": "describe147",
    "testId": 147,
    "memberof": "test/src/lib/server/Session.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js~describe147",
    "access": null,
    "description": "Session",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Session}"
      }
    ],
    "testTargets": [
      "Session"
    ]
  },
  {
    "__docId__": 398,
    "kind": "testDescribe",
    "name": "describe148",
    "testId": 148,
    "memberof": "test/src/lib/server/Session.spec.js~describe147",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js~describe147.describe148",
    "access": null,
    "description": ".create",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Session.create}"
      }
    ],
    "testTargets": [
      "Session.create"
    ]
  },
  {
    "__docId__": 399,
    "kind": "testIt",
    "name": "it149",
    "testId": 149,
    "memberof": "test/src/lib/server/Session.spec.js~describe147.describe148",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js~describe147.describe148.it149",
    "access": null,
    "description": "should create a new ClientSession",
    "lineNumber": 27
  },
  {
    "__docId__": 400,
    "kind": "testDescribe",
    "name": "describe150",
    "testId": 150,
    "memberof": "test/src/lib/server/Session.spec.js~describe147",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js~describe147.describe150",
    "access": null,
    "description": ".close",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Session.close}"
      }
    ],
    "testTargets": [
      "Session.close"
    ]
  },
  {
    "__docId__": 401,
    "kind": "testIt",
    "name": "it151",
    "testId": 151,
    "memberof": "test/src/lib/server/Session.spec.js~describe147.describe150",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Session.spec.js~describe147.describe150.it151",
    "access": null,
    "description": "should fail without session",
    "lineNumber": 56
  },
  {
    "__docId__": 402,
    "kind": "testFile",
    "name": "test/src/lib/server/Stream.spec.js",
    "content": "import expect from 'unexpected';\nimport proxyquire from 'proxyquire';\nimport { spy } from 'sinon';\n\nimport { Stream as CoreStream } from 'stream';\nimport { ClientSession } from 'node-opcua';\nimport Stream from '../../../../src/lib/server/Stream';\nimport Session from '../../../../src/lib/server/Session';\n\n/** @test {Stream} */\ndescribe('Stream', function() {\n  this.timeout(5000);\n\n  /** @test {Stream#constructor} */\n  describe('#constructor', function() {\n    it('should return a stream', function() {\n      expect(new Stream(), 'to be a', CoreStream);\n    });\n\n    it('should emit \"session-open\" once session is open', function(done) {\n      const stream = new Stream();\n\n      stream.on('session-open', session => {\n        expect(stream.session, 'to be defined');\n        expect(stream.session, 'to be a', ClientSession);\n        expect(session, 'to be', stream.session);\n\n        done();\n      });\n    });\n\n    it('should forward session connect errors', function(done) {\n      const FailingStream = proxyquire('../../../../src/lib/server/Stream', {\n        './Session': {\n          _esModule: true,\n          default: class FailingSession {\n            static create() {\n              return Promise.reject(new Error('Failed'));\n            }\n          },\n        },\n      }).default;\n\n      (new FailingStream())\n        .on('error', err => {\n          expect(err, 'to have message', 'Failed');\n          done();\n        });\n    });\n\n    it('should close session and disconnect client on end', function(done) {\n      const stream = new Stream();\n\n      stream\n        .once('session-open', () => {\n          spy(stream.session, 'close');\n          spy(stream.session._client, 'disconnect');\n\n          stream.end();\n        })\n        .on('end', () => {\n          expect(stream.session.close.calledOnce, 'to be', true);\n          expect(stream.session._client.disconnect.calledOnce, 'to be', true);\n          done();\n        })\n        .on('data', () => {}); // unpause readable stream\n    });\n\n    it('should be endable even if session was not opened yet', function(done) {\n      const stream = new Stream();\n      const listener = spy();\n\n      stream.on('error', listener)\n        .on('end', () => {\n          expect(listener.callCount, 'to equal', 0);\n          done();\n        })\n        .on('data', () => {}); // unpause readable stream\n\n      stream.end();\n    });\n\n    it('should forward errors occurring while closing session', function(done) {\n      const FailingStream = proxyquire('../../../../src/lib/server/Stream', {\n        './Session': {\n          _esModule: true,\n          default: class FailingStream extends Session {\n\n            static close() {\n              return Promise.reject(new Error('Failed'));\n            }\n\n          },\n        },\n      }).default;\n\n      const stream = (new FailingStream())\n        .on('error', err => {\n          expect(err, 'to have message', 'Failed');\n          done();\n        })\n        .on('data', () => {}) // unpause readable stream\n        .once('session-open', () => stream.end());\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 403,
    "kind": "testDescribe",
    "name": "describe152",
    "testId": 152,
    "memberof": "test/src/lib/server/Stream.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152",
    "access": null,
    "description": "Stream",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Stream}"
      }
    ],
    "testTargets": [
      "Stream"
    ]
  },
  {
    "__docId__": 404,
    "kind": "testDescribe",
    "name": "describe153",
    "testId": 153,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "access": null,
    "description": "#constructor",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Stream#constructor}"
      }
    ],
    "testTargets": [
      "Stream#constructor"
    ]
  },
  {
    "__docId__": 405,
    "kind": "testIt",
    "name": "it154",
    "testId": 154,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it154",
    "access": null,
    "description": "should return a stream",
    "lineNumber": 16
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "name": "it155",
    "testId": 155,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it155",
    "access": null,
    "description": "should emit \"session-open\" once session is open",
    "lineNumber": 20
  },
  {
    "__docId__": 407,
    "kind": "testIt",
    "name": "it156",
    "testId": 156,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it156",
    "access": null,
    "description": "should forward session connect errors",
    "lineNumber": 32
  },
  {
    "__docId__": 408,
    "kind": "testIt",
    "name": "it157",
    "testId": 157,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it157",
    "access": null,
    "description": "should close session and disconnect client on end",
    "lineNumber": 51
  },
  {
    "__docId__": 409,
    "kind": "testIt",
    "name": "it158",
    "testId": 158,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it158",
    "access": null,
    "description": "should be endable even if session was not opened yet",
    "lineNumber": 69
  },
  {
    "__docId__": 410,
    "kind": "testIt",
    "name": "it159",
    "testId": 159,
    "memberof": "test/src/lib/server/Stream.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/Stream.spec.js~describe152.describe153.it159",
    "access": null,
    "description": "should forward errors occurring while closing session",
    "lineNumber": 83
  },
  {
    "__docId__": 411,
    "kind": "testFile",
    "name": "test/src/lib/server/WriteStream.spec.js",
    "content": "import expect from 'unexpected';\nimport { stub, spy } from 'sinon';\n\nimport { Buffer } from 'buffer';\nimport { NodeId, DataType, VariantArrayType } from 'node-opcua';\nimport WriteStream from '../../../../src/lib/server/WriteStream';\nimport AtviseFile from '../../../../src/lib/server/AtviseFile';\n\n/** @test {WriteStream} */\ndescribe('WriteStream', function() {\n  /** @test {WriteStream#writeFile} */\n  describe('#writeFile', function() {\n    it('should call node-opcua~ClientSession#writeSingleNode', function(done) {\n      const stream = new WriteStream();\n      stream.once('session-open', () => {\n        stub(stream.session, 'writeSingleNode', (node, value, cb) => cb(null, node));\n      });\n\n      stream.on('data', () => {}); // Unpause readable stream\n      stream.write(new AtviseFile({ path: 'AGENT/DISPLAYS/Main.display' }));\n\n      stream.once('end', () => {\n        const writeStub = stream.session.writeSingleNode;\n        expect(writeStub.calledOnce, 'to be', true);\n\n        const args = writeStub.lastCall.args;\n        expect(args[0], 'to equal', 'ns=1;s=AGENT.DISPLAYS.Main');\n        expect(args[1].dataType, 'to equal', DataType.XmlElement);\n        expect(args[1].arrayType, 'to equal', VariantArrayType.Scalar);\n\n        done();\n      });\n\n      stream.end();\n    });\n  });\n\n  /** @test {WriteStream#_transform} */\n  describe('#_transform', function() {\n    it('should wait for session to open', function(done) {\n      const stream = new WriteStream();\n      stub(stream, 'writeFile', (file, cb) => cb(null));\n      spy(stream, '_transform');\n\n      stream.on('data', () => {}); // Unpause readable stream\n      stream.write(new AtviseFile({ path: 'AGENT/DISPLAYS/Main.display' }));\n\n      expect(stream._transform.calledOnce, 'to be', true);\n      expect(stream.writeFile.callCount, 'to equal', 0);\n\n      stream.once('end', () => {\n        expect(stream._transform.calledOnce, 'to be', true);\n        expect(stream.writeFile.calledOnce, 'to be', true);\n        done();\n      });\n\n      stream.end();\n    });\n\n    it('should write immediately if session is open', function(done) {\n      const stream = new WriteStream();\n      stub(stream, 'writeFile', (file, cb) => cb(null));\n\n      stream.on('data', () => {}); // Unpause readable stream\n\n      stream.once('session-open', () => {\n        stream.write(new AtviseFile({ path: 'AGENT/DISPLAYS/Main.display' }));\n        expect(stream.writeFile.calledOnce, 'to be true');\n        stream.end();\n      });\n\n      stream.on('end', done);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "testDescribe",
    "name": "describe160",
    "testId": 160,
    "memberof": "test/src/lib/server/WriteStream.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160",
    "access": null,
    "description": "WriteStream",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{WriteStream}"
      }
    ],
    "testTargets": [
      "WriteStream"
    ]
  },
  {
    "__docId__": 413,
    "kind": "testDescribe",
    "name": "describe161",
    "testId": 161,
    "memberof": "test/src/lib/server/WriteStream.spec.js~describe160",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160.describe161",
    "access": null,
    "description": "#writeFile",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{WriteStream#writeFile}"
      }
    ],
    "testTargets": [
      "WriteStream#writeFile"
    ]
  },
  {
    "__docId__": 414,
    "kind": "testIt",
    "name": "it162",
    "testId": 162,
    "memberof": "test/src/lib/server/WriteStream.spec.js~describe160.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160.describe161.it162",
    "access": null,
    "description": "should call node-opcua~ClientSession#writeSingleNode",
    "lineNumber": 13
  },
  {
    "__docId__": 415,
    "kind": "testDescribe",
    "name": "describe163",
    "testId": 163,
    "memberof": "test/src/lib/server/WriteStream.spec.js~describe160",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160.describe163",
    "access": null,
    "description": "#_transform",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{WriteStream#_transform}"
      }
    ],
    "testTargets": [
      "WriteStream#_transform"
    ]
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "name": "it164",
    "testId": 164,
    "memberof": "test/src/lib/server/WriteStream.spec.js~describe160.describe163",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160.describe163.it164",
    "access": null,
    "description": "should wait for session to open",
    "lineNumber": 40
  },
  {
    "__docId__": 417,
    "kind": "testIt",
    "name": "it165",
    "testId": 165,
    "memberof": "test/src/lib/server/WriteStream.spec.js~describe160.describe163",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/server/WriteStream.spec.js~describe160.describe163.it165",
    "access": null,
    "description": "should write immediately if session is open",
    "lineNumber": 60
  },
  {
    "__docId__": 418,
    "kind": "testFile",
    "name": "test/src/lib/transform/Transformer.spec.js",
    "content": "import { Stream } from 'stream';\nimport { stub } from 'sinon';\nimport expect from '../../../expect';\n\nimport Transformer, { TransformDirection } from '../../../../src/lib/transform/Transformer';\n\n/** @test {Transformer} */\ndescribe('Transformer', function() {\n  /** @test {Transformer#constructor} */\n  describe('#constructor', function() {\n    it('should throw with invalid direction', function() {\n      expect(() => (new Transformer({ direction: 'asdf' })),\n        'to throw', 'Invalid direction');\n    });\n\n    it('should store direction', function() {\n      expect((new Transformer({ direction: TransformDirection.FromDB })).direction,\n        'to equal', TransformDirection.FromDB);\n    });\n  });\n\n  /** @test {Transformer#withDirection} */\n  describe('#withDirection', function() {\n    let transformer;\n\n    beforeEach(() => (transformer = new Transformer()));\n\n    it('should throw without direction', function() {\n      expect(() => transformer.withDirection(), 'to throw', 'Invalid direction');\n    });\n\n    it('should throw with invalid direction', function() {\n      expect(() => transformer.withDirection('asdf'), 'to throw', 'Invalid direction');\n    });\n\n    it('should return self with direction set', function() {\n      const directed = transformer.withDirection(TransformDirection.FromDB);\n\n      expect(directed, 'to be a', Transformer);\n      expect(directed.direction, 'to equal', TransformDirection.FromDB);\n    });\n  });\n\n  /** @test {Transformer#_transform} */\n  describe('#_transform', function() {\n    let transformer;\n\n    beforeEach(() => {\n      transformer = new Transformer();\n      stub(transformer, 'transformFromDB', (c, e, cb) => cb(null));\n      stub(transformer, 'transformFromFilesystem', (c, e, cb) => cb(null));\n    });\n\n    it('should fail without direction', function() {\n      return expect(cb => transformer._transform({}, 'utf8', cb),\n        'to call the callback with error', 'Transformer has no direction');\n    });\n\n    it('should call transformFromDB with direction FromDB', function() {\n      transformer.withDirection(TransformDirection.FromDB)._transform({}, 'utf8', () => {});\n\n      return expect(transformer.transformFromDB, 'was called');\n    });\n\n    it('should call transformFromFilesystem with direction FromFilesystem', function() {\n      transformer.withDirection(TransformDirection.FromFilesystem)._transform({}, 'utf8', () => {});\n\n      return expect(transformer.transformFromFilesystem, 'was called');\n    });\n  });\n\n  /** @test {Transformer#transformFromDB} */\n  describe('#transformFromDB', function() {\n    const transformer = new Transformer();\n\n    it('should fail if not overridden', function() {\n      return expect(cb => transformer.transformFromDB({}, 'utf8', cb),\n        'to call the callback with error', /must be overridden/);\n    });\n  });\n\n  /** @test {Transformer#transformFromFilesystem} */\n  describe('#transformFromFilesytem', function() {\n    const transformer = new Transformer();\n\n    it('should fail if not overridden', function() {\n      return expect(cb => transformer.transformFromFilesystem({}, 'utf8', cb),\n        'to call the callback with error', /must be overridden/);\n    });\n  });\n  \n  /** @test {Transformer.applyTransformers} */\n  describe('.applyTransformers', function() {\n    it('should throw on invalid direction', function() {\n      expect(() => Transformer.applyTransformers([], 'asdf'), 'to throw error', 'Direction is invalid');\n    });\n\n    it('should return directed transformer if only one is passed', function() {\n      const firstTransformer = new Transformer();\n      const result = Transformer.applyTransformers([firstTransformer], TransformDirection.FromDB);\n\n      expect(result, 'to be', firstTransformer);\n      expect(firstTransformer.direction, 'to equal', TransformDirection.FromDB);\n    });\n\n    it('should return last transformer piped to previous', function() {\n      const firstTransformer = new Transformer();\n      const lastTransformer = new Transformer();\n      const result = Transformer.applyTransformers([\n        firstTransformer,\n        lastTransformer,\n      ], TransformDirection.FromDB);\n\n      expect(result, 'to be', lastTransformer);\n      expect(firstTransformer.direction, 'to equal', TransformDirection.FromDB);\n      expect(lastTransformer.direction, 'to equal', TransformDirection.FromDB);\n    });\n\n    it('should reverse transformers if called with \"FromFilesystem\"', function() {\n      const firstTransformer = new Transformer();\n      const lastTransformer = new Transformer();\n      const result = Transformer.applyTransformers([\n        firstTransformer,\n        lastTransformer,\n      ], TransformDirection.FromFilesystem);\n\n      expect(result, 'to be', firstTransformer);\n      expect(firstTransformer.direction, 'to equal', TransformDirection.FromFilesystem);\n      expect(lastTransformer.direction, 'to equal', TransformDirection.FromFilesystem);\n    });\n\n    it('should work with empty array as argument', function() {\n      expect(Transformer.applyTransformers([], TransformDirection.FromDB), 'to be a', Stream);\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 419,
    "kind": "testDescribe",
    "name": "describe166",
    "testId": 166,
    "memberof": "test/src/lib/transform/Transformer.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166",
    "access": null,
    "description": "Transformer",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer}"
      }
    ],
    "testTargets": [
      "Transformer"
    ]
  },
  {
    "__docId__": 420,
    "kind": "testDescribe",
    "name": "describe167",
    "testId": 167,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe167",
    "access": null,
    "description": "#constructor",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer#constructor}"
      }
    ],
    "testTargets": [
      "Transformer#constructor"
    ]
  },
  {
    "__docId__": 421,
    "kind": "testIt",
    "name": "it168",
    "testId": 168,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe167",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe167.it168",
    "access": null,
    "description": "should throw with invalid direction",
    "lineNumber": 11
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "name": "it169",
    "testId": 169,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe167",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe167.it169",
    "access": null,
    "description": "should store direction",
    "lineNumber": 16
  },
  {
    "__docId__": 423,
    "kind": "testDescribe",
    "name": "describe170",
    "testId": 170,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe170",
    "access": null,
    "description": "#withDirection",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer#withDirection}"
      }
    ],
    "testTargets": [
      "Transformer#withDirection"
    ]
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "name": "it171",
    "testId": 171,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe170",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe170.it171",
    "access": null,
    "description": "should throw without direction",
    "lineNumber": 28
  },
  {
    "__docId__": 425,
    "kind": "testIt",
    "name": "it172",
    "testId": 172,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe170",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe170.it172",
    "access": null,
    "description": "should throw with invalid direction",
    "lineNumber": 32
  },
  {
    "__docId__": 426,
    "kind": "testIt",
    "name": "it173",
    "testId": 173,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe170",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe170.it173",
    "access": null,
    "description": "should return self with direction set",
    "lineNumber": 36
  },
  {
    "__docId__": 427,
    "kind": "testDescribe",
    "name": "describe174",
    "testId": 174,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe174",
    "access": null,
    "description": "#_transform",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer#_transform}"
      }
    ],
    "testTargets": [
      "Transformer#_transform"
    ]
  },
  {
    "__docId__": 428,
    "kind": "testIt",
    "name": "it175",
    "testId": 175,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe174",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe174.it175",
    "access": null,
    "description": "should fail without direction",
    "lineNumber": 54
  },
  {
    "__docId__": 429,
    "kind": "testIt",
    "name": "it176",
    "testId": 176,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe174",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe174.it176",
    "access": null,
    "description": "should call transformFromDB with direction FromDB",
    "lineNumber": 59
  },
  {
    "__docId__": 430,
    "kind": "testIt",
    "name": "it177",
    "testId": 177,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe174",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe174.it177",
    "access": null,
    "description": "should call transformFromFilesystem with direction FromFilesystem",
    "lineNumber": 65
  },
  {
    "__docId__": 431,
    "kind": "testDescribe",
    "name": "describe178",
    "testId": 178,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe178",
    "access": null,
    "description": "#transformFromDB",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer#transformFromDB}"
      }
    ],
    "testTargets": [
      "Transformer#transformFromDB"
    ]
  },
  {
    "__docId__": 432,
    "kind": "testIt",
    "name": "it179",
    "testId": 179,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe178",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe178.it179",
    "access": null,
    "description": "should fail if not overridden",
    "lineNumber": 76
  },
  {
    "__docId__": 433,
    "kind": "testDescribe",
    "name": "describe180",
    "testId": 180,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe180",
    "access": null,
    "description": "#transformFromFilesytem",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer#transformFromFilesystem}"
      }
    ],
    "testTargets": [
      "Transformer#transformFromFilesystem"
    ]
  },
  {
    "__docId__": 434,
    "kind": "testIt",
    "name": "it181",
    "testId": 181,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe180",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe180.it181",
    "access": null,
    "description": "should fail if not overridden",
    "lineNumber": 86
  },
  {
    "__docId__": 435,
    "kind": "testDescribe",
    "name": "describe182",
    "testId": 182,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "access": null,
    "description": ".applyTransformers",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Transformer.applyTransformers}"
      }
    ],
    "testTargets": [
      "Transformer.applyTransformers"
    ]
  },
  {
    "__docId__": 436,
    "kind": "testIt",
    "name": "it183",
    "testId": 183,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182.it183",
    "access": null,
    "description": "should throw on invalid direction",
    "lineNumber": 94
  },
  {
    "__docId__": 437,
    "kind": "testIt",
    "name": "it184",
    "testId": 184,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182.it184",
    "access": null,
    "description": "should return directed transformer if only one is passed",
    "lineNumber": 98
  },
  {
    "__docId__": 438,
    "kind": "testIt",
    "name": "it185",
    "testId": 185,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182.it185",
    "access": null,
    "description": "should return last transformer piped to previous",
    "lineNumber": 106
  },
  {
    "__docId__": 439,
    "kind": "testIt",
    "name": "it186",
    "testId": 186,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182.it186",
    "access": null,
    "description": "should reverse transformers if called with \"FromFilesystem\"",
    "lineNumber": 119
  },
  {
    "__docId__": 440,
    "kind": "testIt",
    "name": "it187",
    "testId": 187,
    "memberof": "test/src/lib/transform/Transformer.spec.js~describe166.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/Transformer.spec.js~describe166.describe182.it187",
    "access": null,
    "description": "should work with empty array as argument",
    "lineNumber": 132
  },
  {
    "__docId__": 441,
    "kind": "testFile",
    "name": "test/src/lib/transform/XMLTransformer.spec.js",
    "content": "import expect from 'unexpected';\n\nimport { EOL } from 'os';\nimport { Builder } from 'xml2js';\nimport Transformer, { TransformDirection } from '../../../../src/lib/transform/Transformer';\nimport XMLTransformer from '../../../../src/lib/transform/XMLTransformer';\n\n/** @test {XMLTransformer} */\ndescribe('XMLTransformer', function() {\n  /** @test {XMLTransformer#constructor} */\n  describe('#constructor', function() {\n    it('should return a Transformer', function() {\n      expect(new XMLTransformer(), 'to be a', Transformer);\n    });\n\n    it('should create a _fromDBBuilder', function() {\n      const transformer = new XMLTransformer();\n\n      expect(transformer._fromDBBuilder, 'to be defined');\n      expect(transformer._fromDBBuilder, 'to be a', Builder);\n    });\n\n    it('should create a _fromFilesystemBuilder', function() {\n      const transformer = new XMLTransformer();\n\n      expect(transformer._fromDBBuilder, 'to be defined');\n      expect(transformer._fromDBBuilder, 'to be a', Builder);\n    });\n  });\n\n  /** @test {XMLTransformer#builder} */\n  describe('#builder', function() {\n    it('should return the #_fromDBBuilder if direction is FromDB', function() {\n      const transformer = new XMLTransformer({ direction: TransformDirection.FromDB });\n\n      expect(transformer.builder, 'to be defined');\n      expect(transformer.builder, 'to be', transformer._fromDBBuilder);\n    });\n\n    it('should return the #_fromDBBuilder if direction is FromFilesystem', function() {\n      const transformer = new XMLTransformer({ direction: TransformDirection.FromFilesystem });\n\n      expect(transformer.builder, 'to be defined');\n      expect(transformer.builder, 'to be', transformer._fromFilesystemBuilder);\n    });\n  });\n\n  /** @test {XMLTransformer#decodeContents} */\n  describe('#decodeContents', function() {\n    it('should forward errors', function(done) {\n      expect(cb => (new XMLTransformer()).decodeContents({ contents: 'no valid xml' }, cb),\n        'to call the callback with error', /Non-whitespace before first tag./)\n        .then(() => done());\n    });\n\n    it('should return object for valid xml', function(done) {\n      expect(cb => (new XMLTransformer()).decodeContents({ contents: '<tag>value</tag>' }, cb),\n        'to call the callback')\n        .then(args => {\n          expect(args[0], 'to be falsy');\n          expect(args[1], 'to equal', { tag: 'value' });\n          done();\n        });\n    });\n  });\n\n  function testBuilder(direction, object, expectedResult, callback) {\n    const transformer = new XMLTransformer({ direction });\n\n    expect(cb => transformer.encodeContents(object, cb), 'to call the callback')\n      .then(args => {\n        expect(args[0], 'to be falsy');\n        expect(args[1], 'to contain', expectedResult);\n        callback();\n      });\n  }\n\n  /** @test {XMLTransformer#encodeContents} */\n  describe('#encodeContents', function() {\n    it('should forward errors', function() {\n      expect(cb => (new XMLTransformer()).encodeContents(null, cb),\n        'to call the callback with error', 'Cannot convert undefined or null to object');\n    });\n\n    context('when direction is FromDB', function() {\n      it('should indent with double space', function(done) {\n        testBuilder(TransformDirection.FromDB, { root: { sub: 'test' } },\n          `<root>${EOL}  <sub>test</sub>${EOL}</root>`, done);\n      });\n    });\n\n    context('when direction is FromFilesytem', function() {\n      it('should indent with single space', function(done) {\n        testBuilder(TransformDirection.FromFilesystem, { root: { sub: 'test' } },\n          '<root>\\r\\n <sub>test</sub>\\r\\n</root>', done);\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "testDescribe",
    "name": "describe188",
    "testId": 188,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188",
    "access": null,
    "description": "XMLTransformer",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{XMLTransformer}"
      }
    ],
    "testTargets": [
      "XMLTransformer"
    ]
  },
  {
    "__docId__": 443,
    "kind": "testDescribe",
    "name": "describe189",
    "testId": 189,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189",
    "access": null,
    "description": "#constructor",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{XMLTransformer#constructor}"
      }
    ],
    "testTargets": [
      "XMLTransformer#constructor"
    ]
  },
  {
    "__docId__": 444,
    "kind": "testIt",
    "name": "it190",
    "testId": 190,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189.it190",
    "access": null,
    "description": "should return a Transformer",
    "lineNumber": 12
  },
  {
    "__docId__": 445,
    "kind": "testIt",
    "name": "it191",
    "testId": 191,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189.it191",
    "access": null,
    "description": "should create a _fromDBBuilder",
    "lineNumber": 16
  },
  {
    "__docId__": 446,
    "kind": "testIt",
    "name": "it192",
    "testId": 192,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe189.it192",
    "access": null,
    "description": "should create a _fromFilesystemBuilder",
    "lineNumber": 23
  },
  {
    "__docId__": 447,
    "kind": "testDescribe",
    "name": "describe193",
    "testId": 193,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe193",
    "access": null,
    "description": "#builder",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{XMLTransformer#builder}"
      }
    ],
    "testTargets": [
      "XMLTransformer#builder"
    ]
  },
  {
    "__docId__": 448,
    "kind": "testIt",
    "name": "it194",
    "testId": 194,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe193",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe193.it194",
    "access": null,
    "description": "should return the #_fromDBBuilder if direction is FromDB",
    "lineNumber": 33
  },
  {
    "__docId__": 449,
    "kind": "testIt",
    "name": "it195",
    "testId": 195,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe193",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe193.it195",
    "access": null,
    "description": "should return the #_fromDBBuilder if direction is FromFilesystem",
    "lineNumber": 40
  },
  {
    "__docId__": 450,
    "kind": "testDescribe",
    "name": "describe196",
    "testId": 196,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe196",
    "access": null,
    "description": "#decodeContents",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{XMLTransformer#decodeContents}"
      }
    ],
    "testTargets": [
      "XMLTransformer#decodeContents"
    ]
  },
  {
    "__docId__": 451,
    "kind": "testIt",
    "name": "it197",
    "testId": 197,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe196",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe196.it197",
    "access": null,
    "description": "should forward errors",
    "lineNumber": 50
  },
  {
    "__docId__": 452,
    "kind": "testIt",
    "name": "it198",
    "testId": 198,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe196",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe196.it198",
    "access": null,
    "description": "should return object for valid xml",
    "lineNumber": 56
  },
  {
    "__docId__": 453,
    "kind": "testDescribe",
    "name": "describe199",
    "testId": 199,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199",
    "access": null,
    "description": "#encodeContents",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{XMLTransformer#encodeContents}"
      }
    ],
    "testTargets": [
      "XMLTransformer#encodeContents"
    ]
  },
  {
    "__docId__": 454,
    "kind": "testIt",
    "name": "it200",
    "testId": 200,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.it200",
    "access": null,
    "description": "should forward errors",
    "lineNumber": 80
  },
  {
    "__docId__": 455,
    "kind": "testDescribe",
    "name": "context201",
    "testId": 201,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context201",
    "access": null,
    "description": "when direction is FromDB",
    "lineNumber": 85
  },
  {
    "__docId__": 456,
    "kind": "testIt",
    "name": "it202",
    "testId": 202,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context201",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context201.it202",
    "access": null,
    "description": "should indent with double space",
    "lineNumber": 86
  },
  {
    "__docId__": 457,
    "kind": "testDescribe",
    "name": "context203",
    "testId": 203,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context203",
    "access": null,
    "description": "when direction is FromFilesytem",
    "lineNumber": 92
  },
  {
    "__docId__": 458,
    "kind": "testIt",
    "name": "it204",
    "testId": 204,
    "memberof": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context203",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/lib/transform/XMLTransformer.spec.js~describe188.describe199.context203.it204",
    "access": null,
    "description": "should indent with single space",
    "lineNumber": 93
  },
  {
    "__docId__": 459,
    "kind": "testFile",
    "name": "test/src/tasks/pull.spec.js",
    "content": "import expect from 'unexpected';\nimport proxyquire from 'proxyquire';\n\nimport { Stream } from 'stream';\nimport through, { ctor as throughStreamClass } from 'through2';\nimport NodeId from '../../../src/lib/server/NodeId';\nimport AtviseFile from '../../../src/lib/server/AtviseFile';\n\nconst pull = proxyquire('../../../src/tasks/pull', {\n  '../lib/server/NodeStream': {\n    _esModule: true,\n    default: class StubStream extends throughStreamClass({ objectMode: true }) {\n      constructor() {\n        super();\n\n        this.push({\n          nodeId: new NodeId('AGENT.DISPLAYS.Main'),\n          typeDefinition: new NodeId('VariableTypes.ATVISE.Display'),\n        });\n\n        this.end();\n      }\n    },\n  },\n  gulp: {\n    _esModule: true,\n    dest: () => through.obj(),\n  },\n}).default;\n\n/** @test {pull} */\ndescribe('pull', function() {\n  this.timeout(5000);\n\n  it('should return a stream', function(done) {\n    const stream = pull();\n    expect(stream, 'to be a', Stream);\n    stream.once('end', done);\n  });\n  \n  it('should stream AtviseFiles', function(done) {\n    const stream = pull();\n\n    stream.on('data', data => {\n      expect(data, 'to be a', AtviseFile);\n    });\n\n    stream.once('end', done);\n  });\n});\n",
    "static": true,
    "longname": "test/src/tasks/pull.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 460,
    "kind": "testDescribe",
    "name": "describe205",
    "testId": 205,
    "memberof": "test/src/tasks/pull.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/tasks/pull.spec.js~describe205",
    "access": null,
    "description": "pull",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{pull}"
      }
    ],
    "testTargets": [
      "pull"
    ]
  },
  {
    "__docId__": 461,
    "kind": "testIt",
    "name": "it206",
    "testId": 206,
    "memberof": "test/src/tasks/pull.spec.js~describe205",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/tasks/pull.spec.js~describe205.it206",
    "access": null,
    "description": "should return a stream",
    "lineNumber": 35
  },
  {
    "__docId__": 462,
    "kind": "testIt",
    "name": "it207",
    "testId": 207,
    "memberof": "test/src/tasks/pull.spec.js~describe205",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/tasks/pull.spec.js~describe205.it207",
    "access": null,
    "description": "should stream AtviseFiles",
    "lineNumber": 41
  },
  {
    "__docId__": 463,
    "kind": "testFile",
    "name": "test/src/transform/Mapping.spec.js",
    "content": "import { stub } from 'sinon';\nimport { DataType, VariantArrayType } from 'node-opcua';\nimport File from 'vinyl';\nimport expect from '../../expect';\nimport { TransformDirection } from '../../../src/lib/transform/Transformer';\nimport MappingTransformer from '../../../src/transform/Mapping';\nimport NodeId from '../../../src/lib/server/NodeId';\nimport AtviseFile from '../../../src/lib/server/AtviseFile';\n\n/** @test {MappingTransformer} */\ndescribe('MappingTransformer', function() {\n  /** @test {MappingTransformer#transformFromDB} */\n  describe('#transformFromDB', function() {\n    context('when AtviseFile.fromReadResult returns error', function() {\n      before(() => stub(AtviseFile, 'fromReadResult', () => {\n        throw new Error('Test');\n      }));\n\n      after(() => AtviseFile.fromReadResult.restore());\n\n      it('should not forward errors', function() {\n        const stream = new MappingTransformer({ direction: TransformDirection.FromDB });\n\n        expect(cb => stream.transformFromDB({\n          nodeId: new NodeId('AGENT.DISPLAYS.Main')\n        }, 'utf8', cb), 'to call the callback')\n          .then(args => expect(args, 'to have length', 1));\n      });\n    });\n\n    it('should return an AtviseFile for the given ReadResult', function() {\n      const stream = new MappingTransformer({ direction: TransformDirection.FromDB });\n\n      return expect([{\n        nodeId: new NodeId('AGENT.DISPLAYS.Main'),\n        value: {\n          value: '<xml></xml>',\n          $dataType: DataType.XmlElement,\n          $arrayType: VariantArrayType.Scalar,\n        },\n        referenceDescription: {\n          typeDefinition: new NodeId('VariableTypes.ATVISE.Display'),\n        },\n      }], 'when piped through', stream, 'to yield chunks satisfying', [\n        expect.it('to be an', AtviseFile),\n      ]);\n    });\n  });\n\n  /** @test {MappingTransformer#transformFromFilesystem} */\n  describe('#transformFromFilesystem', function() {\n    it('should write AtviseFiles for read Files', function() {\n      const stream = new MappingTransformer({ direction: TransformDirection.FromFilesystem });\n\n      return expect([\n        new File({ path: 'Test.ext' }),\n      ], 'when piped through', stream,\n      'to yield chunks satisfying', [\n        expect.it('to be an', AtviseFile),\n      ]);\n    });\n\n    it('should keep base', function() {\n      const stream = new MappingTransformer({ direction: TransformDirection.FromFilesystem });\n\n      return expect(cb => stream.transformFromFilesystem(\n        new File({ path: 'folder/Test.ext', base: 'folder' }), 'utf8', cb\n      ), 'to call the callback')\n        .then(args => {\n          expect(args[0], 'to be falsy');\n\n          const result = args[1];\n          console.log(result);\n          expect(result.base, 'to equal', 'folder');\n          expect(result.relative, 'to equal', 'Test.ext');\n        });\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 464,
    "kind": "testDescribe",
    "name": "describe208",
    "testId": 208,
    "memberof": "test/src/transform/Mapping.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208",
    "access": null,
    "description": "MappingTransformer",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{MappingTransformer}"
      }
    ],
    "testTargets": [
      "MappingTransformer"
    ]
  },
  {
    "__docId__": 465,
    "kind": "testDescribe",
    "name": "describe209",
    "testId": 209,
    "memberof": "test/src/transform/Mapping.spec.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe209",
    "access": null,
    "description": "#transformFromDB",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{MappingTransformer#transformFromDB}"
      }
    ],
    "testTargets": [
      "MappingTransformer#transformFromDB"
    ]
  },
  {
    "__docId__": 466,
    "kind": "testDescribe",
    "name": "context210",
    "testId": 210,
    "memberof": "test/src/transform/Mapping.spec.js~describe208.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe209.context210",
    "access": null,
    "description": "when AtviseFile.fromReadResult returns error",
    "lineNumber": 14
  },
  {
    "__docId__": 467,
    "kind": "testIt",
    "name": "it211",
    "testId": 211,
    "memberof": "test/src/transform/Mapping.spec.js~describe208.describe209.context210",
    "testDepth": 3,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe209.context210.it211",
    "access": null,
    "description": "should not forward errors",
    "lineNumber": 21
  },
  {
    "__docId__": 468,
    "kind": "testIt",
    "name": "it212",
    "testId": 212,
    "memberof": "test/src/transform/Mapping.spec.js~describe208.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe209.it212",
    "access": null,
    "description": "should return an AtviseFile for the given ReadResult",
    "lineNumber": 31
  },
  {
    "__docId__": 469,
    "kind": "testDescribe",
    "name": "describe213",
    "testId": 213,
    "memberof": "test/src/transform/Mapping.spec.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe213",
    "access": null,
    "description": "#transformFromFilesystem",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{MappingTransformer#transformFromFilesystem}"
      }
    ],
    "testTargets": [
      "MappingTransformer#transformFromFilesystem"
    ]
  },
  {
    "__docId__": 470,
    "kind": "testIt",
    "name": "it214",
    "testId": 214,
    "memberof": "test/src/transform/Mapping.spec.js~describe208.describe213",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe213.it214",
    "access": null,
    "description": "should write AtviseFiles for read Files",
    "lineNumber": 52
  },
  {
    "__docId__": 471,
    "kind": "testIt",
    "name": "it215",
    "testId": 215,
    "memberof": "test/src/transform/Mapping.spec.js~describe208.describe213",
    "testDepth": 2,
    "static": true,
    "longname": "test/src/transform/Mapping.spec.js~describe208.describe213.it215",
    "access": null,
    "description": "should keep base",
    "lineNumber": 63
  }
]