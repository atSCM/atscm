{"version":3,"sources":["../../src/tasks/pull.js"],"names":["pull","options","clean","process","argv","slice","Promise","resolve","then","Logger","info","PullStream","NodeStream","ProjectConfig","nodes","description"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAIe,SAASA,IAAT,CAAcC,OAAd,EAAuB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,OAAO,IAAI,kBAAaE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAb,CAA7B;AAEA,SAAOC,OAAO,CAACC,OAAR,GACJC,IADI,CACC,MAAM;AACV,QAAIN,KAAJ,EAAW;AACTO,uBAAOC,IAAP,CAAY,4CAAZ;;AACA,aAAO,uBAAS,OAAT,CAAP;AACD;;AAED,WAAOJ,OAAO,CAACC,OAAR,EAAP;AACD,GARI,EASJC,IATI,CASC,MAAM,8BAAU,IAAIG,mBAAJ,CACnB,IAAIC,mBAAJ,CAAeC,uBAAcC,KAA7B,CADmB,CAAV,CATP,CAAP;AAYD;;AAEDd,IAAI,CAACe,WAAL,GAAmB,mCAAnB","sourcesContent":["import parseOptions from 'mri';\nimport { emptyDir } from 'fs-extra';\nimport toPromise from 'stream-to-promise';\nimport Logger from 'gulplog';\nimport ProjectConfig from '../config/ProjectConfig';\nimport NodeStream from '../lib/server/NodeStream';\nimport PullStream from '../lib/gulp/PullStream';\n\n/**\n * Pulls all nodes from atvise server.\n * @param {Object} [options] The options to use.\n */\nexport default function pull(options) {\n  const { clean } = options || parseOptions(process.argv.slice(2));\n\n  return Promise.resolve()\n    .then(() => {\n      if (clean) {\n        Logger.info('Using --clean, removing pulled files first');\n        return emptyDir('./src');\n      }\n\n      return Promise.resolve();\n    })\n    .then(() => toPromise(new PullStream(\n      (new NodeStream(ProjectConfig.nodes))\n    )));\n}\n\npull.description = 'Pull all nodes from atvise server';\n"],"file":"pull.js"}