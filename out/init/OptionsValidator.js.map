{"version":3,"sources":["../../src/init/OptionsValidator.js"],"names":["InitOptionsValidator","name","value","result","errors","match","validForNewPackages","warnings"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;AAGe,MAAMA,oBAAN,CAA2B;;AAExC;;;;;;AAMA,SAAOC,IAAP,CAAYC,KAAZ,EAAmB;AACjB,UAAMC,SAAS,sCAAoBD,KAApB,CAAf;;AAEA,QAAIC,OAAOC,MAAX,EAAmB;AAAE,aAAOD,OAAOC,MAAP,CAAc,CAAd,CAAP;AAA0B;;AAE/C;AACA,QAAIF,MAAMG,KAAN,CAAY,UAAZ,MAA4B,IAAhC,EAAsC;AACpC,aAAO,+BAAP;AACD;;AAED,WAAOF,OAAOG,mBAAP,GAA6B,IAA7B,GAAoCH,OAAOI,QAAP,CAAgB,CAAhB,CAA3C;AACD;;AAnBuC;kBAArBP,oB","file":"OptionsValidator.js","sourcesContent":["import validatePackageName from 'validate-npm-package-name';\n\n/**\n * A static class containing validators for the options used when running \"atscm init\".\n */\nexport default class InitOptionsValidator {\n\n  /**\n   * Validates a project name to be a valid npm package name.\n   * @param {string} value The name to validate.\n   * @return {Boolean|String} Returns true if `value` is a valid npm package name, or an error\n   * message otherwise.\n   */\n  static name(value) {\n    const result = validatePackageName(value);\n\n    if (result.errors) { return result.errors[0]; }\n\n    // First letter must be a letter\n    if (value.match(/^[a-z]+/i) === null) {\n      return 'name must start with a letter';\n    }\n\n    return result.validForNewPackages ? true : result.warnings[0];\n  }\n\n}\n"]}