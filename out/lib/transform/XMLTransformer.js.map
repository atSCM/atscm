{"version":3,"sources":["../../../src/lib/transform/XMLTransformer.js"],"names":["XmlHeader","RelativePathElements","XMLTransformer","createNodeSet","nodes","NodeSet","createTag","tagName","attributes","parentTag","initialChildNode","tag","Tag","parent","append","createCData","scriptCode","CData","createRelPathTag","configObj","relPathTag","currParentTag","forEach","nameSpaceIndex","nodePath","decodeContents","file","callback","contents","toString","cdata","strictEntities","normalize","encodeContents","xmlObj","pretty","header","e"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAIA,MAAMA,YAAY,0DAAlB;;AAEA;;;;AAIA,MAAMC,uBAAuB,CAC3B,UAD2B,EAE3B,qBAF2B,EAG3B,YAH2B,CAA7B;;AAMA;;;AAGe,MAAMC,cAAN,wCAAkD;AAC/D;;;;AAIAC,gBAAcC,KAAd,EAAqB;AACnB,WAAO,IAAI,WAAIC,OAAR,CAAgBD,KAAhB,CAAP;AACD;;AAED;;;;;;;AAOAE,YAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,gBAA1C,EAA4D;AAC1D,UAAMC,MAAM,IAAI,WAAIC,GAAR,CAAYL,OAAZ,EAAqBC,UAArB,EAAiCC,SAAjC,CAAZ;;AAEA,QAAIC,gBAAJ,EAAsB;AACpB,UAAIA,4BAA4B,WAAIE,GAApC,EAAyC;AACvC;AACAF,yBAAiBG,MAAjB,GAA0BF,GAA1B;AACD;AACDA,UAAIG,MAAJ,CAAWJ,gBAAX;AACD;;AAED,WAAOC,GAAP;AACD;;AAED;;;;AAIAI,cAAYC,UAAZ,EAAwB;AACtB,WAAO,IAAI,WAAIC,KAAR,CAAcD,UAAd,CAAP;AACD;;AAED;;;;;AAKAE,mBAAiBC,SAAjB,EAA4BV,SAA5B,EAAuC;AACrC,UAAMW,aAAa,KAAKd,SAAL,CAAe,cAAf,EAA+B,EAA/B,EAAmCG,SAAnC,CAAnB;;AAEA,QAAIU,SAAJ,EAAe;AACb,UAAIE,gBAAgBD,UAApB;;AAEA;AACAnB,2BAAqBqB,OAArB,CAA6Bf,WAAW;AACtC,cAAMI,MAAM,KAAKL,SAAL,CAAeC,OAAf,EAAwB,EAAxB,EAA4Bc,aAA5B,CAAZ;AACAA,sBAAcP,MAAd,CAAqBH,GAArB;AACAU,wBAAgBV,GAAhB;AACD,OAJD;;AAMA;AACAU,oBACGP,MADH,CACU,KAAKR,SAAL,CAAe,gBAAf,EAAiC,EAAjC,EAAqCe,aAArC,EAAoDF,UAAUI,cAA9D,CADV,EAEGT,MAFH,CAEU,KAAKR,SAAL,CAAe,MAAf,EAAuB,EAAvB,EAA2Be,aAA3B,EAA0CF,UAAUK,QAApD,CAFV;AAGD,KAdD,MAcO;AACLJ,iBAAWN,MAAX,CAAkB,KAAKR,SAAL,CAAe,UAAf,EAA2B,EAA3B,EAA+Bc,UAA/B,CAAlB;AACD;;AAED,WAAOA,UAAP;AACD;;AAED;;;;;;AAMAK,iBAAeC,IAAf,EAAqBC,QAArB,EAA+B;AAC7B,sBACED,KAAKE,QAAL,CAAcC,QAAd,EADF,EAEE;AACEC,aAAO,IADT;AAEEC,sBAAgB,IAFlB;AAGEC,iBAAW;AAHb,KAFF,EAOEL,QAPF;AASD;;AAED;;;;;;AAMAM,iBAAeC,MAAf,EAAuBP,QAAvB,EAAiC;AAC/B,QAAI;AACFA,eAAS,IAAT,EAAgB,GAAE3B,SAAU,GAAE,sBAAekC,MAAf,EAC5B;AACEC,gBAAQ,IADV;AAEEC,gBAAQ;AAFV,OAD4B,CAK7B,EALD;AAMD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVV,eAASU,CAAT;AACD;AACF;AAtG8D;kBAA5CnC,c","file":"XMLTransformer.js","sourcesContent":["import SplittingTransformer from './SplittingTransformer';\nimport { parse as xmlStringToObj, serialize as objToXmlString, xml } from '../xml/xamel';\n\n/**\n * Definition for default xml header\n * @type {String}\n */\nconst XmlHeader = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n';\n\n/**\n * List of XML Tags needed for relative node addresses\n * @type {String[]}\n */\nconst RelativePathElements = [\n  'Elements',\n  'RelativePathElement',\n  'TargetName',\n];\n\n/**\n * A transformer used to transform XML documents.\n */\nexport default class XMLTransformer extends SplittingTransformer {\n  /**\n   * Creates a new {xamel~NodeSet}\n   * @param {xamel~Tag[]} nodes The nodes to store in the created NodeSet\n   */\n  createNodeSet(nodes) {\n    return new xml.NodeSet(nodes);\n  }\n\n  /**\n   * Creates a new {xamel~Tag}\n   * @param {String} tagName The xml tag name\n   * @param {Object} attributes Object containing xml attributes\n   * @param {xamel~Tag} parentTag The parent tag the created tag belongs to\n   * @param {*} initialChildNode The tags child item\n   */\n  createTag(tagName, attributes, parentTag, initialChildNode) {\n    const tag = new xml.Tag(tagName, attributes, parentTag);\n\n    if (initialChildNode) {\n      if (initialChildNode instanceof xml.Tag) {\n        // eslint-disable-next-line no-param-reassign\n        initialChildNode.parent = tag;\n      }\n      tag.append(initialChildNode);\n    }\n\n    return tag;\n  }\n\n  /**\n   * Creates a new {xamel~CData}\n   * @param {String} scriptCode The script code to store\n   */\n  createCData(scriptCode) {\n    return new xml.CData(scriptCode);\n  }\n\n  /**\n   * Creates a new <RelativePath> tag\n   * @param {Object} configObj The relative path elements configuration object\n   * @param {xamel~Tag} parentTag The parent tag the relative path tag belongs to\n   */\n  createRelPathTag(configObj, parentTag) {\n    const relPathTag = this.createTag('RelativePath', {}, parentTag);\n\n    if (configObj) {\n      let currParentTag = relPathTag;\n\n      // Build relative path element structure\n      RelativePathElements.forEach(tagName => {\n        const tag = this.createTag(tagName, {}, currParentTag);\n        currParentTag.append(tag);\n        currParentTag = tag;\n      });\n\n      // Append relative path information\n      currParentTag\n        .append(this.createTag('NamespaceIndex', {}, currParentTag, configObj.nameSpaceIndex))\n        .append(this.createTag('Name', {}, currParentTag, configObj.nodePath));\n    } else {\n      relPathTag.append(this.createTag('Elements', {}, relPathTag));\n    }\n\n    return relPathTag;\n  }\n\n  /**\n   * Parses XML in a file's contents.\n   * @param {AtviseFile} file The file to process.\n   * @param {function(err: ?Error, result: ?Object)} callback Called with the parsed document or the\n   * parse error that occurred.\n   */\n  decodeContents(file, callback) {\n    xmlStringToObj(\n      file.contents.toString(),\n      {\n        cdata: true,\n        strictEntities: true,\n        normalize: true,\n      },\n      callback\n    );\n  }\n\n  /**\n   * Builds an XML string from an object.\n   * @param {xml2js~Builder} xmlObj The object to encode.\n   * @param {function(err: ?Error, result: ?String)} callback Called with the resulting string or\n   * the error that occurred while building.\n   */\n  encodeContents(xmlObj, callback) {\n    try {\n      callback(null, `${XmlHeader}${objToXmlString(xmlObj,\n        {\n          pretty: true,\n          header: false,\n        })\n      }`);\n    } catch (e) {\n      callback(e);\n    }\n  }\n}\n"]}