{"version":3,"sources":["../../../src/lib/transform/XMLTransformer.js"],"names":["XMLTransformer","SplittingTransformer","constructor","options","build","object","buildOptions","declaration","Object","assign","attributes","version","encoding","standalone","root","elements","find","isElement","addOnTop","parent","name","node","unshift","attributeValueFn","val","replace","_fromDBBuilder","xml","compact","spaces","EOL","_fromFilesystemBuilder","builder","direction","TransformDirection","FromDB","decodeContents","callback","value","stringValue","e","encodeContents"],"mappings":"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","sourcesContent":["import { EOL } from 'os';\nimport { xml2js, js2xml } from 'xml-js';\nimport { isElement, removeChild } from '../helpers/xml';\nimport { TransformDirection } from './Transformer';\nimport SplittingTransformer from './SplittingTransformer';\n\n/**\n * A transformer used to transform XML documents.\n */\nexport default class XMLTransformer extends SplittingTransformer {\n\n  /**\n   * Creates a new XMLTransformer based on some options.\n   * @param {Object} options The options to use.\n   */\n  constructor(options) {\n    super(options);\n\n    function build(object, buildOptions) {\n      if (!object.declaration) {\n        Object.assign(object, {\n          declaration: {\n            attributes: { version: '1.0', encoding: 'UTF-8', standalone: 'no' },\n          },\n        });\n      }\n\n      const root = object.elements.find(isElement);\n\n      function addOnTop(parent, name) {\n        const node = removeChild(parent, name);\n\n        if (node) {\n          parent.elements.unshift(node);\n        }\n      }\n\n      if (root.elements) {\n        addOnTop(root, 'metadata');\n        addOnTop(root, 'defs');\n        addOnTop(root, 'title');\n      }\n\n      return js2xml(object, Object.assign(buildOptions, {\n        attributeValueFn(val) {\n          return val\n            .replace(/&(?!(amp|quot);)/g, '&amp;')\n            .replace(/</g, '&lt;');\n        },\n      }));\n    }\n\n    // eslint-disable-next-line jsdoc/require-param\n    /**\n     * The builder to use with direction {@link TransformDirection.FromDB}.\n     * @type {function(object: Object): string}\n     */\n    this._fromDBBuilder = object => {\n      const xml = build(object, { compact: false, spaces: 2 });\n      return xml.replace(/\\r?\\n/g, EOL);\n    };\n\n    // eslint-disable-next-line jsdoc/require-param\n    /**\n     * The builder to use with direction {@link TransformDirection.FromFilesystem}.\n     * @type {function(object: Object): string}\n     */\n    this._fromFilesystemBuilder = object => {\n      const xml = build(object, { compact: false, spaces: 1 });\n      return xml.replace(/\\r?\\n/g, '\\r\\n');\n    };\n  }\n\n  /**\n   * Returns the XML builder to use based on the current {@link Transformer#direction}.\n   * @type {function(object: Object): string}\n   */\n  get builder() {\n    return this.direction === TransformDirection.FromDB ?\n      this._fromDBBuilder :\n      this._fromFilesystemBuilder;\n  }\n\n  /**\n   * Parses XML in a node's contents.\n   * @param {Node} node The node to process.\n   * @param {function(err: ?Error, result: ?Object)} callback Called with the parsed document or the\n   * parse error that occurred.\n   */\n  decodeContents(node, callback) {\n    try {\n      callback(null, xml2js(this.direction === TransformDirection.FromDB ?\n        node.value.value :\n        node.stringValue,\n      { compact: false }));\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n  /**\n   * Builds an XML string from an object.\n   * @param {Object} object The object to encode.\n   * @param {function(err: ?Error, result: ?String)} callback Called with the resulting string or\n   * the error that occurred while building.\n   */\n  encodeContents(object, callback) {\n    try {\n      callback(null, this.builder(object));\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n}\n"],"file":"XMLTransformer.js"}