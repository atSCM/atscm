{"version":3,"sources":["../../../src/lib/transform/XMLTransformer.js"],"names":["XMLTransformer","SplittingTransformer","constructor","options","build","object","buildOptions","root","childNodes","find","n","indent","repeat","spaces","_fromDBBuilder","xml","compact","replace","EOL","_fromFilesystemBuilder","builder","direction","TransformDirection","FromDB","decodeContents","node","value","toString","stringValue","encodeContents"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,cAAN,SAA6BC,6BAA7B,CAAkD;AAE/D;;;;AAIAC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;;AAEA,aAASC,KAAT,CAAeC,MAAf,EAAuBC,YAAvB,EAAqC;AACnC,YAAMC,IAAI,GAAGF,MAAM,CAACG,UAAP,CAAkBC,IAAlB,CAAuBC,CAAC,IAAI,0BAAUA,CAAV,CAA5B,CAAb;;AAEA,UAAIH,IAAJ,EAAU;AACR,kCAAUA,IAAV,EAAgB,UAAhB;AACA,kCAAUA,IAAV,EAAgB,MAAhB;AACA,kCAAUA,IAAV,EAAgB,OAAhB;AACD;;AAED,aAAO,uBAAOF,MAAP,EAAe;AAAEM,QAAAA,MAAM,EAAE,IAAIC,MAAJ,CAAWN,YAAY,CAACO,MAAxB;AAAV,OAAf,CAAP;AACD,KAbkB,CAenB;;AACA;;;;;;AAIA,SAAKC,cAAL,GAAsBT,MAAM,IAAI;AAC9B,YAAMU,GAAG,GAAGX,KAAK,CAACC,MAAD,EAAS;AAAEW,QAAAA,OAAO,EAAE,KAAX;AAAkBH,QAAAA,MAAM,EAAE;AAA1B,OAAT,CAAjB;AACA,aAAOE,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAsBC,OAAtB,CAAP;AACD,KAHD,CApBmB,CAyBnB;;AACA;;;;;;AAIA,SAAKC,sBAAL,GAA8Bd,MAAM,IAAI;AACtC,YAAMU,GAAG,GAAGX,KAAK,CAACC,MAAD,EAAS;AAAEW,QAAAA,OAAO,EAAE,KAAX;AAAkBH,QAAAA,MAAM,EAAE;AAA1B,OAAT,CAAjB;AACA,aAAOE,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAsB,IAAtB,CAAP;AACD,KAHD;AAID;AAED;;;;;;AAIA,MAAIG,OAAJ,GAAc;AACZ,WAAO,KAAKC,SAAL,KAAmBC,gCAAmBC,MAAtC,GACL,KAAKT,cADA,GAEL,KAAKK,sBAFP;AAGD;AAED;;;;;;AAIAK,EAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,WAAO,sBAAM,KAAKJ,SAAL,KAAmBC,gCAAmBC,MAAtC,GACXE,IAAI,CAACC,KAAL,CAAWA,KAAX,CAAiBC,QAAjB,EADW,GAEXF,IAAI,CAACG,WAFA,CAAP;AAGD;AAED;;;;;;AAIAC,EAAAA,cAAc,CAACxB,MAAD,EAAS;AACrB,WAAO,KAAKe,OAAL,CAAaf,MAAb,CAAP;AACD;;AApE8D","sourcesContent":["import { EOL } from 'os';\nimport { parse, render, isElement, moveToTop } from 'modify-xml';\nimport { TransformDirection } from './Transformer';\nimport SplittingTransformer from './SplittingTransformer';\n\n/**\n * A transformer used to transform XML documents.\n */\nexport default class XMLTransformer extends SplittingTransformer {\n\n  /**\n   * Creates a new XMLTransformer based on some options.\n   * @param {Object} options The options to use.\n   */\n  constructor(options) {\n    super(options);\n\n    function build(object, buildOptions) {\n      const root = object.childNodes.find(n => isElement(n));\n\n      if (root) {\n        moveToTop(root, 'metadata');\n        moveToTop(root, 'defs');\n        moveToTop(root, 'title');\n      }\n\n      return render(object, { indent: ' '.repeat(buildOptions.spaces) });\n    }\n\n    // eslint-disable-next-line jsdoc/require-param\n    /**\n     * The builder to use with direction {@link TransformDirection.FromDB}.\n     * @type {function(object: Object): string}\n     */\n    this._fromDBBuilder = object => {\n      const xml = build(object, { compact: false, spaces: 2 });\n      return xml.replace(/\\r?\\n/g, EOL);\n    };\n\n    // eslint-disable-next-line jsdoc/require-param\n    /**\n     * The builder to use with direction {@link TransformDirection.FromFilesystem}.\n     * @type {function(object: Object): string}\n     */\n    this._fromFilesystemBuilder = object => {\n      const xml = build(object, { compact: false, spaces: 1 });\n      return xml.replace(/\\r?\\n/g, '\\n');\n    };\n  }\n\n  /**\n   * Returns the XML builder to use based on the current {@link Transformer#direction}.\n   * @type {function(object: Object): string}\n   */\n  get builder() {\n    return this.direction === TransformDirection.FromDB ?\n      this._fromDBBuilder :\n      this._fromFilesystemBuilder;\n  }\n\n  /**\n   * Parses XML in a node's contents.\n   * @param {Node} node The node to process.\n   */\n  decodeContents(node) {\n    return parse(this.direction === TransformDirection.FromDB ?\n      node.value.value.toString() :\n      node.stringValue);\n  }\n\n  /**\n   * Builds an XML string from an object.\n   * @param {Object} object The object to encode.\n   */\n  encodeContents(object) {\n    return this.builder(object);\n  }\n\n}\n"],"file":"XMLTransformer.js"}