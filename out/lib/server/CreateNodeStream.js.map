{"version":3,"sources":["../../../src/lib/server/CreateNodeStream.js"],"names":["CreateNodeStream","CallScriptStream","scriptId","NodeId","NodeIdType","STRING","scriptParameters","file","options","nodeId","parentNodeId","parent","nodeClass","value","typeDefinition","browseName","idName","toParentRefs","references","get","ReferenceTypeIds","toParent","reference","ReferenceTypeNames","rules","HasModellingRule","modellingRule","NodeClass","Variable","dataType","variantValue","valueRank","arrayType","paramObjString","DataType","String","JSON","stringify","processErrorMessage","handleOutputArguments","outArgs","callback","StatusCodes","Good","Error","createdNode","createFailed","Logger","warn","toString","debug","push"],"mappings":"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","sourcesContent":["import { StatusCodes } from 'node-opcua/lib/datamodel/opcua_status_code';\nimport { DataType } from 'node-opcua/lib/datamodel/variant';\nimport { NodeClass } from 'node-opcua/lib/datamodel/nodeclass';\nimport Logger from 'gulplog';\nimport NodeId from '../model/opcua/NodeId';\nimport { ReferenceTypeIds, ReferenceTypeNames } from '../model/Node';\nimport CallScriptStream from './scripts/CallScriptStream';\n\n/**\n * A stream that creates OPC-UA nodes for the passed {@link AtviseFiles}s.\n */\nexport default class CreateNodeStream extends CallScriptStream {\n\n  /**\n   * Id of the *CreateNode* script added with `atscm import`.\n   * @type {NodeId}\n   */\n  get scriptId() {\n    return new NodeId(NodeId.NodeIdType.STRING,\n      'SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm.CreateNode',\n      1\n    );\n  }\n\n  /**\n   * The options required to create a node for the given file.\n   * @param {AtviseFile} file The processed file.\n   * @return {Object} The options passed to the *CreateNode* script.\n   */\n  scriptParameters(file) {\n    const options = {\n      nodeId: file.nodeId,\n      parentNodeId: file.parent ? file.parent.nodeId : 'Objects',\n      nodeClass: file.nodeClass.value,\n      typeDefinition: file.typeDefinition,\n      browseName: file.idName,\n    };\n\n    const toParentRefs = file.references.get(ReferenceTypeIds.toParent);\n    if (toParentRefs) {\n      options.reference = ReferenceTypeNames[[...toParentRefs][0]];\n    }\n\n    const rules = file.references.get(ReferenceTypeIds.HasModellingRule);\n    if (rules) {\n      options.modellingRule = [...rules][0];\n    }\n\n    if (file.nodeClass.value === NodeClass.Variable.value) {\n      options.dataType = file.variantValue.dataType.value;\n      options.valueRank = file.variantValue.arrayType.value;\n      options.value = file.variantValue.value;\n    }\n\n    return {\n      paramObjString: {\n        dataType: DataType.String,\n        value: JSON.stringify(options),\n      },\n    };\n  }\n\n  /**\n   * Prints an error message telling that creating a node failed.\n   * @param {AtviseFile} file The file who's node could not be created.\n   * @return {string} The resulting error message.\n  */\n  processErrorMessage(file) {\n    return `Error creating node ${file.nodeId}`;\n  }\n\n  /**\n   * Handles the results of a script call.\n   * @param {AtviseFile} file The file the script was called with.\n   * @param {node-opcua~Variant[]} outArgs The raw method results.\n   * @param {function(err: Error)} callback Called once finished.\n   */\n  handleOutputArguments(file, outArgs, callback) {\n    if (outArgs[0].value !== StatusCodes.Good) {\n      callback(new Error(outArgs[1].value));\n    } else {\n      const [{ value: createdNode }, { value: createFailed }] = outArgs[3].value;\n\n      if (createFailed) {\n        Logger.warn('Failed to create node', file.nodeId.toString());\n      } else if (createdNode) {\n        Logger.debug('Created node', file.nodeId.toString());\n        this.push(file);\n      } else {\n        Logger.debug('Node', file.nodeId.toString(), 'already exists');\n        this.push(file);\n      }\n\n      callback(null);\n    }\n  }\n\n}\n"],"file":"CreateNodeStream.js"}