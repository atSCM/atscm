{"version":3,"sources":["../../../src/lib/gulp/src.ts"],"names":["FileNode","SourceNode","constructor","nodeClass","dataType","arrayType","references","nodeId","options","NodeClass","specialId","Object","entries","forEach","ref","ids","type","ReferenceTypeIds","parseInt","id","addReference","_resolvedReferences","valueSoFar","DataType","VariantArrayType","setRawValue","value","_rawValue","hasRawValue","stringValue","Error","toString","valueIsComplete","undefined","variantValue","isDefinitionFile","path","Boolean","match","containerFileRegexp","SourceBrowser","handleNode","readNodeFile","Set","Map","_queue","PromiseQueue","concurrency","_nodeHandler","_readNodeFile","browse","processError","done","Promise","resolve","reject","_reject","err","Logger","debug","pause","clear","processPath","onIdle","then","_dependingOn","size","Array","from","keys","join","add","_processPath","catch","readNode","push","parent","children","singleNode","s","isDirectory","container","nextChildren","reduce","nodes","p","node","name","parts","noProcessingNeeded","find","current","n","raw","rest","split","concat","assign","inheritParent","endsWith","isFile","warn","slice","length","_pushedPath","has","dir","rel","relative","definitionPath","_processNode","waitingFor","deps","result","filter","_pushed","ProjectConfig","isExternal","d","set","get","_pushNode","Variable","code","child","depending","dep","delete","src","browser"],"mappings":"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","sourcesContent":["import { join, basename, dirname } from 'path';\nimport { readdir, stat, readFile, readJSON } from 'fs-extra';\nimport { NodeClass } from 'node-opcua/lib/datamodel/nodeclass';\nimport { DataType, VariantArrayType, Variant } from 'node-opcua/lib/datamodel/variant';\nimport { KeyOf } from 'node-opcua/lib/misc/enum.js';\nimport Logger from 'gulplog';\nimport PromiseQueue from 'p-queue';\nimport {\n  SourceNode, ReferenceTypeIds, NodeOptions, NodeDefinition,\n} from '../model/Node';\nimport ProjectConfig from '../../config/ProjectConfig';\nimport { decodeVariant } from '../coding';\nimport { Omit } from '../helpers/types';\n\ntype FileNodeOptions = Omit<NodeOptions, 'nodeClass'> & NodeDefinition;\n\n/**\n * A node returned by the {@link SourceStream}.\n */\nexport class FileNode extends SourceNode {\n\n  /**\n   * Creates a new node.\n   * @param options The options to use.\n   */\n  public constructor({\n    nodeClass, dataType, arrayType, references, nodeId,\n    ...options\n  }: FileNodeOptions) {\n    super({\n      ...options,\n      nodeClass: NodeClass[nodeClass || 'Variable'],\n    });\n\n    if (nodeId) {\n      /**\n       * The id stored in the definition file\n       * @type {NodeId}\n      */\n      this.specialId = nodeId;\n    }\n\n    if (references) {\n      (Object.entries(references) as ([keyof typeof ReferenceTypeIds, (string | number)[]])[])\n        .forEach(([ref, ids]) => {\n          const type = ReferenceTypeIds[ref] || parseInt(ref, 10);\n\n          ids.forEach(id => {\n            this.references.addReference(type, id);\n            this._resolvedReferences.addReference(type, id);\n          });\n        });\n    }\n\n    if (dataType) {\n      this.valueSoFar.dataType = DataType[dataType];\n    }\n\n    if (arrayType) {\n      this.valueSoFar.arrayType = VariantArrayType[arrayType];\n    }\n  }\n\n  protected _rawValue?: Buffer;\n\n  public setRawValue(value: Buffer): void {\n    this._rawValue = value;\n  }\n\n  private hasRawValue(): this is { _rawValue: Buffer } {\n    return !!this._rawValue;\n  }\n\n  /**\n   * A node's raw value, decoded into a string.\n   */\n  public get stringValue(): string {\n    if (!this.hasRawValue()) { throw new Error('No value read yet. Ensure to call #setRawValue'); }\n\n    return this._rawValue.toString();\n  }\n\n  /** The node's value (may be incomplete, use {@link FileNode#value} to ensure). */\n  public valueSoFar: Partial<Variant> = {};\n\n  private valueIsComplete(): this is { valueSoFar: Variant } {\n    return this.valueSoFar.value !== undefined;\n  }\n\n  /**\n   * A node's {@link node-opcua~Variant} value.\n   */\n  public get variantValue(): Variant {\n    const value = this.valueSoFar;\n\n    if (!this.valueIsComplete()) {\n      if (!value.dataType) {\n        throw new Error(`${this.nodeId} has no data type`);\n      }\n      if (!value.arrayType) {\n        throw new Error(`${this.nodeId} has no array type`);\n      }\n      if (this.hasRawValue()) {\n        value.value = decodeVariant(this._rawValue, value);\n      }\n    }\n\n    return (this.valueSoFar as Variant);\n  }\n\n  public get value(): Variant {\n    return this.variantValue;\n  }\n\n}\n\n// Helpers\n/**\n * Returns `true` for definition file paths.\n * @param path The path to check.\n * @return If the file at path is a definition file.\n */\nexport function isDefinitionFile(path: string): boolean {\n  return Boolean(basename(path).match(/^\\..*\\.json$/));\n}\n\n/**\n * Matches container files.\n */\nconst containerFileRegexp = /^\\.((Object|Variable)(Type)?|Method|View|(Reference|Data)Type)\\.json$/;\n\ntype NodeHandler<R = void> = (node: FileNode) => R;\n\ninterface SourceBrowserOptions {\n  handleNode: NodeHandler<Promise<void>>;\n  readNodeFile: NodeHandler<boolean>;\n}\n\n/**\n * Browses the local file system for nodes.\n */\nexport class SourceBrowser {\n\n  /** The queue processing incoming paths / nodes. @type {p-queue~PQueue} */\n  private _queue: PromiseQueue;\n\n  /** A callback called with every discovered node. */\n  private _nodeHandler: NodeHandler<Promise<void>>;\n  /** A callback deciding if a node file should be read. */\n  private _readNodeFile: NodeHandler<boolean>;\n\n  /** The pushed node's ids */\n  private _pushed = new Set<string>();\n  /** The pushed node's paths */\n  private _pushedPath = new Set<string>();\n  /** Stores how queued nodes depend on each other */\n  // eslint-disable-next-line no-spaced-func\n  private _dependingOn = new Map<string, (BrowsedFileNode & { waitingFor: Set<string> })[]>();\n\n  /**\n   * Sets up a new browser.\n   * @param options The options to apply.\n   * @param options.handleNode A callback called with every discovered node.\n   * @param options.readNodeFile A callback deciding if a node file should be read.\n   */\n  public constructor({ handleNode, readNodeFile }: SourceBrowserOptions) {\n    this._queue = new PromiseQueue({\n      concurrency: 250,\n    });\n\n    this._nodeHandler = handleNode;\n    this._readNodeFile = readNodeFile;\n  }\n\n  /**\n   * A function to be called once an error occurres during parallel processing.\n   * @param error The error to exit with.\n   */\n  private _reject!: (error: Error) => void;\n\n  /**\n   * Starts the browser at the given path.\n   * @param path The path to start browsing at.\n   * @param options Passed directly to {@link SourceBrowser#processPath}.\n   * @return Fulfilled once browsing is complete.\n   */\n  public async browse(path: string, options = {}): Promise<void> {\n    let processError: Error;\n\n    const done = new Promise<void>((resolve, reject) => {\n      this._reject = err => {\n        if (processError) {\n          // Multiple errors occured. In most cases this means, that the server connection was\n          // closed after the first error.\n          Logger.debug('Additional error', err);\n          return;\n        }\n\n        processError = err;\n        this._queue.pause();\n        this._queue.clear();\n\n        reject(err);\n      };\n\n      // write initial path\n      this.processPath({ path, ...options });\n\n      this._queue.onIdle().then(() => {\n        if (processError) { return; }\n\n        if (this._dependingOn.size) {\n          reject(new Error(`Some nodes are still waiting for dependencies\n  Missing nodes: ${Array.from(this._dependingOn.keys()).join(', ')}\n  - Pull these nodes or add them to the ignored ones`));\n        }\n\n        resolve();\n      });\n    });\n\n    return done;\n  }\n\n  /**\n   * Enqueues a {@link SourceBrowser#_processPath} call with the given options.\n   * @param options Passed directly to {@link SourceBrowser#_processPath}.\n   */\n  public processPath(options: ProcessPathOptions): Promise<FileNode | void> {\n    return this._queue.add(() => this._processPath(options).catch(this._reject));\n  }\n\n  /**\n   * Can be called by transformers to read this path before finishing it's parent nodes.\n   * @param {Object} options Passed directly to {@link SourceBrowser#_processPath}.\n   * @param {string} options.path The path to read.\n   */\n  public readNode({ path }: { path: string }): Promise<FileNode> {\n    return this._processPath({\n      path,\n      push: false,\n    }) as Promise<FileNode>; // NOTE: If `push` is true, the browser always returns a node.\n  }\n\n  /**\n   * Where the real browsing happens: Stats the given path, discovering new node definition files,\n   * if any and finally pushes discovered nodes to {@link SourceBrowser#_processNode}.\n   * @param {Object} options The options to use.\n   */\n  private async _processPath({\n    path, parent, children,\n    push = true, singleNode = false,\n  }: ProcessPathOptions): Promise<void | FileNode> {\n    const s = await stat(path);\n\n    if (s.isDirectory()) {\n      let container;\n      const nextChildren = (await readdir(path))\n        .reduce((nodes, p) => {\n          const node = {\n            name: p,\n            path: join(path, p),\n            push,\n          };\n\n          if (p.match(containerFileRegexp)) {\n            container = node;\n\n            return nodes;\n          }\n\n          let parts: string[];\n          const noProcessingNeeded = nodes.find(current => {\n            const n = current.name;\n            if (n === `.${p}.json`) { return true; } // Skip files with definitions already present\n\n            const [raw, rest] = parts || (parts = p.split('.inner'));\n\n            if (rest === '' && (n === raw || n === `.${raw}.json`)) { // Got an *.inner directory\n              // eslint-disable-next-line no-param-reassign\n              current.children = (current.children || []).concat(node);\n              return true;\n            }\n\n            return false;\n          });\n\n          return noProcessingNeeded ? nodes : nodes.concat(node);\n        }, [] as DiscoveredNodeFile[]);\n\n      if (container) {\n        return this._processPath(Object.assign(container, { children: nextChildren, parent }));\n      } else if (singleNode) {\n        Logger.debug(`Pushing parent at ${path}`);\n        return this._processPath({ path: join(path, '../'), parent, children, push });\n      }\n\n      const inheritParent = path.endsWith('.inner');\n      nextChildren.forEach(node => {\n        // eslint-disable-next-line no-param-reassign\n        if (inheritParent) { node.parent = parent; }\n        this.processPath(node);\n      });\n    } else if (s.isFile()) {\n      if (!isDefinitionFile(path)) {\n        // FIXME: Browse parent here for watch task / Variable source node\n        // (e.g. AGENT/DISPLAYS/Default.display/Default.js changed)\n\n        if (singleNode) {\n          Logger.debug(`Pushing parent at ${path}`);\n          return this._processPath({ path: join(path, '../'), parent, children, push, singleNode });\n        }\n\n        Logger.warn(`Not a definition file at ${path}`);\n        return Promise.resolve();\n      }\n\n      let name = basename(path, '.json').slice(1);\n      if (name.length >= 4 && NodeClass[name as KeyOf<typeof NodeClass>]) {\n        name = basename(dirname(path));\n      }\n\n      if (this._pushedPath.has(path)) {\n        // throw new Error('Double-handled node ' + path);\n        return Promise.resolve();\n      }\n\n      const dir = dirname(path);\n      const rel = join(dir, name);\n      const node: BrowsedFileNode = Object.assign(new FileNode({\n        name,\n        parent,\n        ...(await readJSON(path) as NodeDefinition),\n      }), {\n        push, // FIXME: Remove?\n        children,\n        relative: rel,\n        definitionPath: path,\n      });\n\n      return this._processNode(node);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Handles a node's dependencies and calls {@link SourceBrowser#_pushNode} once it's ready.\n   * @param node A discovered node.\n   */\n  private _processNode(node: BrowsedFileNode): Promise<void | FileNode> {\n    // Build dependency map\n    if (!node.waitingFor) {\n      const deps = Array.from(node.references)\n        .reduce((result, [, ids]) => result\n          .concat(Array.from(ids)\n            .filter(id => {\n              if (typeof id === 'number') { // OPC-UA node\n                return false;\n              }\n\n              return !(this._pushed.has(id)) && !ProjectConfig.isExternal(id);\n            }) as string[]),\n        [] as string[]);\n      // eslint-disable-next-line no-param-reassign\n      node.waitingFor = new Set(deps);\n      deps.forEach(d => {\n        this._dependingOn.set(d, (this._dependingOn.get(d) || [])\n          .concat(node as BrowsedFileNode & { waitingFor: Set<string> }));\n      });\n    }\n\n    if (!node.waitingFor.size) {\n      return this._pushNode(node);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Reads a node's value file (if it's a variable) and calls {@link SourceBrowser#_nodeHandler}\n   * with it, finishing the node's processing and promoting it's dependents, if any.\n   * @param node A discovered node.\n   * @return The node, once it's fully processed.\n   */\n  private async _pushNode(node: BrowsedFileNode): Promise<FileNode> {\n    // Read node value\n    if (node.nodeClass === NodeClass.Variable && this._readNodeFile(node)) {\n      // eslint-disable-next-line no-param-reassign\n      await readFile(node.relative)\n        .then(value => node.setRawValue(value))\n        .catch(err => {\n          if (err.code === 'EISDIR') { return; }\n          throw new Error(`${err.code}: Error reading ${node.relative}`);\n        });\n    }\n\n    return this._nodeHandler(node)\n      .then(() => {\n        // Handle children\n        if (node.children) {\n          node.children.forEach(child => {\n            // eslint-disable-next-line no-param-reassign\n            child.parent = node;\n            this.processPath(child);\n          });\n        }\n\n        // Handle dependencies\n        const depending = this._dependingOn.get(node.nodeId);\n        if (depending) {\n          depending.forEach(dep => {\n            dep.waitingFor.delete(node.nodeId);\n\n            if (!dep.waitingFor.size) {\n              // All dependencies resolved\n              return this._pushNode(dep);\n            }\n\n            // Still waiting\n            return Logger.debug('Still waiting', dep.nodeId, Array.from(dep.waitingFor));\n          });\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        delete node.waitingFor;\n        this._dependingOn.delete(node.nodeId);\n        this._pushed.add(node.nodeId);\n\n        // Mark as pushed\n        this._pushedPath.add(node.definitionPath);\n\n        return node;\n      });\n  }\n\n}\n\n/**\n * Starts a new source browser at the given path.\n * @param path The path to start browsing with.\n * @param options Passed directly to {@link SourceBrowser#constructor}.\n * @return A promise resolved once browsing is finished, with an addional *browser* property holding\n * the SourceBrowser instance created.\n */\nexport default function src(path: string, options: SourceBrowserOptions): Promise<void> & {\n  browser: SourceBrowser;\n} {\n  const browser = new SourceBrowser(options);\n\n  return Object.assign(browser.browse(path, options), { browser });\n}\n\n// Option types\n\n/** A file node while being processed by a source browser */\ntype BrowsedFileNode = FileNode & {\n  waitingFor?: Set<string>;\n  children?: DiscoveredNodeFile[];\n  relative: string;\n  definitionPath: string;\n}\n\ninterface DiscoveredNodeFile {\n  path: string;\n  name: string;\n  push: boolean;\n  parent?: FileNode;\n  children?: DiscoveredNodeFile[];\n}\n\ntype ProcessPathOptions = Partial<DiscoveredNodeFile> & {\n  path: string;\n  singleNode?: boolean;\n}\n"],"file":"src.js"}