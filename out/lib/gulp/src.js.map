{"version":3,"sources":["../../../src/lib/gulp/src.js"],"names":["FileNode","SourceNode","constructor","name","parent","nodeClass","nodeId","references","dataType","arrayType","value","NodeClass","Variable","specialId","Object","entries","forEach","ref","ids","type","ReferenceTypeIds","id","addReference","_resolvedReferences","DataType","VariantArrayType","stringValue","_rawValue","toString","variantValue","Error","isDefinitionFile","path","match","containerFileRegexp","hierarchicalReferencesTypeNames","Set","SourceBrowser","handleNode","readNodeFile","_queue","PromiseQueue","concurrency","_nodeHandler","_readNodeFile","_pushed","_pushedPath","_dependingOn","Map","browse","options","processError","_reject","err","Logger","debug","pause","clear","processPath","onIdle","then","size","Array","from","keys","join","add","_processPath","catch","readNode","tree","push","children","singleNode","s","isDirectory","container","nextChildren","reduce","nodes","p","node","parts","noProcessingNeeded","find","current","n","raw","rest","split","concat","assign","isFile","warn","Promise","resolve","slice","length","has","dir","rel","relative","definitionPath","_processNode","_waitingFor","deps","filter","key","result","ProjectConfig","isExternal","waitingFor","d","set","get","_pushNode","code","child","depending","dep","delete","src","browser"],"mappings":"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","sourcesContent":["import { join, basename, dirname } from 'path';\nimport { readdir, stat, readFile, readJSON } from 'fs-extra';\nimport { NodeClass } from 'node-opcua/lib/datamodel/nodeclass';\nimport { DataType, VariantArrayType } from 'node-opcua/lib/datamodel/variant';\nimport Logger from 'gulplog';\nimport PromiseQueue from 'p-queue';\nimport { SourceNode, ReferenceTypeIds } from '../model/Node';\nimport ProjectConfig from '../../config/ProjectConfig';\nimport { decodeVariant } from '../coding';\n\n/**\n * A node returned by the {@link SourceStream}.\n */\nexport class FileNode extends SourceNode {\n\n  /**\n   * Creates a new node.\n   * @param {Object} options The options to use.\n   */\n  constructor({ name, parent, nodeClass, nodeId, references, dataType, arrayType }) {\n    super({ name, parent, nodeClass });\n\n    /**\n     * A node's value (may be incomplete, use {@link FileNode#variantValue} to ensure).\n     * @type {node-opcua~Variant}\n     */\n    this.value = {};\n\n    if (nodeClass) {\n      /**\n       * The node's class.\n       * @type {node-opcua~NodeClass}\n       * */\n      this.nodeClass = NodeClass[nodeClass];\n    } else {\n      this.nodeClass = NodeClass.Variable;\n    }\n\n    if (nodeId) {\n      /**\n       * The id stored in the definition file\n       * @type {NodeId}\n      */\n      this.specialId = nodeId;\n    }\n\n    if (references) {\n      Object.entries(references).forEach(([ref, ids]) => {\n        const type = ReferenceTypeIds[ref];\n\n        ids.forEach(id => {\n          this.references.addReference(type, id);\n          this._resolvedReferences.addReference(type, id);\n        });\n      });\n    }\n\n    if (dataType) {\n      this.value.dataType = DataType[dataType];\n    }\n\n    if (arrayType) {\n      this.value.arrayType = VariantArrayType[arrayType];\n    }\n  }\n\n  /**\n   * A node's raw value, decoded into a string.\n   * @type {string}\n   */\n  get stringValue() {\n    return this._rawValue.toString();\n  }\n\n  /**\n   * A node's {@link node-opcua~Variant} value.\n   * @type {node-opcua~Variant}\n   */\n  get variantValue() {\n    const value = this.value;\n\n    if (!value.value) {\n      if (!value.arrayType) {\n        throw new Error(`${this.nodeId} has no array type`);\n      }\n      value.value = decodeVariant(this._rawValue, value);\n    }\n\n    return value;\n  }\n\n}\n\n// Helpers\nexport function isDefinitionFile(path) {\n  return basename(path).match(/^\\..*\\.json$/);\n}\n\nconst containerFileRegexp = /^\\.((Object|Variable)(Type)?|Method|View|(Reference|Data)Type)\\.json$/;\n\nconst hierarchicalReferencesTypeNames = new Set([\n  'HasChild',\n  'Aggregates',\n  'HasComponent',\n  'HasOrderedComponent',\n  'HasHistoricalConfiguration',\n  'HasProperty',\n  'HasSubtype',\n  'HasEventSource',\n  'HasNotifier',\n  'Organizes',\n]);\n\nclass SourceBrowser {\n\n  constructor({ handleNode, readNodeFile }) {\n    this._queue = new PromiseQueue({\n      concurrency: 250,\n    });\n\n    this._nodeHandler = handleNode;\n    this._readNodeFile = readNodeFile;\n\n    this._pushed = new Set();\n    this._pushedPath = new Set();\n    this._dependingOn = new Map();\n  }\n\n  async browse(path, options = {}) {\n    // Queue error handling\n    let processError = null;\n    this._reject = err => {\n      if (processError) {\n        // Multiple errors occured. In most cases this means, that the server connection was closed\n        // after the first error.\n        Logger.debug('Additional error', err);\n        return;\n      }\n\n      processError = err;\n      this._queue.pause();\n      this._queue.clear();\n    };\n\n    // write initial path\n    this.processPath({ path, ...options });\n\n    return this._queue.onIdle()\n      .then(() => {\n        if (processError) {\n          throw processError;\n        }\n\n        if (this._dependingOn.size) {\n          throw new Error(`Some nodes are still waiting for dependencies\n  Missing nodes: ${Array.from(this._dependingOn.keys()).join(', ')}\n  - Pull these nodes or add them to the ignored ones`);\n        }\n      });\n  }\n\n  processPath(options) {\n    return this._queue.add(() => this._processPath(options).catch(this._reject));\n  }\n\n  readNode({ path, tree }) {\n    return this._processPath({\n      path,\n      tree,\n      push: false,\n    });\n  }\n\n  async _processPath({ path, parent, children, push = true, singleNode = false }) {\n    const s = await stat(path);\n\n    if (s.isDirectory()) {\n      let container;\n      const nextChildren = (await readdir(path))\n        .reduce((nodes, p) => {\n          const node = {\n            name: p,\n            path: join(path, p),\n            push,\n          };\n\n          if (p.match(containerFileRegexp)) {\n            container = node;\n\n            return nodes;\n          }\n\n          let parts;\n          const noProcessingNeeded = nodes.find(current => {\n            const n = current.name;\n            if (n === `.${p}.json`) { return true; } // Skip files with definitions already present\n\n            const [raw, rest] = parts || (parts = p.split('.inner'));\n\n            if (rest === '' && (n === raw || n === `.${raw}.json`)) { // Got an *.inner directory\n              // eslint-disable-next-line no-param-reassign\n              current.children = (current.children || []).concat(node);\n              return true;\n            }\n\n            return false;\n          });\n\n          return noProcessingNeeded ? nodes : nodes.concat(node);\n        }, []);\n\n      if (container) {\n        return this._processPath(Object.assign(container, { children: nextChildren, parent }));\n      } else if (singleNode) {\n        Logger.debug(`Pushing parent at ${path}`);\n        return this._processPath({ path: join(path, '../'), parent, children, push });\n      }\n\n      nextChildren.forEach(node => this.processPath(node));\n    } else if (s.isFile()) {\n      if (!isDefinitionFile(path)) {\n        // FIXME: Browse parent here for watch task / Variable source node\n        // (e.g. AGENT/DISPLAYS/Default.display/Default.js changed)\n\n        if (singleNode) {\n          Logger.debug(`Pushing parent at ${path}`);\n          return this._processPath({ path: join(path, '../'), parent, children, push, singleNode });\n        }\n\n        Logger.warn(`Not a definition file at ${path}`);\n        return Promise.resolve();\n      }\n\n      let name = basename(path, '.json').slice(1);\n      if (name.length >= 4 && NodeClass[name]) {\n        name = basename(dirname(path));\n      }\n\n      if (this._pushedPath.has(path)) {\n        // throw new Error('Double-handled node ' + path);\n        return Promise.resolve();\n      }\n\n      const dir = dirname(path);\n      const rel = join(dir, name);\n      const node = new FileNode({\n        name,\n        path, // FIXME: Remove, add as #relative\n        parent,\n        ...await readJSON(path),\n      });\n\n      node.push = push;\n      node.children = children;\n      node.relative = rel;\n      node.definitionPath = path;\n\n      return this._processNode(node);\n    }\n\n    return Promise.resolve();\n  }\n\n  _processNode(node) {\n    // Build dependency map\n    if (!node._waitingFor) {\n      const deps = Object.entries(node.references)\n        .filter(([key]) => key !== 'toParent' && !hierarchicalReferencesTypeNames.has(key))\n        .reduce((result, [, ids]) => result.concat(ids.filter(id => !(this._pushed.has(id)))), [])\n        .filter(id => {\n          if (typeof id === 'number') { // OPC-UA node\n            return false;\n          }\n\n          return !ProjectConfig.isExternal(id);\n        });\n      // eslint-disable-next-line no-param-reassign\n      node.waitingFor = new Set(deps);\n      deps.forEach(d => {\n        this._dependingOn.set(d, (this._dependingOn.get(d) || []).concat(node));\n      });\n    }\n\n    if (!node.waitingFor.size) {\n      return this._pushNode(node);\n    }\n\n    return Promise.resolve();\n  }\n\n  async _pushNode(node) {\n    // Read node value\n    if (node.nodeClass === NodeClass.Variable && this._readNodeFile(node)) {\n      // eslint-disable-next-line no-param-reassign\n      node._rawValue = await readFile(node.relative)\n        .catch(err => {\n          if (err.code === 'EISDIR') { return; }\n          throw new Error(`${err.code}: Error reading ${node.path}`);\n        });\n    }\n\n    return this._nodeHandler(node)\n      .then(() => {\n        // Handle children\n        if (node.children) {\n          node.children.forEach(child => {\n            // eslint-disable-next-line no-param-reassign\n            child.parent = node;\n            this.processPath(child);\n          });\n        }\n\n        // Handle dependencies\n        const depending = this._dependingOn.get(node.nodeId);\n        if (depending) {\n          depending.forEach(dep => {\n            dep.node.waitingFor.delete(node.nodeId);\n\n            if (!dep.node.waitingFor.size) {\n              // All dependencies resolved\n              return this._pushNode({\n                ...dep,\n                tree: {\n                  ...dep.tree,\n                  parent: node,\n                },\n              });\n            }\n\n            // Still waiting\n            return Logger.debug('Still waiting', dep.node.nodeId, Array.from(dep.node.waitingFor));\n          });\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        delete node.waitingFor;\n        this._dependingOn.delete(node.nodeId);\n        this._pushed.add(node.nodeId);\n\n        // Mark as pushed\n        this._pushedPath.add(node.definitionPath);\n\n        return node;\n      });\n  }\n\n}\n\nexport default function src(path, options = {}) {\n  const browser = new SourceBrowser(options);\n\n  return Object.assign(browser.browse(path, options), { browser });\n}\n"],"file":"src.js"}