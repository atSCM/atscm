{"version":3,"sources":["../../../src/lib/config/Atviseproject.js"],"names":["Atviseproject","host","port","opc","http","login","useTransformers","AlarmConfigTransformer","DisplayTransformer","ServerscriptTransformer","QuickDynamicTransformer","MappingTransformer","nodes","NodeId","nodesToWatch","EditorRelatedNodes","ServerRelatedNodes","AtscmRelatedNodes","ignoreNodes","inspect","vcs","preserveSortOrderNodes"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAIA;;AACA;;;;AATA;;AAWA;;;;AAIe,MAAMA,aAAN,CAAoB;AAEjC;;;;AAIA,aAAWC,IAAX,GAAkB;AAChB,WAAO,WAAP;AACD;AAED;;;;;;;;AAMA,aAAWC,IAAX,GAAkB;AAChB,WAAO;AACLC,MAAAA,GAAG,EAAE,IADA;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;AAED;;;;;;;;AAMA,aAAWC,KAAX,GAAmB;AACjB,WAAO,KAAP;AACD;AAED;;;;;;;AAKA,aAAWC,eAAX,GAA6B;AAC3B,WAAO,CACL,IAAIC,+BAAJ,EADK,EAEL,IAAIC,2BAAJ,EAFK,EAGL,IAAIC,0CAAJ,EAHK,EAIL,IAAIC,0CAAJ,EAJK,EAKL,IAAIC,gBAAJ,EALK,CAAP;AAOD;AAED;;;;;;;AAKA,aAAWC,KAAX,GAAmB;AACjB,WAAO,CACL,IAAIC,eAAJ,CAAW,OAAX,CADK,EAEL,IAAIA,eAAJ,CAAW,QAAX,CAFK,EAGL,IAAIA,eAAJ,CAAW,qBAAX,CAHK,EAIL,IAAIA,eAAJ,CAAW,uBAAX,CAJK,CAAP;AAMD;AAED;;;;;;;AAKA,aAAWC,YAAX,GAA0B;AACxB,WAAO,CACL,IAAID,eAAJ,CAAW,gBAAX,CADK,EAEL,IAAIA,eAAJ,CAAW,uCAAX,CAFK,CAAP;AAID;AAED;;;;;;AAIA,aAAWE,kBAAX,GAAgC;AAC9B,WAAO,CACL,IAAIF,eAAJ,CAAW,kCAAX,CADK,CAAP;AAGD;AAED;;;;;;;AAKA,aAAWG,kBAAX,GAAgC;AAC9B,WAAO,CACL,IAAIH,eAAJ,CAAW,0BAAX,CADK,EAEL,IAAIA,eAAJ,CAAW,yCAAX,CAFK,EAGL,IAAIA,eAAJ,CAAW,6BAAX,CAHK,EAIL,IAAIA,eAAJ,CAAW,2BAAX,CAJK,EAKL,IAAIA,eAAJ,CAAW,wBAAX,CALK,EAML,IAAIA,eAAJ,CAAW,yBAAX,CANK,EAOL,IAAIA,eAAJ,CAAW,wBAAX,CAPK,EAQL,IAAIA,eAAJ,CAAW,uBAAX,CARK,EASL,IAAIA,eAAJ,CAAW,0BAAX,CATK,CAAP;AAWD;AAED;;;;;;;AAKA,aAAWI,iBAAX,GAA+B;AAC7B,WAAO,CACL,IAAIJ,eAAJ,CAAW,2CAAX,CADK,CAAP;AAGD;AAED;;;;;;;;AAMA,aAAWK,WAAX,GAAyB;AACvB,WAAO,CACL,GAAG,KAAKH,kBADH,EAEL,GAAG,KAAKC,kBAFH,EAGL,GAAG,KAAKC,iBAHH,CAAP;AAKD;AAED;;;;;;;AAKA,SAAOE,OAAP,GAAiB;AACf,WAAO;AACLlB,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELC,MAAAA,IAAI,EAAE,KAAKA,IAFN;AAGLG,MAAAA,KAAK,EAAE,KAAKA,KAHP;AAILC,MAAAA,eAAe,EAAE,KAAKA,eAJjB;AAKLM,MAAAA,KAAK,EAAE,KAAKA,KALP;AAMLE,MAAAA,YAAY,EAAE,KAAKA,YANd;AAOLI,MAAAA,WAAW,EAAE,KAAKA;AAPb,KAAP;AASD;AAED;;;;;;;AAKA,aAAWE,GAAX,GAAiB;AACf,WAAO,KAAP;AACD;AAED;;;;;;;;AAMA,aAAWC,sBAAX,GAAoC;AAClC,WAAO,KAAP;AACD;;AAlKgC","sourcesContent":["/* eslint-disable no-useless-escape */\n\nimport NodeId from '../model/opcua/NodeId';\nimport DisplayTransformer from '../../transform/DisplayTransformer';\nimport {\n  ServerscriptTransformer,\n  QuickDynamicTransformer,\n} from '../../transform/ScriptTransformer.js';\nimport MappingTransformer from '../../transform/Mapping';\nimport AlarmConfigTransformer from '../../transform/AlarmConfigTransformer';\n\n/**\n * An *atscm* project's configuration.\n * @abstract\n */\nexport default class Atviseproject {\n\n  /**\n   * The atvise-server's host. Defaults to *localhost*.\n   * @type {string}\n   */\n  static get host() {\n    return 'localhost';\n  }\n\n  /**\n   * The atvise-server ports to use.\n   * @type {Object}\n   * @property {number} [opc=4840] The OPC-UA port the atvise-server runs on.\n   * @property {number} [http=80] The HTTP port the atvise-server can be reached at.\n   */\n  static get port() {\n    return {\n      opc: 4840,\n      http: 80,\n    };\n  }\n\n  /**\n   * The login to use. Return `false` if no login is required (default).\n   * @type {boolean|Object}\n   * @property {string} username The username to log in with.\n   * @property {string} password The password to log in with.\n   */\n  static get login() {\n    return false;\n  }\n\n  /**\n   * The transformers to use in this project. Returns a {@link DisplayTransformer}, a\n   * {@link ScriptTransformer} and a {@link NewlinesTransformer} by default.\n   * @type {Transformer[]}\n   */\n  static get useTransformers() {\n    return [\n      new AlarmConfigTransformer(),\n      new DisplayTransformer(),\n      new ServerscriptTransformer(),\n      new QuickDynamicTransformer(),\n      new MappingTransformer(),\n    ];\n  }\n\n  /**\n   * The atvise-server nodes that atscm should sync. Defaults to the nodes\n   * *AGENT*, *SYSTEM*, *ObjectTypes.PROJECT* and *VariableTypes.PROJECT*.\n   * @type {string[]|NodeId[]}\n   */\n  static get nodes() {\n    return [\n      new NodeId('AGENT'),\n      new NodeId('SYSTEM'),\n      new NodeId('ObjectTypes.PROJECT'),\n      new NodeId('VariableTypes.PROJECT'),\n    ];\n  }\n\n  /**\n   * The atvise-server nodes to watch in the corresponding tasks. Defaults to all nodes containing\n   * displays.\n   * @type {string[]|NodeId[]}\n   */\n  static get nodesToWatch() {\n    return [\n      new NodeId('AGENT.DISPLAYS'),\n      new NodeId('SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS'),\n    ];\n  }\n\n  /**\n   * An array of editor related node ids. They should be ignored in a atscm project.\n   * @type {NodeId[]}\n   */\n  static get EditorRelatedNodes() {\n    return [\n      new NodeId('SYSTEM\\.JOURNALS\\.ProjectHistory'),\n    ];\n  }\n\n  /**\n   * An array of server related node ids. They should be ignored in a atscm project\n   * as they are read-only.\n   * @type {NodeId[]}\n   */\n  static get ServerRelatedNodes() {\n    return [\n      new NodeId('AGENT\\.OPCUA\\.server_url'),\n      new NodeId('AGENT\\.WEBACCESS\\.https?[^\\.]+\\.(state)'),\n      new NodeId('SYSTEM\\.INFORMATION\\.LOGS\\.'),\n      new NodeId('AGENT\\.GENERATOR\\.METHODS'),\n      new NodeId('AGENT\\.MIRROR\\.METHODS'),\n      new NodeId('AGENT\\.HISTORY\\.METHODS'),\n      new NodeId('AGENT\\.SCRIPT\\.METHODS'),\n      new NodeId('AGENT\\.OPCUA\\.METHODS'),\n      new NodeId('AGENT\\.ALARMING\\.METHODS'),\n    ];\n  }\n\n  /**\n   * Server nodes atscm manages itself. These include the serverscripts used during pull/push for\n   * example.\n   * @type {NodeId[]}\n   */\n  static get AtscmRelatedNodes() {\n    return [\n      new NodeId('SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm'),\n    ];\n  }\n\n  /**\n   * These nodes (and their subnodes, if any) will be ignored by atscm. Defaults to\n   * {@link Atviseproject.EditorRelatedNodes} combined with\n   * {@link Atviseproject.ServerRelatedNodes}.\n   * @type {NodeId[]}\n   */\n  static get ignoreNodes() {\n    return [\n      ...this.EditorRelatedNodes,\n      ...this.ServerRelatedNodes,\n      ...this.AtscmRelatedNodes,\n    ];\n  }\n\n  /**\n   * Returns an object containing the properties to inspect.\n   * @see https://nodejs.org/api/util.html#util_util_inspect_object_options\n   * @return {Object} The object to inspect.\n   */\n  static inspect() {\n    return {\n      host: this.host,\n      port: this.port,\n      login: this.login,\n      useTransformers: this.useTransformers,\n      nodes: this.nodes,\n      nodesToWatch: this.nodesToWatch,\n      ignoreNodes: this.ignoreNodes,\n    };\n  }\n\n  /**\n   * The *version control system* to optimize tasks for.\n   * @type {'git' | 'svn'}\n   * @since 1.0.0\n   */\n  static get vcs() {\n    return 'git';\n  }\n\n  /**\n   * If atvise builder sort order nodes should be stored.\n   * @type {boolean}\n   * @since 1.0.0\n   * @deprecated Mapping source order nodes leads to inconsistent results in many cases.\n   */\n  static get preserveSortOrderNodes() {\n    return false;\n  }\n\n}\n"],"file":"Atviseproject.js"}