{"version":3,"sources":["../../../src/lib/config/Atviseproject.ts"],"names":["Atviseproject","host","port","opc","http","login","useTransformers","AlarmConfigTransformer","DisplayTransformer","ServerscriptTransformer","QuickDynamicTransformer","MappingTransformer","nodes","NodeId","nodesToWatch","EditorRelatedNodes","ServerRelatedNodes","AtscmRelatedNodes","ignoreNodes","inspect","vcs","preserveSortOrderNodes","timeout"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAIA;;AACA;;;;AATA;;AA4BA;;;;AAIe,MAAMA,aAAN,CAAoB;AACjC;;;AAGA,aAAWC,IAAX,GAA0B;AACxB,WAAO,WAAP;AACD;AAED;;;;;AAGA,aAAWC,IAAX,GAA6C;AAC3C,WAAO;AACLC,MAAAA,GAAG,EAAE,IADA;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;AAED;;;;;AAGA,aAAWC,KAAX,GAAgD;AAC9C,WAAO,KAAP;AACD;AAED;;;;;;AAIA,aAAWC,eAAX,GAA4C;AAC1C,WAAO,CACL,IAAIC,+BAAJ,EADK,EAEL,IAAIC,2BAAJ,EAFK,EAGL,IAAIC,0CAAJ,EAHK,EAIL,IAAIC,0CAAJ,EAJK,EAKL,IAAIC,gBAAJ,EALK,CAAP;AAOD;AAED;;;;;;AAIA,aAAWC,KAAX,GAAuC;AACrC,WAAO,CACL,IAAIC,eAAJ,CAAW,OAAX,CADK,EAEL,IAAIA,eAAJ,CAAW,QAAX,CAFK,EAGL,IAAIA,eAAJ,CAAW,qBAAX,CAHK,EAIL,IAAIA,eAAJ,CAAW,uBAAX,CAJK,CAAP;AAMD;AAED;;;;;;AAIA,aAAWC,YAAX,GAA8C;AAC5C,WAAO,CAAC,IAAID,eAAJ,CAAW,gBAAX,CAAD,EAA+B,IAAIA,eAAJ,CAAW,uCAAX,CAA/B,CAAP;AACD;AAED;;;;;AAGA,aAAWE,kBAAX,GAAoD;AAClD,WAAO,CAAC,IAAIF,eAAJ,CAAW,gCAAX,CAAD,CAAP;AACD;AAED;;;;;;AAIA,aAAWG,kBAAX,GAAoD;AAClD,WAAO,CACL,IAAIH,eAAJ,CAAW,wBAAX,CADK,EAEL,IAAIA,eAAJ,CAAW,qCAAX,CAFK,EAGL,IAAIA,eAAJ,CAAW,0BAAX,CAHK,EAIL,IAAIA,eAAJ,CAAW,yBAAX,CAJK,EAKL,IAAIA,eAAJ,CAAW,sBAAX,CALK,EAML,IAAIA,eAAJ,CAAW,uBAAX,CANK,EAOL,IAAIA,eAAJ,CAAW,sBAAX,CAPK,EAQL,IAAIA,eAAJ,CAAW,qBAAX,CARK,EASL,IAAIA,eAAJ,CAAW,wBAAX,CATK,CAAP;AAWD;AAED;;;;;;AAIA,aAAWI,iBAAX,GAAmD;AACjD,WAAO,CAAC,IAAIJ,eAAJ,CAAW,2CAAX,CAAD,CAAP;AACD;AAED;;;;;;;AAKA,aAAWK,WAAX,GAA6C;AAC3C,WAAO,CAAC,GAAG,KAAKH,kBAAT,EAA6B,GAAG,KAAKC,kBAArC,EAAyD,GAAG,KAAKC,iBAAjE,CAAP;AACD;AAED;;;;;;AAIA,SAAOE,OAAP,GAAiB;AACf,WAAO;AACLlB,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELC,MAAAA,IAAI,EAAE,KAAKA,IAFN;AAGLG,MAAAA,KAAK,EAAE,KAAKA,KAHP;AAILC,MAAAA,eAAe,EAAE,KAAKA,eAJjB;AAKLM,MAAAA,KAAK,EAAE,KAAKA,KALP;AAMLE,MAAAA,YAAY,EAAE,KAAKA,YANd;AAOLI,MAAAA,WAAW,EAAE,KAAKA;AAPb,KAAP;AASD;AAED;;;;;;AAIA,aAAWE,GAAX,GAAgC;AAC9B,WAAO,KAAP;AACD;AAED;;;;;;;AAKA,aAAWC,sBAAX,GAA6C;AAC3C,WAAO,KAAP;AACD;AAED;;;;;AAGA,aAAWC,OAAX,GAA6B;AAC3B,WAAO,KAAP;AACD;;AA5IgC","sourcesContent":["/* eslint-disable no-useless-escape */\n\nimport NodeId from '../model/opcua/NodeId';\nimport DisplayTransformer from '../../transform/DisplayTransformer';\nimport {\n  ServerscriptTransformer,\n  QuickDynamicTransformer,\n} from '../../transform/ScriptTransformer.js';\nimport MappingTransformer from '../../transform/Mapping';\nimport AlarmConfigTransformer from '../../transform/AlarmConfigTransformer';\nimport { Transformer } from '../..';\n\ninterface AtserverPortConfiguration {\n  /** The OPC-UA port the atvise-server runs on. */\n  opc: number;\n  /** The HTTP port the atvise-server can be reached at. */\n  http: number;\n}\n\ninterface AtserverCredentials {\n  /** The username to log in with. */\n  username: string;\n  /** The password to log in with. */\n  password: string;\n}\n\ntype NodesConfiguration = Array<string | NodeId>;\n\n/**\n * An *atscm* project's configuration.\n * @abstract\n */\nexport default class Atviseproject {\n  /**\n   * The atvise-server's host. Defaults to *localhost*.\n   */\n  static get host(): string {\n    return 'localhost';\n  }\n\n  /**\n   * The atvise-server ports to use.\n   */\n  static get port(): AtserverPortConfiguration {\n    return {\n      opc: 4840,\n      http: 80,\n    };\n  }\n\n  /**\n   * The login to use. Return `false` if no login is required (default).\n   */\n  static get login(): false | AtserverCredentials {\n    return false;\n  }\n\n  /**\n   * The transformers to use in this project. Returns a {@link DisplayTransformer}, a\n   * {@link ScriptTransformer} and a {@link NewlinesTransformer} by default.\n   */\n  static get useTransformers(): Transformer[] {\n    return [\n      new AlarmConfigTransformer(),\n      new DisplayTransformer(),\n      new ServerscriptTransformer(),\n      new QuickDynamicTransformer(),\n      new MappingTransformer() as any,\n    ];\n  }\n\n  /**\n   * The atvise-server nodes that atscm should sync. Defaults to the nodes *AGENT*, *SYSTEM*,\n   * *ObjectTypes.PROJECT* and *VariableTypes.PROJECT*.\n   */\n  static get nodes(): NodesConfiguration {\n    return [\n      new NodeId('AGENT'),\n      new NodeId('SYSTEM'),\n      new NodeId('ObjectTypes.PROJECT'),\n      new NodeId('VariableTypes.PROJECT'),\n    ];\n  }\n\n  /**\n   * The atvise-server nodes to watch in the corresponding tasks. Defaults to all nodes containing\n   * displays.\n   */\n  static get nodesToWatch(): NodesConfiguration {\n    return [new NodeId('AGENT.DISPLAYS'), new NodeId('SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS')];\n  }\n\n  /**\n   * An array of editor related node ids. They should be ignored in a atscm project.\n   */\n  static get EditorRelatedNodes(): NodesConfiguration {\n    return [new NodeId('SYSTEM.JOURNALS.ProjectHistory')];\n  }\n\n  /**\n   * An array of server related node ids. They should be ignored in a atscm project\n   * as they are read-only.\n   */\n  static get ServerRelatedNodes(): NodesConfiguration {\n    return [\n      new NodeId('AGENT.OPCUA.server_url'),\n      new NodeId('AGENT.WEBACCESS.https?[^.]+.(state)'),\n      new NodeId('SYSTEM.INFORMATION.LOGS.'),\n      new NodeId('AGENT.GENERATOR.METHODS'),\n      new NodeId('AGENT.MIRROR.METHODS'),\n      new NodeId('AGENT.HISTORY.METHODS'),\n      new NodeId('AGENT.SCRIPT.METHODS'),\n      new NodeId('AGENT.OPCUA.METHODS'),\n      new NodeId('AGENT.ALARMING.METHODS'),\n    ];\n  }\n\n  /**\n   * Server nodes atscm manages itself. These include the serverscripts used during pull/push for\n   * example.\n   */\n  static get AtscmRelatedNodes(): NodesConfiguration {\n    return [new NodeId('SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.atscm')];\n  }\n\n  /**\n   * These nodes (and their subnodes, if any) will be ignored by atscm. Defaults to\n   * {@link Atviseproject.EditorRelatedNodes} combined with\n   * {@link Atviseproject.ServerRelatedNodes}.\n   */\n  static get ignoreNodes(): NodesConfiguration {\n    return [...this.EditorRelatedNodes, ...this.ServerRelatedNodes, ...this.AtscmRelatedNodes];\n  }\n\n  /**\n   * Returns an object containing the properties to inspect.\n   * @see https://nodejs.org/api/util.html#util_util_inspect_object_options\n   */\n  static inspect() {\n    return {\n      host: this.host,\n      port: this.port,\n      login: this.login,\n      useTransformers: this.useTransformers,\n      nodes: this.nodes,\n      nodesToWatch: this.nodesToWatch,\n      ignoreNodes: this.ignoreNodes,\n    };\n  }\n\n  /**\n   * The *version control system* to optimize tasks for.\n   * @since 1.0.0\n   */\n  static get vcs(): 'git' | 'svn' {\n    return 'git';\n  }\n\n  /**\n   * If atvise builder sort order nodes should be stored.\n   * @since 1.0.0\n   * @deprecated Mapping source order nodes leads to inconsistent results in many cases.\n   */\n  static get preserveSortOrderNodes(): boolean {\n    return false;\n  }\n\n  /**\n   * The connection timeout, in milliseconds.\n   */\n  static get timeout(): number {\n    return 10000;\n  }\n}\n"],"file":"Atviseproject.js"}