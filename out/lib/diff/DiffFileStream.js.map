{"version":3,"sources":["../../../src/lib/diff/DiffFileStream.js"],"names":["DiffFileStream","constructor","options","fileType","isValidFileType","Error","itemType","processErrorMessage","file","nodeId","toString","processChunk","handleErrors","Good","done","push"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA;;;;AAIe,MAAMA,cAAN,+BAAyC;;AAEtD;;;;;AAKAC,cAAYC,UAAU,EAAtB,EAA0B;AACxB,UAAMA,OAAN;;AAEA;;;;AAIA,UAAMC,WAAWD,QAAQC,QAAzB;;AAEA,QAAI,CAAC,mBAASC,eAAT,CAAyBD,QAAzB,CAAL,EAAyC;AACvC,YAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACD,KAFD,MAEO;AACL,WAAKC,QAAL,GAAgBH,QAAhB;AACD;AACF;;AAED;;;;;AAKAI,sBAAoBC,IAApB,EAA0B;AACxB,WAAQ,6DAA4DA,KAAKC,MAAL,CAAYC,QAAZ,EAAuB,EAA3F;AACD;;AAED;;;;;;;AAOAC,eAAaH,IAAb,EAAmBI,YAAnB,EAAiC;AAC/BA,iBAAa,IAAb,EAAmB,uBAAYC,IAA/B,EAAqCC,QAAQ;AAC3C,WAAKC,IAAL,CAAU,uBAAaP,IAAb,EAAmB,KAAKF,QAAxB,CAAV;AACAQ;AACD,KAHD;AAID;AA5CqD;kBAAnCd,c","file":"DiffFileStream.js","sourcesContent":["import { StatusCodes } from 'node-opcua';\nimport QueueStream from '../stream/QueueStream';\nimport DiffFile from './DiffFile';\n\n/**\n * A stream checks if the given {@link NodeId}s exist on the atvise server or\n * on the filesystem, depending on the stream direction\n */\nexport default class DiffFileStream extends QueueStream {\n\n  /**\n   * Creates a new DiffStream based on the given stream direction an some options.\n   * @param {Object} The options to use.\n   * @param {DiffFile.fileType} [options.fileType] The diff file type to create.\n   */\n  constructor(options = {}) {\n    super(options);\n\n    /**\n     * The diff file type\n     * @type {Map<vinyl~path, DiffItem>}\n     */\n    const fileType = options.fileType;\n\n    if (!DiffFile.isValidFileType(fileType)) {\n      throw new Error('DiffFileStream#constructor: Invalid file type');\n    } else {\n      this.itemType = fileType;\n    }\n  }\n\n  /**\n   * Returns an error message specifically for the given mapping item.\n   * @param {AtviseFile} file The file to create the error message for\n   * @return {String} The specific error message.\n   */\n  processErrorMessage(file) {\n    return `DiffFileStream#processErrorMessage: Error processing item ${file.nodeId.toString()}`;\n  }\n\n  /**\n   * Creates {DiffFiles}'s for the given {AtviseFile}'s\n   * @param {DiffFile} file The file to process\n   * @param {function(err: Error, statusCode: node-opcua~StatusCodes, onSuccess: function)}\n   * handleErrors The error handler to call. See {@link QueueStream#processChunk} for details.\n   */\n\n  processChunk(file, handleErrors) {\n    handleErrors(null, StatusCodes.Good, done => {\n      this.push(new DiffFile(file, this.itemType));\n      done();\n    });\n  }\n}\n\n"]}