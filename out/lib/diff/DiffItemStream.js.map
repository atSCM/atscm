{"version":3,"sources":["../../../src/lib/diff/DiffItemStream.js"],"names":["DiffItemStream","constructor","itemsCache","processErrorMessage","file","toString","processChunk","handleErrors","Good","done","path","diffItem","addFile","isComplete","push"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA;;;;AAIe,MAAMA,cAAN,+BAAyC;;AAEtD;;;;AAIAC,gBAAc;AACZ;;AAEA;;;;AAIA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAED;;;;;AAKAC,sBAAoBC,IAApB,EAA0B;AACxB,WAAQ,yDAAwDA,KAAKC,QAAL,EAAgB,EAAhF;AACD;;AAED;;;;;;;AAOAC,eAAaF,IAAb,EAAmBG,YAAnB,EAAiC;AAC/BA,iBAAa,IAAb,EAAmB,uBAAYC,IAA/B,EAAqCC,QAAQ;AAC3C,YAAMC,OAAON,KAAKM,IAAlB;AACA,YAAMR,aAAa,KAAKA,UAAxB;;AAEA,UAAI,OAAOA,WAAWQ,IAAX,CAAP,KAA4B,WAAhC,EAA6C;AAC3C,cAAMC,WAAWT,WAAWQ,IAAX,CAAjB;;AAEAC,iBAASC,OAAT,CAAiBR,IAAjB;;AAEA,YAAIO,SAASE,UAAb,EAAyB;AACvB,eAAKC,IAAL,CAAUH,QAAV;AACA,iBAAOT,WAAWQ,IAAX,CAAP;AACD;AACF,OATD,MASO;AACLR,mBAAWQ,IAAX,IAAmB,uBAAaN,IAAb,CAAnB;AACD;;AAEDK;AACD,KAlBD;AAmBD;AApDqD;kBAAnCT,c","file":"DiffItemStream.js","sourcesContent":["import { StatusCodes } from 'node-opcua';\nimport QueueStream from '../stream/QueueStream';\nimport DiffItem from './DiffItem';\n\n/**\n * A stream checks if the given {@link NodeId}s exist on the atvise server\n * or on the filesystem, depending on the stream direction\n */\nexport default class DiffItemStream extends QueueStream {\n\n  /**\n   * Creates a new DiffItemStream.\n   * @param {Object} The options to use.\n   */\n  constructor() {\n    super();\n\n    /**\n     * The diff item cache\n     * @type {Map<vinyl~path, DiffItem>}\n     */\n    this.itemsCache = {};\n  }\n\n  /**\n   * Returns an error message specifically for the given mapping item.\n   * @param {DiffFile} file The diff file to create the error message for.\n   * @return {String} The specific error message.\n   */\n  processErrorMessage(file) {\n    return `DiffStream#processErrorMessage: Error processing item ${file.toString()}`;\n  }\n\n  /**\n   * Combines the given DiffFiles to DiffItems.\n   * @param {DiffFile} file The file to process\n   * @param {function(err: Error, statusCode: node-opcua~StatusCodes, onSuccess: function)}\n   * handleErrors The error handler to call. See {@link QueueStream#processChunk} for details.\n   */\n\n  processChunk(file, handleErrors) {\n    handleErrors(null, StatusCodes.Good, done => {\n      const path = file.path;\n      const itemsCache = this.itemsCache;\n\n      if (typeof itemsCache[path] !== 'undefined') {\n        const diffItem = itemsCache[path];\n\n        diffItem.addFile(file);\n\n        if (diffItem.isComplete) {\n          this.push(diffItem);\n          delete itemsCache[path];\n        }\n      } else {\n        itemsCache[path] = new DiffItem(file);\n      }\n\n      done();\n    });\n  }\n}\n\n"]}