{"version":3,"sources":["../../../src/lib/xml/serialize.js"],"names":["XMLWriter","require","xml","NodeSet","Tag","XML_TYPE","writeXMLAtomicType","xw","node","type","getXMLType","COMMENT","writeComment","toString","CDATA","writeCData","TEXT","text","Error","processNodeSet","nset","idx","writeAttr","attr","writeAttribute","eq","startElement","name","Object","keys","attrs","sort","forEach","endElement","serialize","options","pretty","header","startDocument","module","exports"],"mappings":";;AAAA;AACA,IAAIA,YAAYC,QAAQ,YAAR,CAAhB;AAAA,IACIC,MAAMD,QAAQ,OAAR,CADV;AAAA,IAEIE,UAAUD,IAAIC,OAFlB;AAAA,IAGIC,MAAMF,IAAIE,GAHd;AAAA,IAIIC,WAAWH,IAAIG,QAJnB;;AAMA;;;;AAIA,SAASC,kBAAT,CAA4BC,EAA5B,EAAgCC,IAAhC,EAAsC;AAClC,QAAIC,OAAOP,IAAIQ,UAAJ,CAAeF,IAAf,CAAX;;AAEA,YAAQC,IAAR;AACA,aAAKJ,SAASM,OAAd;AACIJ,eAAGK,YAAH,CAAgBJ,KAAKK,QAAL,EAAhB;AACA;AACJ,aAAKR,SAASS,KAAd;AACIP,eAAGQ,UAAH,CAAcP,KAAKK,QAAL,EAAd;AACA;AACJ,aAAKR,SAASW,IAAd;AACIT,eAAGU,IAAH,CAAQT,IAAR;AACA;AACJ;AACI,kBAAM,IAAIU,KAAJ,CAAU,gDAAgDT,IAAhD,GAAuD,IAAjE,CAAN;AAXJ;AAaH;;AAED;;;;;AAKA,SAASU,cAAT,CAAwBZ,EAAxB,EAA4Ba,IAA5B,EAAkC;AAC9B,QAAIC,GAAJ,EAASb,IAAT;;AAEA,aAASc,SAAT,CAAmBC,IAAnB,EAAyB;AACrBhB,WAAGiB,cAAH,CAAkBD,IAAlB,EAAwBf,KAAKe,IAAL,CAAUA,IAAV,CAAxB;AACH;;AAED,SAAKF,MAAM,CAAN,EAASb,OAAOY,KAAKK,EAAL,CAAQ,CAAR,CAArB,EAAiCjB,SAAS,IAA1C,EAAgDa,OAAOb,OAAOY,KAAKK,EAAL,CAAQJ,GAAR,CAA9D,EAA4E;AACxE,YAAIb,gBAAgBJ,GAApB,EAAyB;AACrBG,eAAGmB,YAAH,CAAgBlB,KAAKmB,IAArB;AACAC,mBACKC,IADL,CACUrB,KAAKsB,KADf,EAEKC,IAFL,GAEY;AAFZ,aAGKC,OAHL,CAGaV,SAHb;AAIAH,2BAAeZ,EAAf,EAAmBC,IAAnB;AACAD,eAAG0B,UAAH;AACH,SARD,MAQO;AACH3B,+BAAmBC,EAAnB,EAAuBC,IAAvB;AACH;AACJ;AACJ;;AAED;;;;AAIA,SAAS0B,SAAT,CAAmBd,IAAnB,EAAyBe,OAAzB,EAAkC;AAC9B,QAAK,EAAGf,gBAAgBjB,OAAnB,CAAL,EAAkC;AAC9B,cAAM,IAAIe,KAAJ,CAAW,iCAAX,CAAN;AACH;;AAED,QAAI,OAAOiB,OAAP,KAAmB,QAAnB,IAA+BA,YAAY,IAA/C,EAAqD;AACjDA,kBAAU,EAAV;AACH;;AAED,QAAI5B,KAAK,IAAIP,SAAJ,CAAcmC,QAAQC,MAAtB,CAAT;;AAEA,QAAID,QAAQE,MAAR,KAAmB,KAAvB,EAA8B;AAC1B9B,WAAG+B,aAAH;AACH;;AAEDnB,mBAAeZ,EAAf,EAAmBa,IAAnB;;AAEA,WAAOb,GAAGM,QAAH,EAAP;AACH;;AAED0B,OAAOC,OAAP,GAAiB;AACbN,eAAYA;AADC,CAAjB;AAGA","file":"serialize.js","sourcesContent":["/*eslint-disable */\nvar XMLWriter = require('xml-writer'),\n    xml = require('./xml'),\n    NodeSet = xml.NodeSet,\n    Tag = xml.Tag,\n    XML_TYPE = xml.XML_TYPE;\n\n/**\n * @param {XMLWriter} xw\n * @param {Comment|CData|String} node\n */\nfunction writeXMLAtomicType(xw, node) {\n    var type = xml.getXMLType(node);\n\n    switch (type) {\n    case XML_TYPE.COMMENT:\n        xw.writeComment(node.toString());\n        break;\n    case XML_TYPE.CDATA:\n        xw.writeCData(node.toString());\n        break;\n    case XML_TYPE.TEXT:\n        xw.text(node);\n        break;\n    default:\n        throw new Error('Can not perform atomic write for XML type \"' + type + '\".');\n    }\n}\n\n/**\n * @param {XMLWriter} xw\n * @param {NodeSet} nset\n * @private\n */\nfunction processNodeSet(xw, nset) {\n    var idx, node;\n\n    function writeAttr(attr) {\n        xw.writeAttribute(attr, node.attr(attr));\n    }\n\n    for (idx = 0, node = nset.eq(0); node !== null; idx++, node = nset.eq(idx)) {\n        if (node instanceof Tag) {\n            xw.startElement(node.name);\n            Object\n                .keys(node.attrs)\n                .sort() // sort attributes when serialized\n                .forEach(writeAttr);\n            processNodeSet(xw, node);\n            xw.endElement();\n        } else {\n            writeXMLAtomicType(xw, node);\n        }\n    }\n}\n\n/**\n * @param {NodeSet} nset\n * @param {Object} options\n */\nfunction serialize(nset, options) {\n    if ( ! (nset instanceof NodeSet)) {\n        throw new Error( 'Only NodeSet can be serialized.');\n    }\n\n    if (typeof options !== 'object' || options === null) {\n        options = {};\n    }\n\n    var xw = new XMLWriter(options.pretty);\n\n    if (options.header !== false) {\n        xw.startDocument();\n    }\n\n    processNodeSet(xw, nset);\n\n    return xw.toString();\n}\n\nmodule.exports = {\n    serialize : serialize\n};\n/*eslint-enable */\n"]}