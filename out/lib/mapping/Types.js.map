{"version":3,"sources":["../../../src/lib/mapping/Types.js"],"names":["Type","constructor","identifier","dataType","fileExtensionOrKeep","undefined","fileExtension","keepExtension","AtviseType","nodeIdValue","typeDefinition","CustomResourceType","name","AtviseResourceType","ByteString","AtviseTypes","String","XmlElement"],"mappings":"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","file":"Types.js","sourcesContent":["import { DataType } from 'node-opcua';\nimport NodeId from '../ua/NodeId';\n\nclass Type {\n  /**\n   * Creates a new type.\n   * @param {String} identifier Atscm's identifier for the new type.\n   * @param {node-opcua~DataType} dataType The type's parent OPC-UA type.\n   * @param {String|Boolean} [fileExtensionOrKeep] The file extension to use when storing or `true`\n   * or `false` indicating if the extension should be kept.\n   * @abstract\n   */\n  constructor(identifier, dataType, fileExtensionOrKeep) {\n    /**\n     * Atscm's identifier for the type.\n     * @type {String}\n     */\n    this.identifier = identifier;\n\n    /**\n     * The type's parent OPC-UA type.\n     * @type {node-opcua~DataType}\n     */\n    this.dataType = dataType;\n\n\n    if (fileExtensionOrKeep !== undefined) {\n      if (typeof fileExtensionOrKeep === 'string') {\n        /**\n         * The file extension to use when storing.\n         * @type {String}\n         */\n        this.fileExtension = fileExtensionOrKeep;\n      } else {\n        /**\n         * If the extension should be kept when storing.\n         * @type {Boolean}\n         */\n        this.keepExtension = fileExtensionOrKeep;\n      }\n    }\n  }\n}\n\nclass AtviseType extends Type {\n  /**\n   * Creates a new atvise type.\n   * @param {String} nodeIdValue The type's OPC-UA node id value.\n   * @param {String} identifier Atscm's identifier for the new type.\n   * @param {node-opcua~DataType} dataType The type's parent OPC-UA type.\n   * @param {String|Boolean} [fileExtensionOrKeep] The file extension to use when storing or `true`\n   * or `false` indicating if the extension should be kept.\n   */\n  constructor(nodeIdValue, identifier, dataType, fileExtensionOrKeep) {\n    super(identifier, dataType, fileExtensionOrKeep);\n    this.typeDefinition = new NodeId(`VariableTypes.ATVISE.${nodeIdValue}`);\n  }\n}\n\nclass CustomResourceType extends Type {\n  /**\n   * Creates a new custom resource type.\n   * @param {String} name The type's name.\n   * @param {String} identifier Atscm's identifier for the new type.\n   * @param {node-opcua~DataType} dataType The type's parent OPC-UA type.\n   * @param {String|Boolean} [fileExtensionOrKeep] The file extension to use when storing or `true`\n   * or `false` indicating if the extension should be kept.\n   */\n  constructor(name, identifier, dataType, fileExtensionOrKeep) {\n    super(identifier, dataType, fileExtensionOrKeep);\n    this.typeDefinition = new NodeId(`Custom.${name}`);\n  }\n}\n\n/**\n * An atvise-related resource type.\n */\nclass AtviseResourceType extends AtviseType {\n  /**\n   * Creates a new atvise resource type.\n   * @param {string} name The type's name.\n   * @param {string} identifier Atscm's identifier for the new type.\n   */\n  constructor(name, identifier) {\n    super(`Resource.${name}`, identifier, DataType.ByteString, true);\n  }\n}\n\n/**\n * The atvise types to handle. **Ordering matters:** The {@link MappingTransformer} takes the first\n * match, therefore **plain types should always come before resource types!**\n * @type {AtviseType[]}\n */\nconst AtviseTypes = [\n  new CustomResourceType('BaseTypeDefinition', 'basetypedef', DataType.String, 'json'),\n  new CustomResourceType('InstanceTypeDefinition', 'instancetypedef', DataType.String, 'json'),\n  new CustomResourceType('AtvReferenceConfig', 'references', DataType.String, 'json'),\n  new AtviseType('HtmlHelp', 'help', DataType.ByteString, 'html'),\n  new AtviseType('QuickDynamic', 'qd', DataType.XmlElement),\n  new AtviseType('ScriptCode', 'script', DataType.XmlElement),\n  new AtviseType('Display', 'display', DataType.XmlElement),\n  new AtviseType('TranslationTable', 'locs', DataType.XmlElement),\n  new AtviseResourceType('Pdf', 'pdf'),\n  new AtviseResourceType('Html', 'html'),\n  new AtviseResourceType('Javascript', 'js'),\n  new AtviseResourceType('Wave', 'wav'),\n  new AtviseResourceType('Gif', 'gif'),\n  new AtviseResourceType('Png', 'png'),\n  new AtviseResourceType('Aac', 'm4a'),\n  new AtviseResourceType('Ogg', 'ogg'),\n  new AtviseResourceType('Icon', 'ico'),\n  new AtviseResourceType('Css', 'css'),\n  new AtviseResourceType('Svg', 'svg'),\n  new AtviseResourceType('Jpeg', 'jpg'),\n  new AtviseResourceType('OctetStream', '*'),\n];\n\nexport default AtviseTypes;\n"]}