{"version":3,"sources":["../../../src/lib/mapping/InstanceTypeDefinitionItem.js"],"names":["InstanceTypeDefinitionConfigResourceId","InstanceNodeClasses","ObjectType","Object","VariableType","Variable","InstanceTypeDefinitionItem","constructor","nodeId","references","ReferenceDescription","Error","createRefConfig","ref","refNodeId","toString","nodeClass","$nodeClass"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;AAIA,MAAMA,yCAAyC,qBAAW,+BAAX,CAA/C;;AAEA;;;;AAIA,MAAMC,sBAAsB;AAC1B,GAAC,qBAAUC,UAAX,GAAwB,qBAAUC,MADR;AAE1B,GAAC,qBAAUC,YAAX,GAA0B,qBAAUC;AAFV,CAA5B;;AAMA;;;;;AAKe,MAAMC,0BAAN,yCAA+D;;AAE5E;;;;;;AAMAC,cAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAC9B,QAAI,CAAC,0BAAUD,MAAV,mBAAD,IAA8B,CAAC,0BAAUC,UAAV,EAAsB,0BAAcC,oBAApC,CAAnC,EAA8F;AAC5F,YAAM,IAAIC,KAAJ,CAAU,wEAAV,CAAN;AACD;;AAED,UAAMH,MAAN,EAAcC,UAAd,EAA0BT,sCAA1B;AACD;;AAED;;;;;;AAMAY,kBAAgBC,GAAhB,EAAqBL,MAArB,EAA6B;AAAE;AAC7B,WAAO;AACLM,iBAAWD,IAAIL,MAAJ,CAAWO,QAAX,EADN;AAELC,iBAAWf,oBAAoBY,IAAII,UAAxB;AAFN,KAAP;AAID;AA3B2E;kBAAzDX,0B","file":"InstanceTypeDefinitionItem.js","sourcesContent":["import { NodeClass, browse_service as BrowseService } from 'node-opcua';\nimport checkType from '../../util/validation';\nimport NodeId from '../ua/NodeId';\nimport InstanceReferenceItem from './InstanceReferenceItem';\n\n/**\n * Custom Atvise File Type for instance type definitions\n * @type {node-opcua~NodeId}\n */\nconst InstanceTypeDefinitionConfigResourceId = new NodeId('Custom.InstanceTypeDefinition');\n\n/**\n * Map to translate type node classes to the corresponding instance node classes\n * @type {Map<node-opcua~NodeClass, node-opcua~NodeClass>}\n */\nconst InstanceNodeClasses = {\n  [NodeClass.ObjectType]: NodeClass.Object,\n  [NodeClass.VariableType]: NodeClass.Variable,\n};\n\n\n/**\n * Contains a the node configuration of an atvise node including the type definition\n * and references\n */\n\nexport default class InstanceTypeDefinitionItem extends InstanceReferenceItem {\n\n  /**\n   * Creates a new InstanceTypeDefinitionItem.\n   * @param {node-opcua~NodeId} nodeId The browsed nodeId.\n   * @param {node-opcua~ReferenceDescription} reference The{@link node-opcua~ReferenceDescription}\n   * to create the type definition item for\n   */\n  constructor(nodeId, references) {\n    if (!checkType(nodeId, NodeId) || !checkType(references, BrowseService.ReferenceDescription)) {\n      throw new Error('InstanceTypeDefinitionItem#constructor: Can not parse given arguments!');\n    }\n\n    super(nodeId, references, InstanceTypeDefinitionConfigResourceId);\n  }\n\n  /**\n   * Returns a configuration object for the given {node-opcua~ReferenceDescription}.\n   * @param {node-opcua~ReferenceDescription} ref The reference description to process\n   * @param {NodeId} nodeId browsed nodeId\n   * @return {Object} The configuration object for the given reference\n   */\n  createRefConfig(ref, nodeId) { // eslint-disable-line no-unused-vars\n    return {\n      refNodeId: ref.nodeId.toString(),\n      nodeClass: InstanceNodeClasses[ref.$nodeClass],\n    };\n  }\n}\n"]}