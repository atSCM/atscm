{"version":3,"sources":["../../../src/lib/helpers/Object.js"],"names":["reverse","pick","obj","Object","keys","reduce","result","key","assign","properties","props"],"mappings":";;;;;QAKgBA,O,GAAAA,O;QAaAC,I,GAAAA,I;AAlBhB;;;;;AAKO,SAASD,OAAT,CAAiBE,GAAjB,EAAsB;AAC3B,SAAOC,OAAOC,IAAP,CAAYF,GAAZ,EACJG,MADI,CACG,CAACC,MAAD,EAASC,GAAT,KAAiBJ,OAAOK,MAAP,CAAcF,MAAd,EAAsB;AAC7C,KAACJ,IAAIK,GAAJ,CAAD,GAAYA;AADiC,GAAtB,CADpB,EAGD,EAHC,CAAP;AAID;;AAED;;;;;;AAMO,SAASN,IAAT,CAAcC,GAAd,EAAmBO,UAAnB,EAA+B;AACpC,SAAOA,WACJJ,MADI,CACG,CAACK,KAAD,EAAQH,GAAR,KAAgBJ,OAAOK,MAAP,CAAcE,KAAd,EAAqB,EAAE,CAACH,GAAD,GAAOL,IAAIK,GAAJ,CAAT,EAArB,CADnB,EAC8D,EAD9D,CAAP;AAED","file":"Object.js","sourcesContent":["/**\n * Switches keys and values in an object. E.G.: { \"a\": 1 } becomes { 1: \"a\" }.\n * @param {Object} obj The object to reverse.\n * @return {Object} The reversed object.\n */\nexport function reverse(obj) {\n  return Object.keys(obj)\n    .reduce((result, key) => Object.assign(result, {\n      [obj[key]]: key,\n    }), {});\n}\n\n/**\n * Picks some properties from an object and returns a new object containing these.\n * @param {Object} obj The object to pick from.\n * @param {Array<string>} properties Names of the properties to pick.\n * @return {Object} The resulting object.\n */\nexport function pick(obj, properties) {\n  return properties\n    .reduce((props, key) => Object.assign(props, { [key]: obj[key] }), {});\n}\n"]}