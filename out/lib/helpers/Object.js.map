{"version":3,"sources":["../../../src/lib/helpers/Object.js"],"names":["reverse","obj","Object","keys","reduce","result","key","assign","pick","properties","props"],"mappings":";;;;;;;;AAAA;;;;;AAKO,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CACL,CAACC,MAAD,EAASC,GAAT,KACEJ,MAAM,CAACK,MAAP,CAAcF,MAAd,EAAsB;AACpB,KAACJ,GAAG,CAACK,GAAD,CAAJ,GAAYA;AADQ,GAAtB,CAFG,EAKL,EALK,CAAP;AAOD;AAED;;;;;;;;AAMO,SAASE,IAAT,CAAcP,GAAd,EAAmBQ,UAAnB,EAA+B;AACpC,SAAOA,UAAU,CAACL,MAAX,CAAkB,CAACM,KAAD,EAAQJ,GAAR,KAAgBJ,MAAM,CAACK,MAAP,CAAcG,KAAd,EAAqB;AAAE,KAACJ,GAAD,GAAOL,GAAG,CAACK,GAAD;AAAZ,GAArB,CAAlC,EAA6E,EAA7E,CAAP;AACD","sourcesContent":["/**\n * Switches keys and values in an object. E.G.: { \"a\": 1 } becomes { 1: \"a\" }.\n * @param {Object} obj The object to reverse.\n * @return {Object} The reversed object.\n */\nexport function reverse(obj) {\n  return Object.keys(obj).reduce(\n    (result, key) =>\n      Object.assign(result, {\n        [obj[key]]: key,\n      }),\n    {}\n  );\n}\n\n/**\n * Picks some properties from an object and returns a new object containing these.\n * @param {Object} obj The object to pick from.\n * @param {Array<string>} properties Names of the properties to pick.\n * @return {Object} The resulting object.\n */\nexport function pick(obj, properties) {\n  return properties.reduce((props, key) => Object.assign(props, { [key]: obj[key] }), {});\n}\n"],"file":"Object.js"}