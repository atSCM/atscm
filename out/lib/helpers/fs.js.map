{"version":3,"sources":["../../../src/lib/helpers/fs.ts"],"names":["updateFile","path","update","encoding","contents","updated","updateJson","indent","current","JSON","parse","stringify"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAIO,eAAeA,UAAf,CAA0BC,IAA1B,EAAwCC,MAAxC,EAA0DC,QAAQ,GAAG,MAArE,EAA4F;AACjG,QAAMC,QAAQ,GAAG,MAAM,uBAASH,IAAT,EAAeE,QAAf,CAAvB;AACA,QAAME,OAAO,GAAG,MAAMH,MAAM,CAACE,QAAD,CAA5B;AAEA,SAAO,wBAAUH,IAAV,EAAgBI,OAAhB,CAAP;AACD;;AAEM,eAAeC,UAAf,CAAkCL,IAAlC,EAAgDC,MAAhD,EAAoF;AACzF,SAAOF,UAAU,CAACC,IAAD,EAAO,MAAMG,QAAN,IAAkB;AACxC,UAAMG,MAAM,GAAG,2BAAaH,QAAb,EAAuBG,MAAvB,IAAiC,IAAhD;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAX,CAAhB;AAEA,UAAMC,OAAO,GAAG,MAAMH,MAAM,CAACM,OAAD,CAA5B;AAEA,WAAOC,IAAI,CAACE,SAAL,CAAeN,OAAf,EAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACD,GAPgB,CAAjB;AAQD","sourcesContent":["import { readFile, writeFile } from 'fs-extra';\nimport detectIndent from 'detect-indent';\n\ntype UpdateFn<T = string> = (current: T) => T | Promise<T>;\n\nexport async function updateFile(path: string, update: UpdateFn, encoding = 'utf8'): Promise<void> {\n  const contents = await readFile(path, encoding);\n  const updated = await update(contents);\n\n  return writeFile(path, updated);\n}\n\nexport async function updateJson<T = {}>(path: string, update: UpdateFn<T>): Promise<void> {\n  return updateFile(path, async contents => {\n    const indent = detectIndent(contents).indent || '  ';\n    const current = JSON.parse(contents) as T;\n\n    const updated = await update(current);\n\n    return JSON.stringify(updated, null, indent);\n  });\n}\n"],"file":"fs.js"}