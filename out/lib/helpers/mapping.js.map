{"version":3,"sources":["../../../src/lib/helpers/mapping.js"],"names":["sortReferences","references","Object","keys","sort","reduce","sorted","key","assign","Array","isArray"],"mappings":";;;;;QAMgBA,c,GAAAA,c;AANhB;;AAEA;;;;AAIO,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACzC,SAAOC,OAAOC,IAAP,CAAYF,UAAZ,EACJG,IADI,GAEJC,MAFI,CAEG,CAACC,MAAD,EAASC,GAAT,KAAiBL,OAAOM,MAAP,CAAcF,MAAd,EAAsB;AAC7C,KAACC,GAAD,GAAOE,MAAMC,OAAN,CAAcT,WAAWM,GAAX,CAAd,IACLN,WAAWM,GAAX,EAAgBH,IAAhB,EADK,GAELH,WAAWM,GAAX;AAH2C,GAAtB,CAFpB,EAMD,EANC,CAAP;AAOD","file":"mapping.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n/**\n * Sorts the given references before they are persisted to disk.\n * @param {Object} references The references to be sorted.\n */\nexport function sortReferences(references) {\n  return Object.keys(references)\n    .sort()\n    .reduce((sorted, key) => Object.assign(sorted, {\n      [key]: Array.isArray(references[key]) ?\n        references[key].sort() :\n        references[key],\n    }), {});\n}\n"]}