{"version":3,"sources":["../../src/hooks/check-serverscripts.ts"],"names":["checkServerscripts","log","debug","required","dependencies","version","versionNode","value","release","split","valid","Error","error","Object","assign","originalError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGe,eAAeA,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAAuE;AACpFA,EAAAA,GAAG,CAACC,KAAJ,CAAU,kCAAV;AAEA,QAAMC,QAAQ,GAAGC,sBAAa,uBAAb,CAAjB;AACA,MAAIC,OAAJ;;AAEA,MAAI;AACFA,IAAAA,OAAO,GAAG,CAAC,MAAM,mBAASC,oBAAT,CAAP,EAA8BC,KAAxC;AAEA,UAAM,CAACC,OAAD,IAAYH,OAAO,CAACI,KAAR,CAAc,OAAd,CAAlB;AACA,UAAMC,KAAK,GAAG,uBAAaF,OAAb,EAAsBL,QAAtB,CAAd;AAEA,QAAI,CAACO,KAAL,EAAY,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AAEZV,IAAAA,GAAG,CAACC,KAAJ,CAAW,iBAAgBG,OAAQ,eAAcF,QAAS,YAA1D;AACD,GATD,CASE,OAAOS,KAAP,EAAc;AACd,UAAMC,MAAM,CAACC,MAAP,CACJ,IAAIH,KAAJ,CAAW,kCAAiCN,OAAO,IAAI,eAAgB,KAAIF,QAAS;4CAApF,CADI,EAGJ;AAAEY,MAAAA,aAAa,EAAEH;AAAjB,KAHI,CAAN;AAKD;AACF","sourcesContent":["import { satisfies as validVersion } from 'semver';\nimport { readNode } from '../api';\nimport { versionNode } from '../lib/server/scripts/version';\nimport { dependencies } from '../../package.json';\nimport { HookContext } from './hooks';\n\nexport default async function checkServerscripts({ log }: HookContext): Promise<void> {\n  log.debug('Checking installed serverscripts');\n\n  const required = dependencies['@atscm/server-scripts'];\n  let version;\n\n  try {\n    version = (await readNode(versionNode)).value;\n\n    const [release] = version.split('-beta');\n    const valid = validVersion(release, required);\n\n    if (!valid) throw new Error('Invalid version');\n\n    log.debug(`Serverscripts ${version} installed (${required} required)`);\n  } catch (error) {\n    throw Object.assign(\n      new Error(`Invalid server script version: ${version || 'not installed'} (${required} required)\n- Please run 'atscm import' again to update`),\n      { originalError: error }\n    );\n  }\n}\n"],"file":"check-serverscripts.js"}