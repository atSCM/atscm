{"version":3,"sources":["../../src/util/cleanup.js"],"names":["cleanup","exitCode","signal","uninstall","readline","clearLine","process","stdout","cursorTo","Logger","warn","debug","Session","open","length","removeAllListeners","on","closeOpen","then","kill","pid","catch","e","error","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;;;AAOe,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8C;AAC3DA,EAAAA,SAAS;;AAET,MAAID,MAAM,KAAK,QAAf,EAAyB;AACvBE,sBAASC,SAAT,CAAmBC,OAAO,CAACC,MAA3B;;AACAH,sBAASI,QAAT,CAAkBF,OAAO,CAACC,MAA1B,EAAkC,CAAlC;;AACAE,qBAAOC,IAAP,CAAY,QAAZ;AACD;;AAEDD,mBAAOE,KAAP,CAAa,oBAAb;;AAEA,MAAIC,iBAAQC,IAAR,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;AAC3BL,qBAAOE,KAAP,CAAa,WAAb,EAA0BC,iBAAQC,IAAR,CAAaC,MAAvC,EAA+C,kBAA/C,EAD2B,CAG3B;;;AACAL,qBAAOM,kBAAP,CAA0B,OAA1B;;AACAN,qBAAOO,EAAP,CAAU,OAAV,EAAmB,MAAM,CAAE,CAA3B;;AAEAJ,qBAAQK,SAAR,GACGC,IADH,CACQ,MAAMZ,OAAO,CAACa,IAAR,CAAab,OAAO,CAACc,GAArB,EAA0BlB,MAA1B,CADd,EAEGmB,KAFH,CAESC,CAAC,IAAI;AACVb,uBAAOc,KAAP,CAAa,kBAAb,EAAiCD,CAAC,CAACE,OAAnC;;AACAlB,MAAAA,OAAO,CAACa,IAAR,CAAab,OAAO,CAACc,GAArB,EAA0BlB,MAA1B;AACD,KALH;;AAOA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import readline from 'readline';\nimport Logger from 'gulplog';\nimport Session from '../lib/server/Session';\n\n/**\n * Cleans up after the app ended with the specified code or signal.\n * @param {?Number} exitCode The exit code received.\n * @param {?string} signal The signal that triggered the exit.\n * @param {function()} uninstall The uninstall script to run.\n * @return {boolean} `true` if the process should continue exiting.\n */\nexport default function cleanup(exitCode, signal, uninstall) {\n  uninstall();\n\n  if (signal === 'SIGINT') {\n    readline.clearLine(process.stdout);\n    readline.cursorTo(process.stdout, 0);\n    Logger.warn('Ctrl-C');\n  }\n\n  Logger.debug('Running cleanup...');\n\n  if (Session.open.length > 0) {\n    Logger.debug('  Closing', Session.open.length, 'open sessions...');\n\n    // Ignore further gulp error messages\n    Logger.removeAllListeners('error');\n    Logger.on('error', () => {});\n\n    Session.closeOpen()\n      .then(() => process.kill(process.pid, signal))\n      .catch(e => {\n        Logger.error('Error in cleanup', e.message);\n        process.kill(process.pid, signal);\n      });\n\n    return false;\n  }\n\n  return true;\n}\n"],"file":"cleanup.js"}